{"version":3,"sources":["webpack:///./src/components/Layout/ContentLayout.js","webpack:///./node_modules/algoliasearch-helper/src/requestBuilder.js","webpack:///./node_modules/algoliasearch-helper/src/version.js","webpack:///./node_modules/algoliasearch-helper/src/algoliasearch.helper.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/utils.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createWidgetsManager.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/highlight.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/indexUtils.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createInstantSearchManager.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/version.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createStore.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/context.js","webpack:///./node_modules/react-instantsearch-core/dist/es/widgets/InstantSearch.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createConnector.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectHits.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/core/utils.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/Hits.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/widgets/Hits.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectSearchBox.js","webpack:///./src/components/Search/input.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectHighlight.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/Highlighter.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/Highlight.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/widgets/Highlight.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/Snippet.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/widgets/Snippet.js","webpack:///./src/components/Search/hitComps.js","webpack:///./src/components/Search/index.js","webpack:///./src/pages/search.js","webpack:///./node_modules/algoliasearch-helper/src/functions/formatSort.js","webpack:///./node_modules/algoliasearch/dist/algoliasearch-lite.umd.js","webpack:///./node_modules/algoliasearch-helper/src/functions/merge.js","webpack:///./node_modules/algoliasearch-helper/src/functions/find.js","webpack:///./node_modules/algoliasearch-helper/src/SearchParameters/RefinementList.js","webpack:///./node_modules/algoliasearch-helper/src/DerivedHelper/index.js","webpack:///./node_modules/algoliasearch-helper/index.js","webpack:///./node_modules/algoliasearch-helper/src/functions/inherits.js","webpack:///./node_modules/algoliasearch-helper/src/SearchParameters/index.js","webpack:///./node_modules/algoliasearch-helper/src/functions/intersection.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/algoliasearch-helper/src/functions/compact.js","webpack:///./node_modules/node-libs-browser/node_modules/events/events.js","webpack:///./node_modules/algoliasearch-helper/src/functions/objectHasKeys.js","webpack:///./node_modules/algoliasearch-helper/src/functions/defaultsPure.js","webpack:///./node_modules/algoliasearch-helper/src/SearchResults/generate-hierarchical-tree.js","webpack:///./node_modules/algoliasearch-helper/src/functions/valToNumber.js","webpack:///./node_modules/algoliasearch-helper/src/functions/findIndex.js","webpack:///./node_modules/algoliasearch-helper/src/functions/omit.js","webpack:///./node_modules/algoliasearch-helper/src/SearchResults/index.js","webpack:///./node_modules/algoliasearch-helper/src/functions/orderBy.js"],"names":["ContentLayout","render","this","props","breadcrumb_items","children","md","lg","className","Component","merge","requestBuilder","_getQueries","index","state","queries","push","indexName","params","_getHitsSearchParams","getRefinedDisjunctiveFacets","forEach","refinedFacet","_getDisjunctiveFacetSearchParams","getRefinedHierarchicalFacets","hierarchicalFacet","getHierarchicalFacetByName","currentRefinement","getHierarchicalRefinement","separator","_getHierarchicalFacetSeparator","length","split","facets","concat","disjunctiveFacets","_getHitsHierarchicalFacetsAttributes","facetFilters","_getFacetFilters","numericFilters","_getNumericFilters","additionalParams","tagFilters","_getTagFilters","getQueryParams","facet","hierarchicalRootLevel","hitsPerPage","page","attributesToRetrieve","attributesToHighlight","attributesToSnippet","analytics","clickAnalytics","_getDisjunctiveHierarchicalFacetAttribute","facetName","Object","keys","numericRefinements","attribute","operators","operator","values","value","Array","isArray","vs","map","v","tagRefinements","join","facetsRefinements","facetValue","facetsExcludes","disjunctiveFacetsRefinements","facetValues","orFilters","hierarchicalFacetsRefinements","undefined","attributeToRefine","attributesIndex","rootPath","_getHierarchicalRootPath","indexOf","slice","lastIndexOf","attributes","hierarchicalFacets","reduce","allAttributes","hierarchicalRefinement","name","level","newAttributes","rootLevel","attributeIndex","parentLevel","getSearchForFacetQuery","query","maxFacetHits","stateForSearchForFacetValues","isDisjunctiveFacet","clearRefinements","searchForFacetSearchParameters","facetQuery","module","exports","SearchParameters","SearchResults","DerivedHelper","events","inherits","objectHasKeys","version","AlgoliaSearchHelper","client","options","addAlgoliaAgent","setClient","opts","make","lastResults","_queryId","_lastQueryIdReceived","derivedHelpers","_currentNbQueries","setCurrentPage","Error","_change","setPage","isPageReset","getCurrentPage","EventEmitter","prototype","search","_search","onlyWithDerivedHelpers","searchOnlyWithDerivedHelpers","getQuery","searchOnce","cb","tempState","setQueryParameters","self","emit","then","content","results","_originalResponse","e","catch","err","searchForFacetValues","userState","clientHasSFFV","initIndex","isDisjunctive","algoliaQuery","facetHits","f","isRefined","isDisjunctiveFacetRefined","isFacetRefined","setQuery","q","resetPage","clearTags","addDisjunctiveFacetRefinement","addDisjunctiveRefine","apply","arguments","addHierarchicalFacetRefinement","addNumericRefinement","addFacetRefinement","addRefine","addFacetExclusion","addExcludeRefinement","addExclude","addTag","tag","addTagRefinement","removeNumericRefinement","removeDisjunctiveFacetRefinement","removeDisjunctiveRefine","removeHierarchicalFacetRefinement","removeFacetRefinement","removeRefine","removeFacetExclusion","removeExcludeRefinement","removeExclude","removeTag","removeTagRefinement","toggleFacetExclusion","toggleExcludeFacetRefinement","toggleExclude","toggleRefinement","toggleFacetRefinement","toggleRefine","toggleTag","toggleTagRefinement","nextPage","previousPage","setIndex","setQueryParameter","parameter","setState","newState","overrideStateWithoutTriggeringChangeEvent","hasRefinements","getNumericRefinements","isConjunctiveFacet","isHierarchicalFacet","isHierarchicalFacetRefined","isExcluded","isExcludeRefined","isDisjunctiveRefined","hasTag","isTagRefined","hasTagRefinements","getIndex","getPage","getTags","getRefinements","refinements","getConjunctiveRefinements","r","type","getExcludeRefinements","getDisjunctiveRefinements","getNumericRefinement","getHierarchicalFacetBreadcrumb","states","mainQueries","queriesCount","helper","derivedQueries","derivedHelper","derivedState","getModifiedState","derivedStateQueries","queryId","_dispatchAlgoliaResponse","bind","_dispatchAlgoliaError","error","s","specificResults","splice","formattedResponse","containsRefinement","_hasDisjunctiveRefinements","disjunctiveRefinements","event","clearCache","newClient","getClient","derive","fn","detachDerivedHelper","pos","hasPendingRequests","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","source","ownKeys","getOwnPropertySymbols","filter","sym","getOwnPropertyDescriptor","_classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","constructor","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","call","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_defineProperties","descriptor","_createClass","protoProps","staticProps","_setPrototypeOf","p","_inherits","subClass","superClass","create","_objectWithoutProperties","excluded","objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","shallowEqual","objA","objB","keysA","keysB","hasOwn","hasOwnProperty","resolved","Promise","resolve","removeEmptyKey","object","omit","sourceKeys","_key","createWidgetsManager","onWidgetsUpdate","widgets","scheduled","scheduleUpdate","registerWidget","widget","update","getWidgets","HIGHLIGHT_TAGS","highlightPreTag","highlightPostTag","parseHighlightedAttribute","_ref","preTag","postTag","_ref$highlightedValue","highlightedValue","splitByPreTag","firstValue","shift","elements","isHighlighted","splitByPostTag","parseAlgoliaHit","_ref2","_ref2$preTag","_ref2$postTag","highlightProperty","hit","path","highlightObject","replace","current","item","getIndexId","context","hasMultipleIndices","multiIndexContext","targetedIndex","ais","mainTargetedIndex","refineValue","searchState","nextRefinement","namespace","indexId","_objectSpread4","indices","refineMultiIndexWithNamespace","refineMultiIndex","refineSingleIndexWithNamespace","refineSingleIndex","getNamespaceAndAttributeName","id","parts","match","attributeName","getCurrentRefinementValue","defaultValue","_getNamespaceAndAttri","args","multiIndex","defaultRefinement","cleanUpValue","_getNamespaceAndAttri2","Boolean","_ref4","indexSearchState","cleanUpValueWithMultiIndex","_ref3","cleanUpValueWithSingleIndex","addAlgoliaAgents","searchClient","contextValue","indexContextValue","isTargetedIndexEqualIndex","isIndexWidget","isIndexWidgetEqualIndex","sortIndexWidgetsFirst","firstWidget","secondWidget","isFirstWidgetIndex","isSecondWidgetIndex","serializeQueryParameters","parameters","format","_len","encodeURIComponent","encode","toString","JSON","stringify","createInstantSearchManager","_ref$initialState","initialState","resultsState","stalledSearchDelay","on","stalledSearchTimer","setTimeout","_store$getState","store","getState","partialState","resultsFacetValues","isSearchStalled","handleSearchSuccess","handleSearchError","skip","initialSearchParameters","widgetsManager","metadata","getMetadata","searching","transporter","_cacheHydrated","_useCache","baseMethod","requests","_len2","methodArgs","_key2","requestsWithSerializedParams","request","responsesCache","get","method","set","acc","result","rawResults","cache","hydrateSearchClientWithMultiIndexRequest","hydrateSearchClientWithSingleIndexRequest","hydrateSearchClient","listeners","nextState","listener","subscribe","createStore","_internalIndexId","a","hydrateResultsState","searchingForFacetValues","getSearchParameters","sharedParameters","res","mainParameters","targetedIndexEqualMainIndex","subIndexEqualMainIndex","sort","derivedIndices","targetedIndexNotEqualMainIndex","subIndexNotEqualMainIndex","derivedParameters","_getSearchParameters","detach","isDerivedHelpersEmpty","getFacetByName","currentState","nextIsSearchStalled","clearTimeout","getWidgetsIds","meta","onSearchForFacetValues","_ref5","_ref5$maxFacetHits","maxFacetHitsWithinRange","Math","max","min","_objectSpread7","onExternalStateUpdate","nextSearchState","transitionState","updateClient","updateIndex","newIndex","skipSearch","_createContext","onInternalStateUpdate","createHrefForState","onSearchStateChange","onSearchParameters","InstantSearchConsumer","Consumer","InstantSearchProvider","Provider","_createContext2","IndexConsumer","isControlled","_Component","InstantSearch","_this","instantSearchManager","onWidgetsInternalStateUpdate","nextProps","prevState","nextIsControlled","previousSearchState","prevProps","prevIsControlled","refresh","isUnmounting","createURL","getKnownKeys","_searchState","count","createElement","string","isRequired","shape","func","bool","oneOfType","array","node","number","createConnector","connectorDesc","Composed","Connector","displayName","isWidget","providedProps","getProvidedProps","refine","_len3","_key3","_this2","unsubscribe","unregisterWidget","shouldComponentUpdate","propsEqual","cleanUp","_this$props$contextVa","searchResults","searchParameters","nextWidgetsState","prevWidgetsState","_this$props","refineProps","searchForFacetValuesProps","searchForItems","propTypes","defaultProps","createConnectorWithoutContext","hits","getResults","queryID","__queryID","addQueryID","__position","block","prefix","suitElements","element","baseClassName","style","borderBottom","paddingBottom","marginBottom","wordBreak","objectID","connectHits","_ref$className","_ref$hitComponent","hitComponent","HitComponent","getCurrentRefinement","_refine","connectSearchBox","_cleanUp","items","label","rest","placeholder","aria-label","onChange","_ref$preTag","_ref$postTag","highlight","cx","highlightedTagName","nonHighlightedTagName","TagName","tagName","parsedHighlightedValue","isLast","connectHighlight","PageHit","clickHandler","to","slug","onClick","PostHit","Row","marginTop","icon","fixedWidth","tags","Root","PoweredBy","fontSize","textAlign","margin","href","Search","collapse","ref","hitsAsGrid","createRef","useState","focus","setFocus","algoliasearch","process","handler","detectClickOutside","contains","useEffect","document","addEventListener","removeEventListener","useClickOutside","root","onFocus","hitComps","hitComp","searchIndices","title","lodash","require","pageQuery","SearchPages","groups","data","allMarkdownRemark","group","link","Container","fluid","kebabCase","fieldValue","totalCount","find","sortBy","defaults","defaultInstructions","out","sortInstruction","matchingDefault","defaultInstruction","t","n","getOwnPropertyDescriptors","defineProperties","u","next","done","return","from","localStorage","window","parse","getItem","miss","all","setItem","delete","clear","removeItem","caches","serializable","c","floor","random","l","h","d","entries","timeout","headers","queryParameters","cacheable","m","Read","Write","Any","y","status","lastUpdate","Date","now","b","protocol","url","accept","P","j","toLowerCase","userAgent","pop","message","transporterStackTrace","A","w","connectTimeout","timeouts","connect","responseTimeout","response","host","triesLeft","onSucess","onRetry","isTimedOut","logger","info","x","hostsCache","onFail","requester","send","getTimeout","statelessHosts","reverse","S","add","segment","T","charAt","substr","C","appId","authMode","apiKey","requestsCache","hosts","read","mappedRequestOptions","reject","write","methods","N","k","J","I","E","W","XMLHttpRequest","open","setRequestHeader","abort","onreadystatechange","readyState","OPENED","onerror","responseText","onload","debug","console","multipleQueries","multipleSearchForFacetValues","isObjectOrArrayOrFunction","_merge","sourceVal","targetVal","comparator","defaultsPure","lib","addRefinement","refinementList","valueAsString","facetRefinement","mod","removeRefinement","clearRefinement","refinementType","hasChanged","newRefinementList","memo","facetList","refinementValue","containsRefinements","refinementValueAsString","mainHelper","main","removeAllListeners","algoliasearchHelper","ctor","superCtor","intersection","valToNumber","RefinementList","isEqualNumericRefinement","every","el","newParameters","_parseNumbers","paramName","isKeyKnown","PARAMETERS","isValueDefined","numbers","parsedValue","parseFloat","isNaN","insideBoundingBox","geoRect","parsedValues","vPrime","toggleHierarchicalFacetRefinement","validate","patch","_clearNumericRefinements","newQuery","newPage","setFacets","setDisjunctiveFacets","setHitsPerPage","setTypoTolerance","typoTolerance","isNumericRefined","paramValue","op","val","newNumericRefinements","operatorList","outValues","addFacet","addDisjunctiveFacet","addHierarchicalFacet","modification","removeFacet","removeDisjunctiveFacet","removeHierarchicalFacet","toggleConjunctiveFacetRefinement","toggleDisjunctiveFacetRefinement","isOperatorDefined","searchedValue","isAttributeValueDefined","currentValue","disjunctiveNumericRefinedFacets","getUnrefinedDisjunctiveFacets","refinedFacets","managedParameters","queryParams","nextWithNumbers","previousPlainObject","nextPlainObject","previous","isPreviousValueDefined","isNextValueDefined","_getHierarchicalFacetSortBy","_getHierarchicalShowParentLevel","showParentLevel","hierarchicalFacetName","refinement","part","trim","arr1","arr2","webpackPolyfill","deprecate","paths","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","getOwnPropertyNames","NumberIsNaN","Number","init","once","emitter","eventListener","errorListener","removeListener","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","_getMaxListeners","that","_addListener","prepend","existing","warning","newListener","unshift","warned","String","warn","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","copy","arg","RangeError","setMaxListeners","getMaxListeners","doError","er","len","addListener","prependListener","prependOnceListener","list","position","originalListener","spliceOne","off","rawListeners","eventNames","sources","reduceRight","hierarchicalFacetResult","hierarchicalFacetIndex","hierarchicalFacetRefinement","hierarchicalSeparator","hierarchicalRootPath","hierarchicalShowParentLevel","prepareHierarchicalFacetSortBy","rootExhaustive","facetResult","exhaustive","generateTreeFn","hierarchicalTree","currentHierarchicalLevel","parent","subtree","picked","tuple","parentPath","onlyMatchingTree","orderBy","facetCount","generateHierarchicalTree","compact","findIndex","formatSort","getIndices","idx","assignFacetStats","dest","facetStats","stats","mainSubResponse","_rawResults","processingTimeMS","sum","facetsIndices","disjunctiveFacetsIndices","nextDisjunctiveResult","mainFacets","facetKey","hierarchicalAttributeName","facetValueObject","facetIndex","idxAttributeName","exhaustiveFacetsCount","isFacetDisjunctive","isFacetConjunctive","facets_stats","disjunctiveFacet","dfacet","facetResults","dataFromMainRequest","defaultData","excludes","_state","recSort","sortFn","childNode","sortedChildren","getFacetStatsIfAvailable","getRefinement","resultsFacets","predicate","DEFAULT_SORT","getFacetValues","extractNormalizedFacetValues","order","hierarchicalFacetValues","vanillaSortFn","getFacetStats","facetDeclaration","rootFacet","intermediateFacet","newFacet","numericValue","compareAscending","other","valIsDefined","valIsNull","othIsDefined","othIsNull","collection","iteratees","orders","criteria","iteratee"],"mappings":"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","file":"component---src-pages-search-js-fc5c02479ff7eb4a5996.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport {CoreLayout as Layout} from './CoreLayout'\nimport SideBar from '../Sidebar'\nimport BreadcrumbNav from '../BreadcrumbNav'\nimport PageFooter from '../PageFooter'\n\n\nclass ContentLayout extends Component {\n    render() {\n        const {breadcrumb_items, children} = this.props\n        return (\n            <Layout>\n                <SideBar/>\n                <Container >\n                    <Row>\n                        <Col md={10} lg={8} className={'offset-md-1 offset-lg-2'}>\n                            <Container>\n                                <BreadcrumbNav breadcrumb_items={breadcrumb_items} />\n                                <Row>\n                                    {children}\n                                </Row>\n                            </Container>\n                        </Col>\n                    </Row>\n                </Container>\n\n                <PageFooter />\n\n            </Layout>\n        )\n    }\n}\n\nContentLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport { ContentLayout }","'use strict';\n\nvar merge = require('./functions/merge');\n\nvar requestBuilder = {\n  /**\n   * Get all the queries to send to the client, those queries can used directly\n   * with the Algolia client.\n   * @private\n   * @return {object[]} The queries\n   */\n  _getQueries: function getQueries(index, state) {\n    var queries = []; // One query for the hits\n\n    queries.push({\n      indexName: index,\n      params: requestBuilder._getHitsSearchParams(state)\n    }); // One for each disjunctive facets\n\n    state.getRefinedDisjunctiveFacets().forEach(function (refinedFacet) {\n      queries.push({\n        indexName: index,\n        params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet)\n      });\n    }); // maybe more to get the root level of hierarchical facets when activated\n\n    state.getRefinedHierarchicalFacets().forEach(function (refinedFacet) {\n      var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n      var currentRefinement = state.getHierarchicalRefinement(refinedFacet); // if we are deeper than level 0 (starting from `beer > IPA`)\n      // we want to get the root values\n\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      if (currentRefinement.length > 0 && currentRefinement[0].split(separator).length > 1) {\n        queries.push({\n          indexName: index,\n          params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet, true)\n        });\n      }\n    });\n    return queries;\n  },\n\n  /**\n   * Build search parameters used to fetch hits\n   * @private\n   * @return {object.<string, any>}\n   */\n  _getHitsSearchParams: function _getHitsSearchParams(state) {\n    var facets = state.facets.concat(state.disjunctiveFacets).concat(requestBuilder._getHitsHierarchicalFacetsAttributes(state));\n\n    var facetFilters = requestBuilder._getFacetFilters(state);\n\n    var numericFilters = requestBuilder._getNumericFilters(state);\n\n    var tagFilters = requestBuilder._getTagFilters(state);\n\n    var additionalParams = {\n      facets: facets,\n      tagFilters: tagFilters\n    };\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    return merge({}, state.getQueryParams(), additionalParams);\n  },\n\n  /**\n   * Build search parameters used to fetch a disjunctive facet\n   * @private\n   * @param  {string} facet the associated facet name\n   * @param  {boolean} hierarchicalRootLevel ?? FIXME\n   * @return {object}\n   */\n  _getDisjunctiveFacetSearchParams: function _getDisjunctiveFacetSearchParams(state, facet, hierarchicalRootLevel) {\n    var facetFilters = requestBuilder._getFacetFilters(state, facet, hierarchicalRootLevel);\n\n    var numericFilters = requestBuilder._getNumericFilters(state, facet);\n\n    var tagFilters = requestBuilder._getTagFilters(state);\n\n    var additionalParams = {\n      hitsPerPage: 1,\n      page: 0,\n      attributesToRetrieve: [],\n      attributesToHighlight: [],\n      attributesToSnippet: [],\n      tagFilters: tagFilters,\n      analytics: false,\n      clickAnalytics: false\n    };\n    var hierarchicalFacet = state.getHierarchicalFacetByName(facet);\n\n    if (hierarchicalFacet) {\n      additionalParams.facets = requestBuilder._getDisjunctiveHierarchicalFacetAttribute(state, hierarchicalFacet, hierarchicalRootLevel);\n    } else {\n      additionalParams.facets = facet;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    return merge({}, state.getQueryParams(), additionalParams);\n  },\n\n  /**\n   * Return the numeric filters in an algolia request fashion\n   * @private\n   * @param {string} [facetName] the name of the attribute for which the filters should be excluded\n   * @return {string[]} the numeric filters in the algolia format\n   */\n  _getNumericFilters: function _getNumericFilters(state, facetName) {\n    if (state.numericFilters) {\n      return state.numericFilters;\n    }\n\n    var numericFilters = [];\n    Object.keys(state.numericRefinements).forEach(function (attribute) {\n      var operators = state.numericRefinements[attribute] || {};\n      Object.keys(operators).forEach(function (operator) {\n        var values = operators[operator] || [];\n\n        if (facetName !== attribute) {\n          values.forEach(function (value) {\n            if (Array.isArray(value)) {\n              var vs = value.map(function (v) {\n                return attribute + operator + v;\n              });\n              numericFilters.push(vs);\n            } else {\n              numericFilters.push(attribute + operator + value);\n            }\n          });\n        }\n      });\n    });\n    return numericFilters;\n  },\n\n  /**\n   * Return the tags filters depending\n   * @private\n   * @return {string}\n   */\n  _getTagFilters: function _getTagFilters(state) {\n    if (state.tagFilters) {\n      return state.tagFilters;\n    }\n\n    return state.tagRefinements.join(',');\n  },\n\n  /**\n   * Build facetFilters parameter based on current refinements. The array returned\n   * contains strings representing the facet filters in the algolia format.\n   * @private\n   * @param  {string} [facet] if set, the current disjunctive facet\n   * @return {array.<string>}\n   */\n  _getFacetFilters: function _getFacetFilters(state, facet, hierarchicalRootLevel) {\n    var facetFilters = [];\n    var facetsRefinements = state.facetsRefinements || {};\n    Object.keys(facetsRefinements).forEach(function (facetName) {\n      var facetValues = facetsRefinements[facetName] || [];\n      facetValues.forEach(function (facetValue) {\n        facetFilters.push(facetName + ':' + facetValue);\n      });\n    });\n    var facetsExcludes = state.facetsExcludes || {};\n    Object.keys(facetsExcludes).forEach(function (facetName) {\n      var facetValues = facetsExcludes[facetName] || [];\n      facetValues.forEach(function (facetValue) {\n        facetFilters.push(facetName + ':-' + facetValue);\n      });\n    });\n    var disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements || {};\n    Object.keys(disjunctiveFacetsRefinements).forEach(function (facetName) {\n      var facetValues = disjunctiveFacetsRefinements[facetName] || [];\n\n      if (facetName === facet || !facetValues || facetValues.length === 0) {\n        return;\n      }\n\n      var orFilters = [];\n      facetValues.forEach(function (facetValue) {\n        orFilters.push(facetName + ':' + facetValue);\n      });\n      facetFilters.push(orFilters);\n    });\n    var hierarchicalFacetsRefinements = state.hierarchicalFacetsRefinements || {};\n    Object.keys(hierarchicalFacetsRefinements).forEach(function (facetName) {\n      var facetValues = hierarchicalFacetsRefinements[facetName] || [];\n      var facetValue = facetValues[0];\n\n      if (facetValue === undefined) {\n        return;\n      }\n\n      var hierarchicalFacet = state.getHierarchicalFacetByName(facetName);\n\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n\n      var attributeToRefine;\n      var attributesIndex; // we ask for parent facet values only when the `facet` is the current hierarchical facet\n\n      if (facet === facetName) {\n        // if we are at the root level already, no need to ask for facet values, we get them from\n        // the hits query\n        if (facetValue.indexOf(separator) === -1 || !rootPath && hierarchicalRootLevel === true || rootPath && rootPath.split(separator).length === facetValue.split(separator).length) {\n          return;\n        }\n\n        if (!rootPath) {\n          attributesIndex = facetValue.split(separator).length - 2;\n          facetValue = facetValue.slice(0, facetValue.lastIndexOf(separator));\n        } else {\n          attributesIndex = rootPath.split(separator).length - 1;\n          facetValue = rootPath;\n        }\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      } else {\n        attributesIndex = facetValue.split(separator).length - 1;\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      }\n\n      if (attributeToRefine) {\n        facetFilters.push([attributeToRefine + ':' + facetValue]);\n      }\n    });\n    return facetFilters;\n  },\n  _getHitsHierarchicalFacetsAttributes: function _getHitsHierarchicalFacetsAttributes(state) {\n    var out = [];\n    return state.hierarchicalFacets.reduce( // ask for as much levels as there's hierarchical refinements\n    function getHitsAttributesForHierarchicalFacet(allAttributes, hierarchicalFacet) {\n      var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0]; // if no refinement, ask for root level\n\n      if (!hierarchicalRefinement) {\n        allAttributes.push(hierarchicalFacet.attributes[0]);\n        return allAttributes;\n      }\n\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      var level = hierarchicalRefinement.split(separator).length;\n      var newAttributes = hierarchicalFacet.attributes.slice(0, level + 1);\n      return allAttributes.concat(newAttributes);\n    }, out);\n  },\n  _getDisjunctiveHierarchicalFacetAttribute: function _getDisjunctiveHierarchicalFacetAttribute(state, hierarchicalFacet, rootLevel) {\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    if (rootLevel === true) {\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n\n      var attributeIndex = 0;\n\n      if (rootPath) {\n        attributeIndex = rootPath.split(separator).length;\n      }\n\n      return [hierarchicalFacet.attributes[attributeIndex]];\n    }\n\n    var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0] || ''; // if refinement is 'beers > IPA > Flying dog',\n    // then we want `facets: ['beers > IPA']` as disjunctive facet (parent level values)\n\n    var parentLevel = hierarchicalRefinement.split(separator).length - 1;\n    return hierarchicalFacet.attributes.slice(0, parentLevel + 1);\n  },\n  getSearchForFacetQuery: function getSearchForFacetQuery(facetName, query, maxFacetHits, state) {\n    var stateForSearchForFacetValues = state.isDisjunctiveFacet(facetName) ? state.clearRefinements(facetName) : state;\n    var searchForFacetSearchParameters = {\n      facetQuery: query,\n      facetName: facetName\n    };\n\n    if (typeof maxFacetHits === 'number') {\n      searchForFacetSearchParameters.maxFacetHits = maxFacetHits;\n    }\n\n    return merge({}, requestBuilder._getHitsSearchParams(stateForSearchForFacetValues), searchForFacetSearchParameters);\n  }\n};\nmodule.exports = requestBuilder;","'use strict';\n\nmodule.exports = '3.2.2';","'use strict';\n\nvar SearchParameters = require('./SearchParameters');\n\nvar SearchResults = require('./SearchResults');\n\nvar DerivedHelper = require('./DerivedHelper');\n\nvar requestBuilder = require('./requestBuilder');\n\nvar events = require('events');\n\nvar inherits = require('./functions/inherits');\n\nvar objectHasKeys = require('./functions/objectHasKeys');\n\nvar version = require('./version');\n/**\n * Event triggered when a parameter is set or updated\n * @event AlgoliaSearchHelper#event:change\n * @property {object} event\n * @property {SearchParameters} event.state the current parameters with the latest changes applied\n * @property {SearchResults} event.results the previous results received from Algolia. `null` before the first request\n * @example\n * helper.on('change', function(event) {\n *   console.log('The parameters have changed');\n * });\n */\n\n/**\n * Event triggered when a main search is sent to Algolia\n * @event AlgoliaSearchHelper#event:search\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search\n * @property {SearchResults} event.results the results from the previous search. `null` if it is the first search.\n * @example\n * helper.on('search', function(event) {\n *   console.log('Search sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchForFacetValues` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchForFacetValues\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @property {string} event.facet the facet searched into\n * @property {string} event.query the query used to search in the facets\n * @example\n * helper.on('searchForFacetValues', function(event) {\n *   console.log('searchForFacetValues sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchOnce` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchOnce\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @example\n * helper.on('searchOnce', function(event) {\n *   console.log('searchOnce sent');\n * });\n */\n\n/**\n * Event triggered when the results are retrieved from Algolia\n * @event AlgoliaSearchHelper#event:result\n * @property {object} event\n * @property {SearchResults} event.results the results received from Algolia\n * @property {SearchParameters} event.state the parameters used to query Algolia. Those might be different from the one in the helper instance (for example if the network is unreliable).\n * @example\n * helper.on('result', function(event) {\n *   console.log('Search results received');\n * });\n */\n\n/**\n * Event triggered when Algolia sends back an error. For example, if an unknown parameter is\n * used, the error can be caught using this event.\n * @event AlgoliaSearchHelper#event:error\n * @property {object} event\n * @property {Error} event.error the error returned by the Algolia.\n * @example\n * helper.on('error', function(event) {\n *   console.log('Houston we got a problem.');\n * });\n */\n\n/**\n * Event triggered when the queue of queries have been depleted (with any result or outdated queries)\n * @event AlgoliaSearchHelper#event:searchQueueEmpty\n * @example\n * helper.on('searchQueueEmpty', function() {\n *   console.log('No more search pending');\n *   // This is received before the result event if we're not expecting new results\n * });\n *\n * helper.search();\n */\n\n/**\n * Initialize a new AlgoliaSearchHelper\n * @class\n * @classdesc The AlgoliaSearchHelper is a class that ease the management of the\n * search. It provides an event based interface for search callbacks:\n *  - change: when the internal search state is changed.\n *    This event contains a {@link SearchParameters} object and the\n *    {@link SearchResults} of the last result if any.\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n *  - error: when the response is an error. This event contains the error returned by the server.\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the index name to query\n * @param  {SearchParameters | object} options an object defining the initial\n * config of the search. It doesn't have to be a {SearchParameters},\n * just an object containing the properties you need from it.\n */\n\n\nfunction AlgoliaSearchHelper(client, index, options) {\n  if (typeof client.addAlgoliaAgent === 'function') {\n    client.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.setClient(client);\n  var opts = options || {};\n  opts.index = index;\n  this.state = SearchParameters.make(opts);\n  this.lastResults = null;\n  this._queryId = 0;\n  this._lastQueryIdReceived = -1;\n  this.derivedHelpers = [];\n  this._currentNbQueries = 0;\n}\n\ninherits(AlgoliaSearchHelper, events.EventEmitter);\n/**\n * Start the search with the parameters set in the state. When the\n * method is called, it triggers a `search` event. The results will\n * be available through the `result` event. If an error occurs, an\n * `error` will be fired instead.\n * @return {AlgoliaSearchHelper}\n * @fires search\n * @fires result\n * @fires error\n * @chainable\n */\n\nAlgoliaSearchHelper.prototype.search = function () {\n  this._search({\n    onlyWithDerivedHelpers: false\n  });\n\n  return this;\n};\n\nAlgoliaSearchHelper.prototype.searchOnlyWithDerivedHelpers = function () {\n  this._search({\n    onlyWithDerivedHelpers: true\n  });\n\n  return this;\n};\n/**\n * Gets the search query parameters that would be sent to the Algolia Client\n * for the hits\n * @return {object} Query Parameters\n */\n\n\nAlgoliaSearchHelper.prototype.getQuery = function () {\n  var state = this.state;\n  return requestBuilder._getHitsSearchParams(state);\n};\n/**\n * Start a search using a modified version of the current state. This method does\n * not trigger the helper lifecycle and does not modify the state kept internally\n * by the helper. This second aspect means that the next search call will be the\n * same as a search call before calling searchOnce.\n * @param {object} options can contain all the parameters that can be set to SearchParameters\n * plus the index\n * @param {function} [callback] optional callback executed when the response from the\n * server is back.\n * @return {promise|undefined} if a callback is passed the method returns undefined\n * otherwise it returns a promise containing an object with two keys :\n *  - content with a SearchResults\n *  - state with the state used for the query as a SearchParameters\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the callback API\n * var state = helper.searchOnce({hitsPerPage: 1},\n *   function(error, content, state) {\n *     // if an error occurred it will be passed in error, otherwise its value is null\n *     // content contains the results formatted as a SearchResults\n *     // state is the instance of SearchParameters used for this search\n *   });\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the promise API\n * var state1 = helper.searchOnce({hitsPerPage: 1})\n *                 .then(promiseHandler);\n *\n * function promiseHandler(res) {\n *   // res contains\n *   // {\n *   //   content : SearchResults\n *   //   state   : SearchParameters (the one used for this specific search)\n *   // }\n * }\n */\n\n\nAlgoliaSearchHelper.prototype.searchOnce = function (options, cb) {\n  var tempState = !options ? this.state : this.state.setQueryParameters(options);\n\n  var queries = requestBuilder._getQueries(tempState.index, tempState);\n\n  var self = this;\n  this._currentNbQueries++;\n  this.emit('searchOnce', {\n    state: tempState\n  });\n\n  if (cb) {\n    this.client.search(queries).then(function (content) {\n      self._currentNbQueries--;\n\n      if (self._currentNbQueries === 0) {\n        self.emit('searchQueueEmpty');\n      }\n\n      cb(null, new SearchResults(tempState, content.results), tempState);\n    }).catch(function (err) {\n      self._currentNbQueries--;\n\n      if (self._currentNbQueries === 0) {\n        self.emit('searchQueueEmpty');\n      }\n\n      cb(err, null, tempState);\n    });\n    return undefined;\n  }\n\n  return this.client.search(queries).then(function (content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    return {\n      content: new SearchResults(tempState, content.results),\n      state: tempState,\n      _originalResponse: content\n    };\n  }, function (e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n/**\n * Structure of each result when using\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * @typedef FacetSearchHit\n * @type {object}\n * @property {string} value the facet value\n * @property {string} highlighted the facet value highlighted with the query string\n * @property {number} count number of occurrence of this facet value\n * @property {boolean} isRefined true if the value is already refined\n */\n\n/**\n * Structure of the data resolved by the\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * promise.\n * @typedef FacetSearchResult\n * @type {object}\n * @property {FacetSearchHit} facetHits the results for this search for facet values\n * @property {number} processingTimeMS time taken by the query inside the engine\n */\n\n/**\n * Search for facet values based on an query and the name of a faceted attribute. This\n * triggers a search and will return a promise. On top of using the query, it also sends\n * the parameters from the state so that the search is narrowed down to only the possible values.\n *\n * See the description of [FacetSearchResult](reference.html#FacetSearchResult)\n * @param {string} facet the name of the faceted attribute\n * @param {string} query the string query for the search\n * @param {number} [maxFacetHits] the maximum number values returned. Should be > 0 and <= 100\n * @param {object} [userState] the set of custom parameters to use on top of the current state. Setting a property to `undefined` removes\n * it in the generated query.\n * @return {promise.<FacetSearchResult>} the results of the search\n */\n\n\nAlgoliaSearchHelper.prototype.searchForFacetValues = function (facet, query, maxFacetHits, userState) {\n  var clientHasSFFV = typeof this.client.searchForFacetValues === 'function';\n\n  if (!clientHasSFFV && typeof this.client.initIndex !== 'function') {\n    throw new Error('search for facet values (searchable) was called, but this client does not have a function client.searchForFacetValues or client.initIndex(index).searchForFacetValues');\n  }\n\n  var state = this.state.setQueryParameters(userState || {});\n  var isDisjunctive = state.isDisjunctiveFacet(facet);\n  var algoliaQuery = requestBuilder.getSearchForFacetQuery(facet, query, maxFacetHits, state);\n  this._currentNbQueries++;\n  var self = this;\n  this.emit('searchForFacetValues', {\n    state: state,\n    facet: facet,\n    query: query\n  });\n  var searchForFacetValuesPromise = clientHasSFFV ? this.client.searchForFacetValues([{\n    indexName: state.index,\n    params: algoliaQuery\n  }]) : this.client.initIndex(state.index).searchForFacetValues(algoliaQuery);\n  return searchForFacetValuesPromise.then(function addIsRefined(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    content = Array.isArray(content) ? content[0] : content;\n    content.facetHits.forEach(function (f) {\n      f.isRefined = isDisjunctive ? state.isDisjunctiveFacetRefined(facet, f.value) : state.isFacetRefined(facet, f.value);\n    });\n    return content;\n  }, function (e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n/**\n * Sets the text query used for the search.\n *\n * This method resets the current page to 0.\n * @param  {string} q the user query\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.setQuery = function (q) {\n  this._change({\n    state: this.state.resetPage().setQuery(q),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Remove all the types of refinements except tags. A string can be provided to remove\n * only the refinements of a specific attribute. For more advanced use case, you can\n * provide a function instead. This function should follow the\n * [clearCallback definition](#SearchParameters.clearCallback).\n *\n * This method resets the current page to 0.\n * @param {string} [name] optional name of the facet / attribute on which we want to remove all refinements\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * // Removing all the refinements\n * helper.clearRefinements().search();\n * @example\n * // Removing all the filters on a the category attribute.\n * helper.clearRefinements('category').search();\n * @example\n * // Removing only the exclude filters on the category facet.\n * helper.clearRefinements(function(value, attribute, type) {\n *   return type === 'exclude' && attribute === 'category';\n * }).search();\n */\n\n\nAlgoliaSearchHelper.prototype.clearRefinements = function (name) {\n  this._change({\n    state: this.state.resetPage().clearRefinements(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Remove all the tag filters.\n *\n * This method resets the current page to 0.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.clearTags = function () {\n  this._change({\n    state: this.state.resetPage().clearTags(),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addDisjunctiveFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addDisjunctiveFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.addDisjunctiveRefine = function () {\n  return this.addDisjunctiveFacetRefinement.apply(this, arguments);\n};\n/**\n * Adds a refinement on a hierarchical facet. It will throw\n * an exception if the facet is not defined or if the facet\n * is already refined.\n *\n * This method resets the current page to 0.\n * @param {string} facet the facet name\n * @param {string} path the hierarchical facet path\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is refined\n * @chainable\n * @fires change\n */\n\n\nAlgoliaSearchHelper.prototype.addHierarchicalFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addHierarchicalFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds a an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} operator the operator of the filter\n * @param  {number} value the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addNumericRefinement = function (attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().addNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds a filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.addRefine = function () {\n  return this.addFacetRefinement.apply(this, arguments);\n};\n/**\n * Adds a an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetExclusion}\n */\n\n\nAlgoliaSearchHelper.prototype.addExclude = function () {\n  return this.addFacetExclusion.apply(this, arguments);\n};\n/**\n * Adds a tag filter with the `tag` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag the tag to add to the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().addTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Removes an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * Some parameters are optional, triggering different behavior:\n *  - if the value is not provided, then all the numeric value will be removed for the\n *  specified attribute/operator couple.\n *  - if the operator is not provided either, then all the numeric filter on this attribute\n *  will be removed.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} [operator] the operator of the filter\n * @param  {number} [value] the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeNumericRefinement = function (attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().removeNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Removes a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeDisjunctiveFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeDisjunctiveFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.removeDisjunctiveRefine = function () {\n  return this.removeDisjunctiveFacetRefinement.apply(this, arguments);\n};\n/**\n * Removes the refinement set on a hierarchical facet.\n * @param {string} facet the facet name\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is not refined\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeHierarchicalFacetRefinement = function (facet) {\n  this._change({\n    state: this.state.resetPage().removeHierarchicalFacetRefinement(facet),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Removes a filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.removeRefine = function () {\n  return this.removeFacetRefinement.apply(this, arguments);\n};\n/**\n * Removes an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetExclusion}\n */\n\n\nAlgoliaSearchHelper.prototype.removeExclude = function () {\n  return this.removeFacetExclusion.apply(this, arguments);\n};\n/**\n * Removes a tag filter with the `tag` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove from the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().removeTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds or removes an exclusion filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.toggleFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleExcludeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetExclusion}\n */\n\n\nAlgoliaSearchHelper.prototype.toggleExclude = function () {\n  return this.toggleFacetExclusion.apply(this, arguments);\n};\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n * @deprecated since version 2.19.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.toggleRefinement = function (facet, value) {\n  return this.toggleFacetRefinement(facet, value);\n};\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.toggleFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.toggleRefine = function () {\n  return this.toggleFacetRefinement.apply(this, arguments);\n};\n/**\n * Adds or removes a tag filter with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove or add\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.toggleTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().toggleTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Increments the page number by one.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setPage(0).nextPage().getPage();\n * // returns 1\n */\n\n\nAlgoliaSearchHelper.prototype.nextPage = function () {\n  var page = this.state.page || 0;\n  return this.setPage(page + 1);\n};\n/**\n * Decrements the page number by one.\n * @fires change\n * @return {AlgoliaSearchHelper}\n * @chainable\n * @example\n * helper.setPage(1).previousPage().getPage();\n * // returns 0\n */\n\n\nAlgoliaSearchHelper.prototype.previousPage = function () {\n  var page = this.state.page || 0;\n  return this.setPage(page - 1);\n};\n/**\n * @private\n */\n\n\nfunction setCurrentPage(page) {\n  if (page < 0) throw new Error('Page requested below 0.');\n\n  this._change({\n    state: this.state.setPage(page),\n    isPageReset: false\n  });\n\n  return this;\n}\n/**\n * Change the current page\n * @deprecated\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.setCurrentPage = setCurrentPage;\n/**\n * Updates the current page.\n * @function\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\nAlgoliaSearchHelper.prototype.setPage = setCurrentPage;\n/**\n * Updates the name of the index that will be targeted by the query.\n *\n * This method resets the current page to 0.\n * @param {string} name the index name\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\nAlgoliaSearchHelper.prototype.setIndex = function (name) {\n  this._change({\n    state: this.state.resetPage().setIndex(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Update a parameter of the search. This method reset the page\n *\n * The complete list of parameters is available on the\n * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).\n * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)\n * or benefit from higher-level APIs (all the kind of filters and facets have their own API)\n *\n * This method resets the current page to 0.\n * @param {string} parameter name of the parameter to update\n * @param {any} value new value of the parameter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setQueryParameter('hitsPerPage', 20).search();\n */\n\n\nAlgoliaSearchHelper.prototype.setQueryParameter = function (parameter, value) {\n  this._change({\n    state: this.state.resetPage().setQueryParameter(parameter, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Set the whole state (warning: will erase previous state)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.setState = function (newState) {\n  this._change({\n    state: SearchParameters.make(newState),\n    isPageReset: false\n  });\n\n  return this;\n};\n/**\n * Override the current state without triggering a change event.\n * Do not use this method unless you know what you are doing. (see the example\n * for a legit use case)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @example\n *  helper.on('change', function(state){\n *    // In this function you might want to find a way to store the state in the url/history\n *    updateYourURL(state)\n *  })\n *  window.onpopstate = function(event){\n *    // This is naive though as you should check if the state is really defined etc.\n *    helper.overrideStateWithoutTriggeringChangeEvent(event.state).search()\n *  }\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.overrideStateWithoutTriggeringChangeEvent = function (newState) {\n  this.state = new SearchParameters(newState);\n  return this;\n};\n/**\n * Check if an attribute has any numeric, conjunctive, disjunctive or hierarchical filters.\n * @param {string} attribute the name of the attribute\n * @return {boolean} true if the attribute is filtered by at least one value\n * @example\n * // hasRefinements works with numeric, conjunctive, disjunctive and hierarchical filters\n * helper.hasRefinements('price'); // false\n * helper.addNumericRefinement('price', '>', 100);\n * helper.hasRefinements('price'); // true\n *\n * helper.hasRefinements('color'); // false\n * helper.addFacetRefinement('color', 'blue');\n * helper.hasRefinements('color'); // true\n *\n * helper.hasRefinements('material'); // false\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * helper.hasRefinements('material'); // true\n *\n * helper.hasRefinements('categories'); // false\n * helper.toggleFacetRefinement('categories', 'kitchen > knife');\n * helper.hasRefinements('categories'); // true\n *\n */\n\n\nAlgoliaSearchHelper.prototype.hasRefinements = function (attribute) {\n  if (objectHasKeys(this.state.getNumericRefinements(attribute))) {\n    return true;\n  } else if (this.state.isConjunctiveFacet(attribute)) {\n    return this.state.isFacetRefined(attribute);\n  } else if (this.state.isDisjunctiveFacet(attribute)) {\n    return this.state.isDisjunctiveFacetRefined(attribute);\n  } else if (this.state.isHierarchicalFacet(attribute)) {\n    return this.state.isHierarchicalFacetRefined(attribute);\n  } // there's currently no way to know that the user did call `addNumericRefinement` at some point\n  // thus we cannot distinguish if there once was a numeric refinement that was cleared\n  // so we will return false in every other situations to be consistent\n  // while what we should do here is throw because we did not find the attribute in any type\n  // of refinement\n\n\n  return false;\n};\n/**\n * Check if a value is excluded for a specific faceted attribute. If the value\n * is omitted then the function checks if there is any excluding refinements.\n *\n * @param  {string}  facet name of the attribute for used for faceting\n * @param  {string}  [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n * @return {boolean} true if refined\n * @example\n * helper.isExcludeRefined('color'); // false\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // false\n *\n * helper.addFacetExclusion('color', 'red');\n *\n * helper.isExcludeRefined('color'); // true\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // true\n */\n\n\nAlgoliaSearchHelper.prototype.isExcluded = function (facet, value) {\n  return this.state.isExcludeRefined(facet, value);\n};\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}\n */\n\n\nAlgoliaSearchHelper.prototype.isDisjunctiveRefined = function (facet, value) {\n  return this.state.isDisjunctiveFacetRefined(facet, value);\n};\n/**\n * Check if the string is a currently filtering tag.\n * @param {string} tag tag to check\n * @return {boolean}\n */\n\n\nAlgoliaSearchHelper.prototype.hasTag = function (tag) {\n  return this.state.isTagRefined(tag);\n};\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasTag}\n */\n\n\nAlgoliaSearchHelper.prototype.isTagRefined = function () {\n  return this.hasTagRefinements.apply(this, arguments);\n};\n/**\n * Get the name of the currently used index.\n * @return {string}\n * @example\n * helper.setIndex('highestPrice_products').getIndex();\n * // returns 'highestPrice_products'\n */\n\n\nAlgoliaSearchHelper.prototype.getIndex = function () {\n  return this.state.index;\n};\n\nfunction getCurrentPage() {\n  return this.state.page;\n}\n/**\n * Get the currently selected page\n * @deprecated\n * @return {number} the current page\n */\n\n\nAlgoliaSearchHelper.prototype.getCurrentPage = getCurrentPage;\n/**\n * Get the currently selected page\n * @function\n * @return {number} the current page\n */\n\nAlgoliaSearchHelper.prototype.getPage = getCurrentPage;\n/**\n * Get all the tags currently set to filters the results.\n *\n * @return {string[]} The list of tags currently set.\n */\n\nAlgoliaSearchHelper.prototype.getTags = function () {\n  return this.state.tagRefinements;\n};\n/**\n * Get the list of refinements for a given attribute. This method works with\n * conjunctive, disjunctive, excluding and numerical filters.\n *\n * See also SearchResults#getRefinements\n *\n * @param {string} facetName attribute name used for faceting\n * @return {Array.<FacetRefinement|NumericRefinement>} All Refinement are objects that contain a value, and\n * a type. Numeric also contains an operator.\n * @example\n * helper.addNumericRefinement('price', '>', 100);\n * helper.getRefinements('price');\n * // [\n * //   {\n * //     \"value\": [\n * //       100\n * //     ],\n * //     \"operator\": \">\",\n * //     \"type\": \"numeric\"\n * //   }\n * // ]\n * @example\n * helper.addFacetRefinement('color', 'blue');\n * helper.addFacetExclusion('color', 'red');\n * helper.getRefinements('color');\n * // [\n * //   {\n * //     \"value\": \"blue\",\n * //     \"type\": \"conjunctive\"\n * //   },\n * //   {\n * //     \"value\": \"red\",\n * //     \"type\": \"exclude\"\n * //   }\n * // ]\n * @example\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * // [\n * //   {\n * //     \"value\": \"plastic\",\n * //     \"type\": \"disjunctive\"\n * //   }\n * // ]\n */\n\n\nAlgoliaSearchHelper.prototype.getRefinements = function (facetName) {\n  var refinements = [];\n\n  if (this.state.isConjunctiveFacet(facetName)) {\n    var conjRefinements = this.state.getConjunctiveRefinements(facetName);\n    conjRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'conjunctive'\n      });\n    });\n    var excludeRefinements = this.state.getExcludeRefinements(facetName);\n    excludeRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'exclude'\n      });\n    });\n  } else if (this.state.isDisjunctiveFacet(facetName)) {\n    var disjRefinements = this.state.getDisjunctiveRefinements(facetName);\n    disjRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'disjunctive'\n      });\n    });\n  }\n\n  var numericRefinements = this.state.getNumericRefinements(facetName);\n  Object.keys(numericRefinements).forEach(function (operator) {\n    var value = numericRefinements[operator];\n    refinements.push({\n      value: value,\n      operator: operator,\n      type: 'numeric'\n    });\n  });\n  return refinements;\n};\n/**\n * Return the current refinement for the (attribute, operator)\n * @param {string} attribute attribute in the record\n * @param {string} operator operator applied on the refined values\n * @return {Array.<number|number[]>} refined values\n */\n\n\nAlgoliaSearchHelper.prototype.getNumericRefinement = function (attribute, operator) {\n  return this.state.getNumericRefinement(attribute, operator);\n};\n/**\n * Get the current breadcrumb for a hierarchical facet, as an array\n * @param  {string} facetName Hierarchical facet name\n * @return {array.<string>} the path as an array of string\n */\n\n\nAlgoliaSearchHelper.prototype.getHierarchicalFacetBreadcrumb = function (facetName) {\n  return this.state.getHierarchicalFacetBreadcrumb(facetName);\n}; // /////////// PRIVATE\n\n/**\n * Perform the underlying queries\n * @private\n * @return {undefined}\n * @fires search\n * @fires result\n * @fires error\n */\n\n\nAlgoliaSearchHelper.prototype._search = function (options) {\n  var state = this.state;\n  var states = [];\n  var mainQueries = [];\n\n  if (!options.onlyWithDerivedHelpers) {\n    mainQueries = requestBuilder._getQueries(state.index, state);\n    states.push({\n      state: state,\n      queriesCount: mainQueries.length,\n      helper: this\n    });\n    this.emit('search', {\n      state: state,\n      results: this.lastResults\n    });\n  }\n\n  var derivedQueries = this.derivedHelpers.map(function (derivedHelper) {\n    var derivedState = derivedHelper.getModifiedState(state);\n\n    var derivedStateQueries = requestBuilder._getQueries(derivedState.index, derivedState);\n\n    states.push({\n      state: derivedState,\n      queriesCount: derivedStateQueries.length,\n      helper: derivedHelper\n    });\n    derivedHelper.emit('search', {\n      state: derivedState,\n      results: derivedHelper.lastResults\n    });\n    return derivedStateQueries;\n  });\n  var queries = Array.prototype.concat.apply(mainQueries, derivedQueries);\n  var queryId = this._queryId++;\n  this._currentNbQueries++;\n\n  try {\n    this.client.search(queries).then(this._dispatchAlgoliaResponse.bind(this, states, queryId)).catch(this._dispatchAlgoliaError.bind(this, queryId));\n  } catch (error) {\n    // If we reach this part, we're in an internal error state\n    this.emit('error', {\n      error: error\n    });\n  }\n};\n/**\n * Transform the responses as sent by the server and transform them into a user\n * usable object that merge the results of all the batch requests. It will dispatch\n * over the different helper + derived helpers (when there are some).\n * @private\n * @param {array.<{SearchParameters, AlgoliaQueries, AlgoliaSearchHelper}>}\n *  state state used for to generate the request\n * @param {number} queryId id of the current request\n * @param {object} content content of the response\n * @return {undefined}\n */\n\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaResponse = function (states, queryId, content) {\n  // FIXME remove the number of outdated queries discarded instead of just one\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n  var results = content.results.slice();\n  states.forEach(function (s) {\n    var state = s.state;\n    var queriesCount = s.queriesCount;\n    var helper = s.helper;\n    var specificResults = results.splice(0, queriesCount);\n    var formattedResponse = helper.lastResults = new SearchResults(state, specificResults);\n    helper.emit('result', {\n      results: formattedResponse,\n      state: state\n    });\n  });\n};\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaError = function (queryId, error) {\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n  this.emit('error', {\n    error: error\n  });\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n};\n\nAlgoliaSearchHelper.prototype.containsRefinement = function (query, facetFilters, numericFilters, tagFilters) {\n  return query || facetFilters.length !== 0 || numericFilters.length !== 0 || tagFilters.length !== 0;\n};\n/**\n * Test if there are some disjunctive refinements on the facet\n * @private\n * @param {string} facet the attribute to test\n * @return {boolean}\n */\n\n\nAlgoliaSearchHelper.prototype._hasDisjunctiveRefinements = function (facet) {\n  return this.state.disjunctiveRefinements[facet] && this.state.disjunctiveRefinements[facet].length > 0;\n};\n\nAlgoliaSearchHelper.prototype._change = function (event) {\n  var state = event.state;\n  var isPageReset = event.isPageReset;\n\n  if (state !== this.state) {\n    this.state = state;\n    this.emit('change', {\n      state: this.state,\n      results: this.lastResults,\n      isPageReset: isPageReset\n    });\n  }\n};\n/**\n * Clears the cache of the underlying Algolia client.\n * @return {AlgoliaSearchHelper}\n */\n\n\nAlgoliaSearchHelper.prototype.clearCache = function () {\n  this.client.clearCache && this.client.clearCache();\n  return this;\n};\n/**\n * Updates the internal client instance. If the reference of the clients\n * are equal then no update is actually done.\n * @param  {AlgoliaSearch} newClient an AlgoliaSearch client\n * @return {AlgoliaSearchHelper}\n */\n\n\nAlgoliaSearchHelper.prototype.setClient = function (newClient) {\n  if (this.client === newClient) return this;\n\n  if (typeof newClient.addAlgoliaAgent === 'function') {\n    newClient.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.client = newClient;\n  return this;\n};\n/**\n * Gets the instance of the currently used client.\n * @return {AlgoliaSearch}\n */\n\n\nAlgoliaSearchHelper.prototype.getClient = function () {\n  return this.client;\n};\n/**\n * Creates an derived instance of the Helper. A derived helper\n * is a way to request other indices synchronised with the lifecycle\n * of the main Helper. This mechanism uses the multiqueries feature\n * of Algolia to aggregate all the requests in a single network call.\n *\n * This method takes a function that is used to create a new SearchParameter\n * that will be used to create requests to Algolia. Those new requests\n * are created just before the `search` event. The signature of the function\n * is `SearchParameters -> SearchParameters`.\n *\n * This method returns a new DerivedHelper which is an EventEmitter\n * that fires the same `search`, `result` and `error` events. Those\n * events, however, will receive data specific to this DerivedHelper\n * and the SearchParameters that is returned by the call of the\n * parameter function.\n * @param {function} fn SearchParameters -> SearchParameters\n * @return {DerivedHelper}\n */\n\n\nAlgoliaSearchHelper.prototype.derive = function (fn) {\n  var derivedHelper = new DerivedHelper(this, fn);\n  this.derivedHelpers.push(derivedHelper);\n  return derivedHelper;\n};\n/**\n * This method detaches a derived Helper from the main one. Prefer using the one from the\n * derived helper itself, to remove the event listeners too.\n * @private\n * @return {undefined}\n * @throws Error\n */\n\n\nAlgoliaSearchHelper.prototype.detachDerivedHelper = function (derivedHelper) {\n  var pos = this.derivedHelpers.indexOf(derivedHelper);\n  if (pos === -1) throw new Error('Derived helper already detached');\n  this.derivedHelpers.splice(pos, 1);\n};\n/**\n * This method returns true if there is currently at least one on-going search.\n * @return {boolean} true if there is a search pending\n */\n\n\nAlgoliaSearchHelper.prototype.hasPendingRequests = function () {\n  return this._currentNbQueries > 0;\n};\n/**\n * @typedef AlgoliaSearchHelper.NumericRefinement\n * @type {object}\n * @property {number[]} value the numbers that are used for filtering this attribute with\n * the operator specified.\n * @property {string} operator the faceting data: value, number of entries\n * @property {string} type will be 'numeric'\n */\n\n/**\n * @typedef AlgoliaSearchHelper.FacetRefinement\n * @type {object}\n * @property {string} value the string use to filter the attribute\n * @property {string} type the type of filter: 'conjunctive', 'disjunctive', 'exclude'\n */\n\n\nmodule.exports = AlgoliaSearchHelper;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\"; // From https://github.com/reactjs/react-redux/blob/master/src/utils/shallowEqual.js\n\nexport var shallowEqual = function shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  } // Test for A's keys different from B.\n\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n      return false;\n    }\n  }\n\n  return true;\n};\nexport var getDisplayName = function getDisplayName(Component) {\n  return Component.displayName || Component.name || 'UnknownComponent';\n};\nvar resolved = Promise.resolve();\nexport var defer = function defer(f) {\n  resolved.then(f);\n};\n\nvar isPlainObject = function isPlainObject(value) {\n  return _typeof(value) === 'object' && value !== null && !Array.isArray(value);\n};\n\nexport var removeEmptyKey = function removeEmptyKey(obj) {\n  Object.keys(obj).forEach(function (key) {\n    var value = obj[key];\n\n    if (!isPlainObject(value)) {\n      return;\n    }\n\n    if (!objectHasKeys(value)) {\n      delete obj[key];\n    } else {\n      removeEmptyKey(value);\n    }\n  });\n  return obj;\n};\nexport var removeEmptyArraysFromObject = function removeEmptyArraysFromObject(obj) {\n  Object.keys(obj).forEach(function (key) {\n    var value = obj[key];\n\n    if (Array.isArray(value) && value.length === 0) {\n      delete obj[key];\n    }\n  });\n  return obj;\n};\nexport function addAbsolutePositions(hits, hitsPerPage, page) {\n  return hits.map(function (hit, index) {\n    return _objectSpread({}, hit, {\n      __position: hitsPerPage * page + index + 1\n    });\n  });\n}\nexport function addQueryID(hits, queryID) {\n  if (!queryID) {\n    return hits;\n  }\n\n  return hits.map(function (hit) {\n    return _objectSpread({}, hit, {\n      __queryID: queryID\n    });\n  });\n}\nexport function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n\n  return undefined;\n}\nexport function objectHasKeys(object) {\n  return object && Object.keys(object).length > 0;\n} // https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\n\nexport function omit(source, excluded) {\n  if (source === null || source === undefined) {\n    return {};\n  }\n\n  var target = {};\n  var sourceKeys = Object.keys(source);\n\n  for (var i = 0; i < sourceKeys.length; i++) {\n    var _key = sourceKeys[i];\n\n    if (excluded.indexOf(_key) >= 0) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    target[_key] = source[_key];\n  }\n\n  return target;\n}\n/**\n * Retrieve the value at a path of the object:\n *\n * @example\n * getPropertyByPath(\n *   { test: { this: { function: [{ now: { everyone: true } }] } } },\n *   'test.this.function[0].now.everyone'\n * ); // true\n *\n * getPropertyByPath(\n *   { test: { this: { function: [{ now: { everyone: true } }] } } },\n *   ['test', 'this', 'function', 0, 'now', 'everyone']\n * ); // true\n *\n * @param object Source object to query\n * @param path either an array of properties, or a string form of the properties, separated by .\n */\n\nexport var getPropertyByPath = function getPropertyByPath(object, path) {\n  return (Array.isArray(path) ? path : path.replace(/\\[(\\d+)]/g, '.$1').split('.')).reduce(function (current, key) {\n    return current ? current[key] : undefined;\n  }, object);\n};\nexport function getObjectType(object) {\n  return Object.prototype.toString.call(object).slice(8, -1);\n}","import { defer } from './utils';\nexport default function createWidgetsManager(onWidgetsUpdate) {\n  var widgets = []; // Is an update scheduled?\n\n  var scheduled = false; // The state manager's updates need to be batched since more than one\n  // component can register or unregister widgets during the same tick.\n\n  function scheduleUpdate() {\n    if (scheduled) {\n      return;\n    }\n\n    scheduled = true;\n    defer(function () {\n      scheduled = false;\n      onWidgetsUpdate();\n    });\n  }\n\n  return {\n    registerWidget: function registerWidget(widget) {\n      widgets.push(widget);\n      scheduleUpdate();\n      return function unregisterWidget() {\n        widgets.splice(widgets.indexOf(widget), 1);\n        scheduleUpdate();\n      };\n    },\n    update: scheduleUpdate,\n    getWidgets: function getWidgets() {\n      return widgets;\n    }\n  };\n}","import { getPropertyByPath } from './utils';\nexport var HIGHLIGHT_TAGS = {\n  highlightPreTag: \"<ais-highlight-0000000000>\",\n  highlightPostTag: \"</ais-highlight-0000000000>\"\n};\n/**\n * Parses an highlighted attribute into an array of objects with the string value, and\n * a boolean that indicated if this part is highlighted.\n *\n * @param {string} preTag - string used to identify the start of an highlighted value\n * @param {string} postTag - string used to identify the end of an highlighted value\n * @param {string} highlightedValue - highlighted attribute as returned by Algolia highlight feature\n * @return {object[]} - An array of {value: string, isHighlighted: boolean}.\n */\n\nfunction parseHighlightedAttribute(_ref) {\n  var preTag = _ref.preTag,\n      postTag = _ref.postTag,\n      _ref$highlightedValue = _ref.highlightedValue,\n      highlightedValue = _ref$highlightedValue === void 0 ? '' : _ref$highlightedValue;\n  var splitByPreTag = highlightedValue.split(preTag);\n  var firstValue = splitByPreTag.shift();\n  var elements = firstValue === '' ? [] : [{\n    value: firstValue,\n    isHighlighted: false\n  }];\n\n  if (postTag === preTag) {\n    var isHighlighted = true;\n    splitByPreTag.forEach(function (split) {\n      elements.push({\n        value: split,\n        isHighlighted: isHighlighted\n      });\n      isHighlighted = !isHighlighted;\n    });\n  } else {\n    splitByPreTag.forEach(function (split) {\n      var splitByPostTag = split.split(postTag);\n      elements.push({\n        value: splitByPostTag[0],\n        isHighlighted: true\n      });\n\n      if (splitByPostTag[1] !== '') {\n        elements.push({\n          value: splitByPostTag[1],\n          isHighlighted: false\n        });\n      }\n    });\n  }\n\n  return elements;\n}\n/**\n * Find an highlighted attribute given an `attribute` and an `highlightProperty`, parses it,\n * and provided an array of objects with the string value and a boolean if this\n * value is highlighted.\n *\n * In order to use this feature, highlight must be activated in the configuration of\n * the index. The `preTag` and `postTag` attributes are respectively highlightPreTag and\n * highlightPostTag in Algolia configuration.\n *\n * @param {string} preTag - string used to identify the start of an highlighted value\n * @param {string} postTag - string used to identify the end of an highlighted value\n * @param {string} highlightProperty - the property that contains the highlight structure in the results\n * @param {string} attribute - the highlighted attribute to look for\n * @param {object} hit - the actual hit returned by Algolia.\n * @return {object[]} - An array of {value: string, isHighlighted: boolean}.\n */\n\n\nexport function parseAlgoliaHit(_ref2) {\n  var _ref2$preTag = _ref2.preTag,\n      preTag = _ref2$preTag === void 0 ? '<em>' : _ref2$preTag,\n      _ref2$postTag = _ref2.postTag,\n      postTag = _ref2$postTag === void 0 ? '</em>' : _ref2$postTag,\n      highlightProperty = _ref2.highlightProperty,\n      attribute = _ref2.attribute,\n      hit = _ref2.hit;\n  if (!hit) throw new Error('`hit`, the matching record, must be provided');\n  var highlightObject = getPropertyByPath(hit[highlightProperty], attribute) || {};\n\n  if (Array.isArray(highlightObject)) {\n    return highlightObject.map(function (item) {\n      return parseHighlightedAttribute({\n        preTag: preTag,\n        postTag: postTag,\n        highlightedValue: item.value\n      });\n    });\n  }\n\n  return parseHighlightedAttribute({\n    preTag: preTag,\n    postTag: postTag,\n    highlightedValue: highlightObject.value\n  });\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport { omit } from './utils';\nexport function getIndexId(context) {\n  return hasMultipleIndices(context) ? context.multiIndexContext.targetedIndex : context.ais.mainTargetedIndex;\n}\nexport function getResults(searchResults, context) {\n  if (searchResults.results) {\n    if (searchResults.results.hits) {\n      return searchResults.results;\n    }\n\n    var indexId = getIndexId(context);\n\n    if (searchResults.results[indexId]) {\n      return searchResults.results[indexId];\n    }\n  }\n\n  return null;\n}\nexport function hasMultipleIndices(context) {\n  return context && context.multiIndexContext;\n} // eslint-disable-next-line max-params\n\nexport function refineValue(searchState, nextRefinement, context, resetPage, namespace) {\n  if (hasMultipleIndices(context)) {\n    var indexId = getIndexId(context);\n    return namespace ? refineMultiIndexWithNamespace(searchState, nextRefinement, indexId, resetPage, namespace) : refineMultiIndex(searchState, nextRefinement, indexId, resetPage);\n  } else {\n    // When we have a multi index page with shared widgets we should also\n    // reset their page to 1 if the resetPage is provided. Otherwise the\n    // indices will always be reset\n    // see: https://github.com/algolia/react-instantsearch/issues/310\n    // see: https://github.com/algolia/react-instantsearch/issues/637\n    if (searchState.indices && resetPage) {\n      Object.keys(searchState.indices).forEach(function (targetedIndex) {\n        searchState = refineValue(searchState, {\n          page: 1\n        }, {\n          multiIndexContext: {\n            targetedIndex: targetedIndex\n          }\n        }, true, namespace);\n      });\n    }\n\n    return namespace ? refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) : refineSingleIndex(searchState, nextRefinement, resetPage);\n  }\n}\n\nfunction refineMultiIndex(searchState, nextRefinement, indexId, resetPage) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  var state = searchState.indices && searchState.indices[indexId] ? _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, searchState.indices[indexId], nextRefinement, page))) : _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, nextRefinement, page)));\n  return _objectSpread({}, searchState, {\n    indices: state\n  });\n}\n\nfunction refineSingleIndex(searchState, nextRefinement, resetPage) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  return _objectSpread({}, searchState, nextRefinement, page);\n} // eslint-disable-next-line max-params\n\n\nfunction refineMultiIndexWithNamespace(searchState, nextRefinement, indexId, resetPage, namespace) {\n  var _objectSpread4;\n\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  var state = searchState.indices && searchState.indices[indexId] ? _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, searchState.indices[indexId], (_objectSpread4 = {}, _defineProperty(_objectSpread4, namespace, _objectSpread({}, searchState.indices[indexId][namespace], nextRefinement)), _defineProperty(_objectSpread4, \"page\", 1), _objectSpread4)))) : _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread(_defineProperty({}, namespace, nextRefinement), page)));\n  return _objectSpread({}, searchState, {\n    indices: state\n  });\n}\n\nfunction refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  return _objectSpread({}, searchState, _defineProperty({}, namespace, _objectSpread({}, searchState[namespace], nextRefinement)), page);\n}\n\nfunction getNamespaceAndAttributeName(id) {\n  var parts = id.match(/^([^.]*)\\.(.*)/);\n  var namespace = parts && parts[1];\n  var attributeName = parts && parts[2];\n  return {\n    namespace: namespace,\n    attributeName: attributeName\n  };\n}\n\nfunction hasRefinements(_ref) {\n  var multiIndex = _ref.multiIndex,\n      indexId = _ref.indexId,\n      namespace = _ref.namespace,\n      attributeName = _ref.attributeName,\n      id = _ref.id,\n      searchState = _ref.searchState;\n\n  if (multiIndex && namespace) {\n    return searchState.indices && searchState.indices[indexId] && searchState.indices[indexId][namespace] && Object.hasOwnProperty.call(searchState.indices[indexId][namespace], attributeName);\n  }\n\n  if (multiIndex) {\n    return searchState.indices && searchState.indices[indexId] && Object.hasOwnProperty.call(searchState.indices[indexId], id);\n  }\n\n  if (namespace) {\n    return searchState[namespace] && Object.hasOwnProperty.call(searchState[namespace], attributeName);\n  }\n\n  return Object.hasOwnProperty.call(searchState, id);\n}\n\nfunction getRefinements(_ref2) {\n  var multiIndex = _ref2.multiIndex,\n      indexId = _ref2.indexId,\n      namespace = _ref2.namespace,\n      attributeName = _ref2.attributeName,\n      id = _ref2.id,\n      searchState = _ref2.searchState;\n\n  if (multiIndex && namespace) {\n    return searchState.indices[indexId][namespace][attributeName];\n  }\n\n  if (multiIndex) {\n    return searchState.indices[indexId][id];\n  }\n\n  if (namespace) {\n    return searchState[namespace][attributeName];\n  }\n\n  return searchState[id];\n}\n\nexport function getCurrentRefinementValue(props, searchState, context, id, defaultValue) {\n  var indexId = getIndexId(context);\n\n  var _getNamespaceAndAttri = getNamespaceAndAttributeName(id),\n      namespace = _getNamespaceAndAttri.namespace,\n      attributeName = _getNamespaceAndAttri.attributeName;\n\n  var multiIndex = hasMultipleIndices(context);\n  var args = {\n    multiIndex: multiIndex,\n    indexId: indexId,\n    namespace: namespace,\n    attributeName: attributeName,\n    id: id,\n    searchState: searchState\n  };\n  var hasRefinementsValue = hasRefinements(args);\n\n  if (hasRefinementsValue) {\n    return getRefinements(args);\n  }\n\n  if (props.defaultRefinement) {\n    return props.defaultRefinement;\n  }\n\n  return defaultValue;\n}\nexport function cleanUpValue(searchState, context, id) {\n  var indexId = getIndexId(context);\n\n  var _getNamespaceAndAttri2 = getNamespaceAndAttributeName(id),\n      namespace = _getNamespaceAndAttri2.namespace,\n      attributeName = _getNamespaceAndAttri2.attributeName;\n\n  if (hasMultipleIndices(context) && Boolean(searchState.indices)) {\n    return cleanUpValueWithMultiIndex({\n      attribute: attributeName,\n      searchState: searchState,\n      indexId: indexId,\n      id: id,\n      namespace: namespace\n    });\n  }\n\n  return cleanUpValueWithSingleIndex({\n    attribute: attributeName,\n    searchState: searchState,\n    id: id,\n    namespace: namespace\n  });\n}\n\nfunction cleanUpValueWithSingleIndex(_ref3) {\n  var searchState = _ref3.searchState,\n      id = _ref3.id,\n      namespace = _ref3.namespace,\n      attribute = _ref3.attribute;\n\n  if (namespace) {\n    return _objectSpread({}, searchState, _defineProperty({}, namespace, omit(searchState[namespace], [attribute])));\n  }\n\n  return omit(searchState, [id]);\n}\n\nfunction cleanUpValueWithMultiIndex(_ref4) {\n  var searchState = _ref4.searchState,\n      indexId = _ref4.indexId,\n      id = _ref4.id,\n      namespace = _ref4.namespace,\n      attribute = _ref4.attribute;\n  var indexSearchState = searchState.indices[indexId];\n\n  if (namespace && indexSearchState) {\n    return _objectSpread({}, searchState, {\n      indices: _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, indexSearchState, _defineProperty({}, namespace, omit(indexSearchState[namespace], [attribute])))))\n    });\n  }\n\n  if (indexSearchState) {\n    return _objectSpread({}, searchState, {\n      indices: _objectSpread({}, searchState.indices, _defineProperty({}, indexId, omit(indexSearchState, [id])))\n    });\n  }\n\n  return searchState;\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport createWidgetsManager from './createWidgetsManager';\nimport createStore from './createStore';\nimport { HIGHLIGHT_TAGS } from './highlight';\nimport { hasMultipleIndices } from './indexUtils';\nimport { version as ReactVersion } from 'react';\nimport version from './version';\n\nfunction addAlgoliaAgents(searchClient) {\n  if (typeof searchClient.addAlgoliaAgent === 'function') {\n    searchClient.addAlgoliaAgent(\"react (\".concat(ReactVersion, \")\"));\n    searchClient.addAlgoliaAgent(\"react-instantsearch (\".concat(version, \")\"));\n  }\n}\n\nvar isMultiIndexContext = function isMultiIndexContext(widget) {\n  return hasMultipleIndices({\n    ais: widget.props.contextValue,\n    multiIndexContext: widget.props.indexContextValue\n  });\n};\n\nvar isTargetedIndexEqualIndex = function isTargetedIndexEqualIndex(widget, indexId) {\n  return widget.props.indexContextValue.targetedIndex === indexId;\n}; // Relying on the `indexId` is a bit brittle to detect the `Index` widget.\n// Since it's a class we could rely on `instanceof` or similar. We never\n// had an issue though. Works for now.\n\n\nvar isIndexWidget = function isIndexWidget(widget) {\n  return Boolean(widget.props.indexId);\n};\n\nvar isIndexWidgetEqualIndex = function isIndexWidgetEqualIndex(widget, indexId) {\n  return widget.props.indexId === indexId;\n};\n\nvar sortIndexWidgetsFirst = function sortIndexWidgetsFirst(firstWidget, secondWidget) {\n  var isFirstWidgetIndex = isIndexWidget(firstWidget);\n  var isSecondWidgetIndex = isIndexWidget(secondWidget);\n\n  if (isFirstWidgetIndex && !isSecondWidgetIndex) {\n    return -1;\n  }\n\n  if (!isFirstWidgetIndex && isSecondWidgetIndex) {\n    return 1;\n  }\n\n  return 0;\n}; // This function is copied from the algoliasearch v4 API Client. If modified,\n// consider updating it also in `serializeQueryParameters` from `@algolia/transporter`.\n\n\nfunction serializeQueryParameters(parameters) {\n  var isObjectOrArray = function isObjectOrArray(value) {\n    return Object.prototype.toString.call(value) === '[object Object]' || Object.prototype.toString.call(value) === '[object Array]';\n  };\n\n  var encode = function encode(format) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var i = 0;\n    return format.replace(/%s/g, function () {\n      return encodeURIComponent(args[i++]);\n    });\n  };\n\n  return Object.keys(parameters).map(function (key) {\n    return encode('%s=%s', key, isObjectOrArray(parameters[key]) ? JSON.stringify(parameters[key]) : parameters[key]);\n  }).join('&');\n}\n/**\n * Creates a new instance of the InstantSearchManager which controls the widgets and\n * trigger the search when the widgets are updated.\n * @param {string} indexName - the main index name\n * @param {object} initialState - initial widget state\n * @param {object} SearchParameters - optional additional parameters to send to the algolia API\n * @param {number} stalledSearchDelay - time (in ms) after the search is stalled\n * @return {InstantSearchManager} a new instance of InstantSearchManager\n */\n\n\nexport default function createInstantSearchManager(_ref) {\n  var indexName = _ref.indexName,\n      _ref$initialState = _ref.initialState,\n      initialState = _ref$initialState === void 0 ? {} : _ref$initialState,\n      searchClient = _ref.searchClient,\n      resultsState = _ref.resultsState,\n      stalledSearchDelay = _ref.stalledSearchDelay;\n  var helper = algoliasearchHelper(searchClient, indexName, _objectSpread({}, HIGHLIGHT_TAGS));\n  addAlgoliaAgents(searchClient);\n  helper.on('search', handleNewSearch).on('result', handleSearchSuccess({\n    indexId: indexName\n  })).on('error', handleSearchError);\n  var skip = false;\n  var stalledSearchTimer = null;\n  var initialSearchParameters = helper.state;\n  var widgetsManager = createWidgetsManager(onWidgetsUpdate);\n  hydrateSearchClient(searchClient, resultsState);\n  var store = createStore({\n    widgets: initialState,\n    metadata: [],\n    results: hydrateResultsState(resultsState),\n    error: null,\n    searching: false,\n    isSearchStalled: true,\n    searchingForFacetValues: false\n  });\n\n  function skipSearch() {\n    skip = true;\n  }\n\n  function updateClient(client) {\n    addAlgoliaAgents(client);\n    helper.setClient(client);\n    search();\n  }\n\n  function clearCache() {\n    helper.clearCache();\n    search();\n  }\n\n  function getMetadata(state) {\n    return widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getMetadata);\n    }).map(function (widget) {\n      return widget.getMetadata(state);\n    });\n  }\n\n  function getSearchParameters() {\n    var sharedParameters = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      return !isMultiIndexContext(widget) && !isIndexWidget(widget);\n    }).reduce(function (res, widget) {\n      return widget.getSearchParameters(res);\n    }, initialSearchParameters);\n    var mainParameters = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      var targetedIndexEqualMainIndex = isMultiIndexContext(widget) && isTargetedIndexEqualIndex(widget, indexName);\n      var subIndexEqualMainIndex = isIndexWidget(widget) && isIndexWidgetEqualIndex(widget, indexName);\n      return targetedIndexEqualMainIndex || subIndexEqualMainIndex;\n    }) // We have to sort the `Index` widgets first so the `index` parameter\n    // is correctly set in the `reduce` function for the following widgets\n    .sort(sortIndexWidgetsFirst).reduce(function (res, widget) {\n      return widget.getSearchParameters(res);\n    }, sharedParameters);\n    var derivedIndices = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      var targetedIndexNotEqualMainIndex = isMultiIndexContext(widget) && !isTargetedIndexEqualIndex(widget, indexName);\n      var subIndexNotEqualMainIndex = isIndexWidget(widget) && !isIndexWidgetEqualIndex(widget, indexName);\n      return targetedIndexNotEqualMainIndex || subIndexNotEqualMainIndex;\n    }) // We have to sort the `Index` widgets first so the `index` parameter\n    // is correctly set in the `reduce` function for the following widgets\n    .sort(sortIndexWidgetsFirst).reduce(function (indices, widget) {\n      var indexId = isMultiIndexContext(widget) ? widget.props.indexContextValue.targetedIndex : widget.props.indexId;\n      var widgets = indices[indexId] || [];\n      return _objectSpread({}, indices, _defineProperty({}, indexId, widgets.concat(widget)));\n    }, {});\n    var derivedParameters = Object.keys(derivedIndices).map(function (indexId) {\n      return {\n        parameters: derivedIndices[indexId].reduce(function (res, widget) {\n          return widget.getSearchParameters(res);\n        }, sharedParameters),\n        indexId: indexId\n      };\n    });\n    return {\n      mainParameters: mainParameters,\n      derivedParameters: derivedParameters\n    };\n  }\n\n  function search() {\n    if (!skip) {\n      var _getSearchParameters = getSearchParameters(helper.state),\n          mainParameters = _getSearchParameters.mainParameters,\n          derivedParameters = _getSearchParameters.derivedParameters; // We have to call `slice` because the method `detach` on the derived\n      // helpers mutates the value `derivedHelpers`. The `forEach` loop does\n      // not iterate on each value and we're not able to correctly clear the\n      // previous derived helpers (memory leak + useless requests).\n\n\n      helper.derivedHelpers.slice().forEach(function (derivedHelper) {\n        // Since we detach the derived helpers on **every** new search they\n        // won't receive intermediate results in case of a stalled search.\n        // Only the last result is dispatched by the derived helper because\n        // they are not detached yet:\n        //\n        // - a -> main helper receives results\n        // - ap -> main helper receives results\n        // - app -> main helper + derived helpers receive results\n        //\n        // The quick fix is to avoid to detach them on search but only once they\n        // received the results. But it means that in case of a stalled search\n        // all the derived helpers not detached yet register a new search inside\n        // the helper. The number grows fast in case of a bad network and it's\n        // not deterministic.\n        derivedHelper.detach();\n      });\n      derivedParameters.forEach(function (_ref2) {\n        var indexId = _ref2.indexId,\n            parameters = _ref2.parameters;\n        var derivedHelper = helper.derive(function () {\n          return parameters;\n        });\n        derivedHelper.on('result', handleSearchSuccess({\n          indexId: indexId\n        })).on('error', handleSearchError);\n      });\n      helper.setState(mainParameters);\n      helper.search();\n    }\n  }\n\n  function handleSearchSuccess(_ref3) {\n    var indexId = _ref3.indexId;\n    return function (event) {\n      var state = store.getState();\n      var isDerivedHelpersEmpty = !helper.derivedHelpers.length;\n      var results = state.results ? state.results : {}; // Switching from mono index to multi index and vice versa must reset the\n      // results to an empty object, otherwise we keep reference of stalled and\n      // unused results.\n\n      results = !isDerivedHelpersEmpty && results.getFacetByName ? {} : results;\n\n      if (!isDerivedHelpersEmpty) {\n        results = _objectSpread({}, results, _defineProperty({}, indexId, event.results));\n      } else {\n        results = event.results;\n      }\n\n      var currentState = store.getState();\n      var nextIsSearchStalled = currentState.isSearchStalled;\n\n      if (!helper.hasPendingRequests()) {\n        clearTimeout(stalledSearchTimer);\n        stalledSearchTimer = null;\n        nextIsSearchStalled = false;\n      }\n\n      var resultsFacetValues = currentState.resultsFacetValues,\n          partialState = _objectWithoutProperties(currentState, [\"resultsFacetValues\"]);\n\n      store.setState(_objectSpread({}, partialState, {\n        results: results,\n        isSearchStalled: nextIsSearchStalled,\n        searching: false,\n        error: null\n      }));\n    };\n  }\n\n  function handleSearchError(_ref4) {\n    var error = _ref4.error;\n    var currentState = store.getState();\n    var nextIsSearchStalled = currentState.isSearchStalled;\n\n    if (!helper.hasPendingRequests()) {\n      clearTimeout(stalledSearchTimer);\n      nextIsSearchStalled = false;\n    }\n\n    var resultsFacetValues = currentState.resultsFacetValues,\n        partialState = _objectWithoutProperties(currentState, [\"resultsFacetValues\"]);\n\n    store.setState(_objectSpread({}, partialState, {\n      isSearchStalled: nextIsSearchStalled,\n      error: error,\n      searching: false\n    }));\n  }\n\n  function handleNewSearch() {\n    if (!stalledSearchTimer) {\n      stalledSearchTimer = setTimeout(function () {\n        var _store$getState = store.getState(),\n            resultsFacetValues = _store$getState.resultsFacetValues,\n            partialState = _objectWithoutProperties(_store$getState, [\"resultsFacetValues\"]);\n\n        store.setState(_objectSpread({}, partialState, {\n          isSearchStalled: true\n        }));\n      }, stalledSearchDelay);\n    }\n  }\n\n  function hydrateSearchClient(client, results) {\n    if (!results) {\n      return;\n    } // Disable cache hydration on:\n    // - Algoliasearch API Client < v4 with cache disabled\n    // - Third party clients (detected by the `addAlgoliaAgent` function missing)\n\n\n    if ((!client.transporter || client._cacheHydrated) && (!client._useCache || typeof client.addAlgoliaAgent !== 'function')) {\n      return;\n    } // Algoliasearch API Client >= v4\n    // To hydrate the client we need to populate the cache with the data from\n    // the server (done in `hydrateSearchClientWithMultiIndexRequest` or\n    // `hydrateSearchClientWithSingleIndexRequest`). But since there is no way\n    // for us to compute the key the same way as `algoliasearch-client` we need\n    // to populate it on a custom key and override the `search` method to\n    // search on it first.\n\n\n    if (client.transporter && !client._cacheHydrated) {\n      client._cacheHydrated = true;\n      var baseMethod = client.search;\n\n      client.search = function (requests) {\n        for (var _len2 = arguments.length, methodArgs = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          methodArgs[_key2 - 1] = arguments[_key2];\n        }\n\n        var requestsWithSerializedParams = requests.map(function (request) {\n          return _objectSpread({}, request, {\n            params: serializeQueryParameters(request.params)\n          });\n        });\n        return client.transporter.responsesCache.get({\n          method: 'search',\n          args: [requestsWithSerializedParams].concat(methodArgs)\n        }, function () {\n          return baseMethod.apply(void 0, [requests].concat(methodArgs));\n        });\n      };\n    }\n\n    if (Array.isArray(results)) {\n      hydrateSearchClientWithMultiIndexRequest(client, results);\n      return;\n    }\n\n    hydrateSearchClientWithSingleIndexRequest(client, results);\n  }\n\n  function hydrateSearchClientWithMultiIndexRequest(client, results) {\n    // Algoliasearch API Client >= v4\n    // Populate the cache with the data from the server\n    if (client.transporter) {\n      client.transporter.responsesCache.set({\n        method: 'search',\n        args: [results.reduce(function (acc, result) {\n          return acc.concat(result.rawResults.map(function (request) {\n            return {\n              indexName: request.index,\n              params: request.params\n            };\n          }));\n        }, [])]\n      }, {\n        results: results.reduce(function (acc, result) {\n          return acc.concat(result.rawResults);\n        }, [])\n      });\n      return;\n    } // Algoliasearch API Client < v4\n    // Prior to client v4 we didn't have a proper API to hydrate the client\n    // cache from the outside. The following code populates the cache with\n    // a single-index result. You can find more information about the\n    // computation of the key inside the client (see link below).\n    // https://github.com/algolia/algoliasearch-client-javascript/blob/c27e89ff92b2a854ae6f40dc524bffe0f0cbc169/src/AlgoliaSearchCore.js#L232-L240\n\n\n    var key = \"/1/indexes/*/queries_body_\".concat(JSON.stringify({\n      requests: results.reduce(function (acc, result) {\n        return acc.concat(result.rawResults.map(function (request) {\n          return {\n            indexName: request.index,\n            params: request.params\n          };\n        }));\n      }, [])\n    }));\n    client.cache = _objectSpread({}, client.cache, _defineProperty({}, key, JSON.stringify({\n      results: results.reduce(function (acc, result) {\n        return acc.concat(result.rawResults);\n      }, [])\n    })));\n  }\n\n  function hydrateSearchClientWithSingleIndexRequest(client, results) {\n    // Algoliasearch API Client >= v4\n    // Populate the cache with the data from the server\n    if (client.transporter) {\n      client.transporter.responsesCache.set({\n        method: 'search',\n        args: [results.rawResults.map(function (request) {\n          return {\n            indexName: request.index,\n            params: request.params\n          };\n        })]\n      }, {\n        results: results.rawResults\n      });\n      return;\n    } // Algoliasearch API Client < v4\n    // Prior to client v4 we didn't have a proper API to hydrate the client\n    // cache from the outside. The following code populates the cache with\n    // a single-index result. You can find more information about the\n    // computation of the key inside the client (see link below).\n    // https://github.com/algolia/algoliasearch-client-javascript/blob/c27e89ff92b2a854ae6f40dc524bffe0f0cbc169/src/AlgoliaSearchCore.js#L232-L240\n\n\n    var key = \"/1/indexes/*/queries_body_\".concat(JSON.stringify({\n      requests: results.rawResults.map(function (request) {\n        return {\n          indexName: request.index,\n          params: request.params\n        };\n      })\n    }));\n    client.cache = _objectSpread({}, client.cache, _defineProperty({}, key, JSON.stringify({\n      results: results.rawResults\n    })));\n  }\n\n  function hydrateResultsState(results) {\n    if (!results) {\n      return null;\n    }\n\n    if (Array.isArray(results)) {\n      return results.reduce(function (acc, result) {\n        return _objectSpread({}, acc, _defineProperty({}, result._internalIndexId, new algoliasearchHelper.SearchResults(new algoliasearchHelper.SearchParameters(result.state), result.rawResults)));\n      }, {});\n    }\n\n    return new algoliasearchHelper.SearchResults(new algoliasearchHelper.SearchParameters(results.state), results.rawResults);\n  } // Called whenever a widget has been rendered with new props.\n\n\n  function onWidgetsUpdate() {\n    var metadata = getMetadata(store.getState().widgets);\n    store.setState(_objectSpread({}, store.getState(), {\n      metadata: metadata,\n      searching: true\n    })); // Since the `getSearchParameters` method of widgets also depends on props,\n    // the result search parameters might have changed.\n\n    search();\n  }\n\n  function transitionState(nextSearchState) {\n    var searchState = store.getState().widgets;\n    return widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.transitionState);\n    }).reduce(function (res, widget) {\n      return widget.transitionState(searchState, res);\n    }, nextSearchState);\n  }\n\n  function onExternalStateUpdate(nextSearchState) {\n    var metadata = getMetadata(nextSearchState);\n    store.setState(_objectSpread({}, store.getState(), {\n      widgets: nextSearchState,\n      metadata: metadata,\n      searching: true\n    }));\n    search();\n  }\n\n  function onSearchForFacetValues(_ref5) {\n    var facetName = _ref5.facetName,\n        query = _ref5.query,\n        _ref5$maxFacetHits = _ref5.maxFacetHits,\n        maxFacetHits = _ref5$maxFacetHits === void 0 ? 10 : _ref5$maxFacetHits; // The values 1, 100 are the min / max values that the engine accepts.\n    // see: https://www.algolia.com/doc/api-reference/api-parameters/maxFacetHits\n\n    var maxFacetHitsWithinRange = Math.max(1, Math.min(maxFacetHits, 100));\n    store.setState(_objectSpread({}, store.getState(), {\n      searchingForFacetValues: true\n    }));\n    helper.searchForFacetValues(facetName, query, maxFacetHitsWithinRange).then(function (content) {\n      var _objectSpread7;\n\n      store.setState(_objectSpread({}, store.getState(), {\n        error: null,\n        searchingForFacetValues: false,\n        resultsFacetValues: _objectSpread({}, store.getState().resultsFacetValues, (_objectSpread7 = {}, _defineProperty(_objectSpread7, facetName, content.facetHits), _defineProperty(_objectSpread7, \"query\", query), _objectSpread7))\n      }));\n    }, function (error) {\n      store.setState(_objectSpread({}, store.getState(), {\n        searchingForFacetValues: false,\n        error: error\n      }));\n    }).catch(function (error) {\n      // Since setState is synchronous, any error that occurs in the render of a\n      // component will be swallowed by this promise.\n      // This is a trick to make the error show up correctly in the console.\n      // See http://stackoverflow.com/a/30741722/969302\n      setTimeout(function () {\n        throw error;\n      });\n    });\n  }\n\n  function updateIndex(newIndex) {\n    initialSearchParameters = initialSearchParameters.setIndex(newIndex); // No need to trigger a new search here as the widgets will also update and trigger it if needed.\n  }\n\n  function getWidgetsIds() {\n    return store.getState().metadata.reduce(function (res, meta) {\n      return typeof meta.id !== 'undefined' ? res.concat(meta.id) : res;\n    }, []);\n  }\n\n  return {\n    store: store,\n    widgetsManager: widgetsManager,\n    getWidgetsIds: getWidgetsIds,\n    getSearchParameters: getSearchParameters,\n    onSearchForFacetValues: onSearchForFacetValues,\n    onExternalStateUpdate: onExternalStateUpdate,\n    transitionState: transitionState,\n    updateClient: updateClient,\n    updateIndex: updateIndex,\n    clearCache: clearCache,\n    skipSearch: skipSearch\n  };\n}","export default '6.7.0';","export default function createStore(initialState) {\n  var state = initialState;\n  var listeners = [];\n  return {\n    getState: function getState() {\n      return state;\n    },\n    setState: function setState(nextState) {\n      state = nextState;\n      listeners.forEach(function (listener) {\n        return listener();\n      });\n    },\n    subscribe: function subscribe(listener) {\n      listeners.push(listener);\n      return function unsubscribe() {\n        listeners.splice(listeners.indexOf(listener), 1);\n      };\n    }\n  };\n}","import { createContext } from 'react';\n\nvar _createContext = createContext({\n  onInternalStateUpdate: function onInternalStateUpdate() {\n    return undefined;\n  },\n  createHrefForState: function createHrefForState() {\n    return '#';\n  },\n  onSearchForFacetValues: function onSearchForFacetValues() {\n    return undefined;\n  },\n  onSearchStateChange: function onSearchStateChange() {\n    return undefined;\n  },\n  onSearchParameters: function onSearchParameters() {\n    return undefined;\n  },\n  store: {},\n  widgetsManager: {},\n  mainTargetedIndex: ''\n}),\n    InstantSearchConsumer = _createContext.Consumer,\n    InstantSearchProvider = _createContext.Provider;\n\nexport { InstantSearchConsumer, InstantSearchProvider };\n\nvar _createContext2 = createContext(undefined),\n    IndexConsumer = _createContext2.Consumer,\n    IndexProvider = _createContext2.Provider;\n\nexport { IndexConsumer, IndexProvider };","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component, Children } from 'react';\nimport isEqual from 'react-fast-compare';\nimport PropTypes from 'prop-types';\nimport createInstantSearchManager from '../core/createInstantSearchManager';\nimport { InstantSearchProvider } from '../core/context';\n\nfunction isControlled(props) {\n  return Boolean(props.searchState);\n}\n/**\n * @description\n * `<InstantSearch>` is the root component of all React InstantSearch implementations.\n * It provides all the connected components (aka widgets) a means to interact\n * with the searchState.\n * @kind widget\n * @name <InstantSearch>\n * @requirements You will need to have an Algolia account to be able to use this widget.\n * [Create one now](https://www.algolia.com/users/sign_up).\n * @propType {string} indexName - Main index in which to search.\n * @propType {boolean} [refresh=false] - Flag to activate when the cache needs to be cleared so that the front-end is updated when a change occurs in the index.\n * @propType {object} [searchClient] - Provide a custom search client.\n * @propType {func} [onSearchStateChange] - Function to be called everytime a new search is done. Useful for [URL Routing](guide/Routing.html).\n * @propType {object} [searchState] - Object to inject some search state. Switches the InstantSearch component in controlled mode. Useful for [URL Routing](guide/Routing.html).\n * @propType {func} [createURL] - Function to call when creating links, useful for [URL Routing](guide/Routing.html).\n * @propType {SearchResults|SearchResults[]} [resultsState] - Use this to inject the results that will be used at first rendering. Those results are found by using the `findResultsState` function. Useful for [Server Side Rendering](guide/Server-side_rendering.html).\n * @propType {number} [stalledSearchDelay=200] - The amount of time before considering that the search takes too much time. The time is expressed in milliseconds.\n * @propType {{ Root: string|function, props: object }} [root] - Use this to customize the root element. Default value: `{ Root: 'div' }`\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox />\n *     <Hits />\n *   </InstantSearch>\n * );\n */\n\n\nvar InstantSearch = /*#__PURE__*/function (_Component) {\n  _inherits(InstantSearch, _Component);\n\n  _createClass(InstantSearch, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var nextIsControlled = isControlled(nextProps);\n      var previousSearchState = prevState.instantSearchManager.store.getState().widgets;\n      var nextSearchState = nextProps.searchState;\n\n      if (nextIsControlled && !isEqual(previousSearchState, nextSearchState)) {\n        prevState.instantSearchManager.onExternalStateUpdate(nextProps.searchState);\n      }\n\n      return {\n        isControlled: nextIsControlled,\n        contextValue: _objectSpread({}, prevState.contextValue, {\n          mainTargetedIndex: nextProps.indexName\n        })\n      };\n    }\n  }]);\n\n  function InstantSearch(props) {\n    var _this;\n\n    _classCallCheck(this, InstantSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstantSearch).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"isUnmounting\", false);\n\n    var instantSearchManager = createInstantSearchManager({\n      indexName: _this.props.indexName,\n      searchClient: _this.props.searchClient,\n      initialState: _this.props.searchState || {},\n      resultsState: _this.props.resultsState,\n      stalledSearchDelay: _this.props.stalledSearchDelay\n    });\n    var contextValue = {\n      store: instantSearchManager.store,\n      widgetsManager: instantSearchManager.widgetsManager,\n      mainTargetedIndex: _this.props.indexName,\n      onInternalStateUpdate: _this.onWidgetsInternalStateUpdate.bind(_assertThisInitialized(_this)),\n      createHrefForState: _this.createHrefForState.bind(_assertThisInitialized(_this)),\n      onSearchForFacetValues: _this.onSearchForFacetValues.bind(_assertThisInitialized(_this)),\n      onSearchStateChange: _this.onSearchStateChange.bind(_assertThisInitialized(_this)),\n      onSearchParameters: _this.onSearchParameters.bind(_assertThisInitialized(_this))\n    };\n    _this.state = {\n      isControlled: isControlled(_this.props),\n      instantSearchManager: instantSearchManager,\n      contextValue: contextValue\n    };\n    return _this;\n  }\n\n  _createClass(InstantSearch, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevIsControlled = isControlled(prevProps);\n\n      if (prevIsControlled && !this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being controlled to uncontrolled\");\n      }\n\n      if (!prevIsControlled && this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being uncontrolled to controlled\");\n      }\n\n      if (this.props.refresh !== prevProps.refresh && this.props.refresh) {\n        this.state.instantSearchManager.clearCache();\n      }\n\n      if (prevProps.indexName !== this.props.indexName) {\n        this.state.instantSearchManager.updateIndex(this.props.indexName);\n      }\n\n      if (prevProps.searchClient !== this.props.searchClient) {\n        this.state.instantSearchManager.updateClient(this.props.searchClient);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.isUnmounting = true;\n      this.state.instantSearchManager.skipSearch();\n    }\n  }, {\n    key: \"createHrefForState\",\n    value: function createHrefForState(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      return this.state.isControlled && this.props.createURL ? this.props.createURL(searchState, this.getKnownKeys()) : '#';\n    }\n  }, {\n    key: \"onWidgetsInternalStateUpdate\",\n    value: function onWidgetsInternalStateUpdate(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      this.onSearchStateChange(searchState);\n\n      if (!this.state.isControlled) {\n        this.state.instantSearchManager.onExternalStateUpdate(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchStateChange\",\n    value: function onSearchStateChange(searchState) {\n      if (this.props.onSearchStateChange && !this.isUnmounting) {\n        this.props.onSearchStateChange(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchParameters\",\n    value: function onSearchParameters(getSearchParameters, context, props) {\n      if (this.props.onSearchParameters) {\n        var _searchState = this.props.searchState ? this.props.searchState : {};\n\n        this.props.onSearchParameters(getSearchParameters, context, props, _searchState);\n      }\n    }\n  }, {\n    key: \"onSearchForFacetValues\",\n    value: function onSearchForFacetValues(searchState) {\n      this.state.instantSearchManager.onSearchForFacetValues(searchState);\n    }\n  }, {\n    key: \"getKnownKeys\",\n    value: function getKnownKeys() {\n      return this.state.instantSearchManager.getWidgetsIds();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (Children.count(this.props.children) === 0) {\n        return null;\n      }\n\n      return React.createElement(InstantSearchProvider, {\n        value: this.state.contextValue\n      }, this.props.children);\n    }\n  }]);\n\n  return InstantSearch;\n}(Component);\n\n_defineProperty(InstantSearch, \"defaultProps\", {\n  stalledSearchDelay: 200,\n  refresh: false\n});\n\n_defineProperty(InstantSearch, \"propTypes\", {\n  // @TODO: These props are currently constant.\n  indexName: PropTypes.string.isRequired,\n  searchClient: PropTypes.shape({\n    search: PropTypes.func.isRequired,\n    searchForFacetValues: PropTypes.func,\n    addAlgoliaAgent: PropTypes.func,\n    clearCache: PropTypes.func\n  }).isRequired,\n  createURL: PropTypes.func,\n  refresh: PropTypes.bool,\n  searchState: PropTypes.object,\n  onSearchStateChange: PropTypes.func,\n  onSearchParameters: PropTypes.func,\n  resultsState: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  children: PropTypes.node,\n  stalledSearchDelay: PropTypes.number\n});\n\nexport default InstantSearch;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport isEqual from 'react-fast-compare';\nimport { shallowEqual, getDisplayName, removeEmptyKey } from './utils';\nimport { InstantSearchConsumer, IndexConsumer } from './context';\n/**\n * Connectors are the HOC used to transform React components\n * into InstantSearch widgets.\n * In order to simplify the construction of such connectors\n * `createConnector` takes a description and transform it into\n * a connector.\n * @param {ConnectorDescription} connectorDesc the description of the connector\n * @return {Connector} a function that wraps a component into\n * an instantsearch connected one.\n */\n\nexport function createConnectorWithoutContext(connectorDesc) {\n  if (!connectorDesc.displayName) {\n    throw new Error('`createConnector` requires you to provide a `displayName` property.');\n  }\n\n  var isWidget = typeof connectorDesc.getSearchParameters === 'function' || typeof connectorDesc.getMetadata === 'function' || typeof connectorDesc.transitionState === 'function';\n  return function (Composed) {\n    var Connector = /*#__PURE__*/function (_Component) {\n      _inherits(Connector, _Component);\n\n      function Connector(props) {\n        var _this;\n\n        _classCallCheck(this, Connector);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(Connector).call(this, props));\n\n        _defineProperty(_assertThisInitialized(_this), \"unsubscribe\", void 0);\n\n        _defineProperty(_assertThisInitialized(_this), \"unregisterWidget\", void 0);\n\n        _defineProperty(_assertThisInitialized(_this), \"isUnmounting\", false);\n\n        _defineProperty(_assertThisInitialized(_this), \"state\", {\n          providedProps: _this.getProvidedProps(_this.props)\n        });\n\n        _defineProperty(_assertThisInitialized(_this), \"refine\", function () {\n          var _ref;\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          _this.props.contextValue.onInternalStateUpdate( // refine will always be defined here because the prop is only given conditionally\n          (_ref = connectorDesc.refine).call.apply(_ref, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n\n        _defineProperty(_assertThisInitialized(_this), \"createURL\", function () {\n          var _ref2;\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          return _this.props.contextValue.createHrefForState( // refine will always be defined here because the prop is only given conditionally\n          (_ref2 = connectorDesc.refine).call.apply(_ref2, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n\n        _defineProperty(_assertThisInitialized(_this), \"searchForFacetValues\", function () {\n          var _ref3;\n\n          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            args[_key3] = arguments[_key3];\n          }\n\n          _this.props.contextValue.onSearchForFacetValues( // searchForFacetValues will always be defined here because the prop is only given conditionally\n          (_ref3 = connectorDesc.searchForFacetValues).call.apply(_ref3, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n\n        if (connectorDesc.getSearchParameters) {\n          _this.props.contextValue.onSearchParameters(connectorDesc.getSearchParameters.bind(_assertThisInitialized(_this)), {\n            ais: _this.props.contextValue,\n            multiIndexContext: _this.props.indexContextValue\n          }, _this.props);\n        }\n\n        return _this;\n      }\n\n      _createClass(Connector, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          this.unsubscribe = this.props.contextValue.store.subscribe(function () {\n            if (!_this2.isUnmounting) {\n              _this2.setState({\n                providedProps: _this2.getProvidedProps(_this2.props)\n              });\n            }\n          });\n\n          if (isWidget) {\n            this.unregisterWidget = this.props.contextValue.widgetsManager.registerWidget(this);\n          }\n        }\n      }, {\n        key: \"shouldComponentUpdate\",\n        value: function shouldComponentUpdate(nextProps, nextState) {\n          if (typeof connectorDesc.shouldComponentUpdate === 'function') {\n            return connectorDesc.shouldComponentUpdate.call(this, this.props, nextProps, this.state, nextState);\n          }\n\n          var propsEqual = shallowEqual(this.props, nextProps);\n\n          if (this.state.providedProps === null || nextState.providedProps === null) {\n            if (this.state.providedProps === nextState.providedProps) {\n              return !propsEqual;\n            }\n\n            return true;\n          }\n\n          return !propsEqual || !shallowEqual(this.state.providedProps, nextState.providedProps);\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate(prevProps) {\n          if (!isEqual(prevProps, this.props)) {\n            this.setState({\n              providedProps: this.getProvidedProps(this.props)\n            });\n\n            if (isWidget) {\n              this.props.contextValue.widgetsManager.update();\n\n              if (typeof connectorDesc.transitionState === 'function') {\n                this.props.contextValue.onSearchStateChange(connectorDesc.transitionState.call(this, this.props, this.props.contextValue.store.getState().widgets, this.props.contextValue.store.getState().widgets));\n              }\n            }\n          }\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.isUnmounting = true;\n\n          if (this.unsubscribe) {\n            this.unsubscribe();\n          }\n\n          if (this.unregisterWidget) {\n            this.unregisterWidget();\n\n            if (typeof connectorDesc.cleanUp === 'function') {\n              var nextState = connectorDesc.cleanUp.call(this, this.props, this.props.contextValue.store.getState().widgets);\n              this.props.contextValue.store.setState(_objectSpread({}, this.props.contextValue.store.getState(), {\n                widgets: nextState\n              }));\n              this.props.contextValue.onSearchStateChange(removeEmptyKey(nextState));\n            }\n          }\n        }\n      }, {\n        key: \"getProvidedProps\",\n        value: function getProvidedProps(props) {\n          var _this$props$contextVa = this.props.contextValue.store.getState(),\n              widgets = _this$props$contextVa.widgets,\n              results = _this$props$contextVa.results,\n              resultsFacetValues = _this$props$contextVa.resultsFacetValues,\n              searching = _this$props$contextVa.searching,\n              searchingForFacetValues = _this$props$contextVa.searchingForFacetValues,\n              isSearchStalled = _this$props$contextVa.isSearchStalled,\n              metadata = _this$props$contextVa.metadata,\n              error = _this$props$contextVa.error;\n\n          var searchResults = {\n            results: results,\n            searching: searching,\n            searchingForFacetValues: searchingForFacetValues,\n            isSearchStalled: isSearchStalled,\n            error: error\n          };\n          return connectorDesc.getProvidedProps.call(this, props, widgets, searchResults, metadata, // @MAJOR: move this attribute on the `searchResults` it doesn't\n          // makes sense to have it into a separate argument. The search\n          // flags are on the object why not the results?\n          resultsFacetValues);\n        }\n      }, {\n        key: \"getSearchParameters\",\n        value: function getSearchParameters(searchParameters) {\n          if (typeof connectorDesc.getSearchParameters === 'function') {\n            return connectorDesc.getSearchParameters.call(this, searchParameters, this.props, this.props.contextValue.store.getState().widgets);\n          }\n\n          return null;\n        }\n      }, {\n        key: \"getMetadata\",\n        value: function getMetadata(nextWidgetsState) {\n          if (typeof connectorDesc.getMetadata === 'function') {\n            return connectorDesc.getMetadata.call(this, this.props, nextWidgetsState);\n          }\n\n          return {};\n        }\n      }, {\n        key: \"transitionState\",\n        value: function transitionState(prevWidgetsState, nextWidgetsState) {\n          if (typeof connectorDesc.transitionState === 'function') {\n            return connectorDesc.transitionState.call(this, this.props, prevWidgetsState, nextWidgetsState);\n          }\n\n          return nextWidgetsState;\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props = this.props,\n              contextValue = _this$props.contextValue,\n              props = _objectWithoutProperties(_this$props, [\"contextValue\"]);\n\n          var providedProps = this.state.providedProps;\n\n          if (providedProps === null) {\n            return null;\n          }\n\n          var refineProps = typeof connectorDesc.refine === 'function' ? {\n            refine: this.refine,\n            createURL: this.createURL\n          } : {};\n          var searchForFacetValuesProps = typeof connectorDesc.searchForFacetValues === 'function' ? {\n            searchForItems: this.searchForFacetValues\n          } : {};\n          return React.createElement(Composed, _extends({}, props, providedProps, refineProps, searchForFacetValuesProps));\n        }\n      }]);\n\n      return Connector;\n    }(Component);\n\n    _defineProperty(Connector, \"displayName\", \"\".concat(connectorDesc.displayName, \"(\").concat(getDisplayName(Composed), \")\"));\n\n    _defineProperty(Connector, \"propTypes\", connectorDesc.propTypes);\n\n    _defineProperty(Connector, \"defaultProps\", connectorDesc.defaultProps);\n\n    return Connector;\n  };\n}\n\nvar createConnectorWithContext = function createConnectorWithContext(connectorDesc) {\n  return function (Composed) {\n    var Connector = createConnectorWithoutContext(connectorDesc)(Composed);\n\n    var ConnectorWrapper = function ConnectorWrapper(props) {\n      return React.createElement(InstantSearchConsumer, null, function (contextValue) {\n        return React.createElement(IndexConsumer, null, function (indexContextValue) {\n          return React.createElement(Connector, _extends({\n            contextValue: contextValue,\n            indexContextValue: indexContextValue\n          }, props));\n        });\n      });\n    };\n\n    return ConnectorWrapper;\n  };\n};\n\nexport default createConnectorWithContext;","import createConnector from '../core/createConnector';\nimport { getResults } from '../core/indexUtils';\nimport { addAbsolutePositions, addQueryID } from '../core/utils';\n/**\n * connectHits connector provides the logic to create connected\n * components that will render the results retrieved from\n * Algolia.\n *\n * To configure the number of hits retrieved, use [HitsPerPage widget](widgets/HitsPerPage.html),\n * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or pass the hitsPerPage\n * prop to a [Configure](guide/Search_parameters.html) widget.\n *\n * **Warning:** you will need to use the **objectID** property available on every hit as a key\n * when iterating over them. This will ensure you have the best possible UI experience\n * especially on slow networks.\n * @name connectHits\n * @kind connector\n * @providedPropType {array.<object>} hits - the records that matched the search state\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, Highlight, connectHits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n * const CustomHits = connectHits(({ hits }) => (\n *   <div>\n *     {hits.map(hit =>\n *       <p key={hit.objectID}>\n *         <Highlight attribute=\"name\" hit={hit} />\n *       </p>\n *     )}\n *   </div>\n * ));\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <CustomHits />\n *   </InstantSearch>\n * );\n */\n\nexport default createConnector({\n  displayName: 'AlgoliaHits',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return {\n        hits: []\n      };\n    }\n\n    var hitsWithPositions = addAbsolutePositions(results.hits, results.hitsPerPage, results.page);\n    var hitsWithPositionsAndQueryID = addQueryID(hitsWithPositions, results.queryID);\n    return {\n      hits: hitsWithPositionsAndQueryID\n    };\n  },\n\n  /**\n   * Hits needs to be considered as a widget to trigger a search,\n   * even if no other widgets are used.\n   *\n   * To be considered as a widget you need either:\n   * - getSearchParameters\n   * - getMetadata\n   * - transitionState\n   *\n   * See: createConnector.tsx\n   */\n  getSearchParameters: function getSearchParameters(searchParameters) {\n    return searchParameters;\n  }\n});","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport cx from 'classnames';\nexport var createClassNames = function createClassNames(block) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ais';\n  return function () {\n    for (var _len = arguments.length, elements = new Array(_len), _key = 0; _key < _len; _key++) {\n      elements[_key] = arguments[_key];\n    }\n\n    var suitElements = elements.filter(function (element) {\n      return element || element === '';\n    }).map(function (element) {\n      var baseClassName = \"\".concat(prefix, \"-\").concat(block);\n      return element ? \"\".concat(baseClassName, \"-\").concat(element) : baseClassName;\n    });\n    return cx(suitElements);\n  };\n};\nexport var isSpecialClick = function isSpecialClick(event) {\n  var isMiddleClick = event.button === 1;\n  return Boolean(isMiddleClick || event.altKey || event.ctrlKey || event.metaKey || event.shiftKey);\n};\nexport var capitalize = function capitalize(key) {\n  return key.length === 0 ? '' : \"\".concat(key[0].toUpperCase()).concat(key.slice(1));\n}; // taken from InstantSearch.js/utils\n\nexport function range(_ref) {\n  var _ref$start = _ref.start,\n      start = _ref$start === void 0 ? 0 : _ref$start,\n      end = _ref.end,\n      _ref$step = _ref.step,\n      step = _ref$step === void 0 ? 1 : _ref$step; // We can't divide by 0 so we re-assign the step to 1 if it happens.\n\n  var limitStep = step === 0 ? 1 : step; // In some cases the array to create has a decimal length.\n  // We therefore need to round the value.\n  // Example:\n  //   { start: 1, end: 5000, step: 500 }\n  //   => Array length = (5000 - 1) / 500 = 9.998\n\n  var arrayLength = Math.round((end - start) / limitStep);\n  return _toConsumableArray(Array(arrayLength)).map(function (_, current) {\n    return (start + current) * limitStep;\n  });\n}\nexport function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n\n  return undefined;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { createClassNames } from '../core/utils';\nvar cx = createClassNames('Hits');\n\nvar DefaultHitComponent = function DefaultHitComponent(props) {\n  return React.createElement(\"div\", {\n    style: {\n      borderBottom: '1px solid #bbb',\n      paddingBottom: '5px',\n      marginBottom: '5px',\n      wordBreak: 'break-all'\n    }\n  }, JSON.stringify(props).slice(0, 100), \"...\");\n};\n\nvar Hits = function Hits(_ref) {\n  var hits = _ref.hits,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      _ref$hitComponent = _ref.hitComponent,\n      HitComponent = _ref$hitComponent === void 0 ? DefaultHitComponent : _ref$hitComponent;\n  return React.createElement(\"div\", {\n    className: classNames(cx(''), className)\n  }, React.createElement(\"ul\", {\n    className: cx('list')\n  }, hits.map(function (hit) {\n    return React.createElement(\"li\", {\n      className: cx('item'),\n      key: hit.objectID\n    }, React.createElement(HitComponent, {\n      hit: hit\n    }));\n  })));\n};\n\nvar HitPropTypes = PropTypes.shape({\n  objectID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n});\nexport default Hits;","import { connectHits } from 'react-instantsearch-core';\nimport Hits from '../components/Hits';\n/**\n * Displays a list of hits.\n *\n * To configure the number of hits being shown, use the [HitsPerPage widget](widgets/HitsPerPage.html),\n * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or the [Configure widget](widgets/Configure.html).\n *\n * @name Hits\n * @kind widget\n * @propType {Component} [hitComponent] - Component used for rendering each hit from\n *   the results. If it is not provided the rendering defaults to displaying the\n *   hit in its JSON form. The component will be called with a `hit` prop.\n * @themeKey ais-Hits - the root div of the widget\n * @themeKey ais-Hits-list - the list of results\n * @themeKey ais-Hits-item - the hit list item\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, Hits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <Hits />\n *   </InstantSearch>\n * );\n */\n\nexport default connectHits(Hits);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport PropTypes from 'prop-types';\nimport createConnector from '../core/createConnector';\nimport { cleanUpValue, refineValue, getCurrentRefinementValue, getIndexId } from '../core/indexUtils';\n\nfunction getId() {\n  return 'query';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId(props);\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id, '');\n\n  if (currentRefinement) {\n    return currentRefinement;\n  }\n\n  return '';\n}\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId();\n\n  var nextValue = _defineProperty({}, id, nextRefinement);\n\n  var resetPage = true;\n  return refineValue(searchState, nextValue, context, resetPage);\n}\n\nfunction _cleanUp(props, searchState, context) {\n  return cleanUpValue(searchState, context, getId());\n}\n/**\n * connectSearchBox connector provides the logic to build a widget that will\n * let the user search for a query\n * @name connectSearchBox\n * @kind connector\n * @propType {string} [defaultRefinement] - Provide a default value for the query\n * @providedPropType {function} refine - a function to change the current query\n * @providedPropType {string} currentRefinement - the current query used\n * @providedPropType {boolean} isSearchStalled - a flag that indicates if InstantSearch has detected that searches are stalled\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaSearchBox',\n  propTypes: {\n    defaultRefinement: PropTypes.string\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    return {\n      currentRefinement: getCurrentRefinement(props, searchState, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      isSearchStalled: searchResults.isSearchStalled\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setQuery(getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }));\n  },\n  getMetadata: function getMetadata(props, searchState) {\n    var id = getId(props);\n    var currentRefinement = getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    return {\n      id: id,\n      index: getIndexId({\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      items: currentRefinement === null ? [] : [{\n        label: \"\".concat(id, \": \").concat(currentRefinement),\n        value: function value(nextState) {\n          return _refine(props, nextState, '', {\n            ais: props.contextValue,\n            multiIndexContext: props.indexContextValue\n          });\n        },\n        currentRefinement: currentRefinement\n      }]\n    };\n  }\n});","import './styles.scss'\nimport React from \"react\"\nimport { connectSearchBox } from \"react-instantsearch-dom\"\n\n// import { SearchIcon, Form, Input } from \"./styles\"\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default connectSearchBox(({ refine, ...rest }) => (\n        <form className={'search-form'}>\n            <input\n                className={'search-input'}\n                type=\"text\"\n                placeholder=\"Search\"\n                aria-label=\"Search\"\n                onChange={e => refine(e.target.value)}\n                {...rest}\n            >\n            </input>\n                {/* <FontAwesomeIcon icon=\"search\" style={{ pointerEvents: 'none' }} fixedWidth /> */}\n        </form>\n))\n","import createConnector from '../core/createConnector';\nimport { HIGHLIGHT_TAGS, parseAlgoliaHit } from '../core/highlight';\n\nvar highlight = function highlight(_ref) {\n  var attribute = _ref.attribute,\n      hit = _ref.hit,\n      highlightProperty = _ref.highlightProperty,\n      _ref$preTag = _ref.preTag,\n      preTag = _ref$preTag === void 0 ? HIGHLIGHT_TAGS.highlightPreTag : _ref$preTag,\n      _ref$postTag = _ref.postTag,\n      postTag = _ref$postTag === void 0 ? HIGHLIGHT_TAGS.highlightPostTag : _ref$postTag;\n  return parseAlgoliaHit({\n    attribute: attribute,\n    highlightProperty: highlightProperty,\n    hit: hit,\n    preTag: preTag,\n    postTag: postTag\n  });\n};\n/**\n * connectHighlight connector provides the logic to create an highlighter\n * component that will retrieve, parse and render an highlighted attribute\n * from an Algolia hit.\n * @name connectHighlight\n * @kind connector\n * @category connector\n * @providedPropType {function} highlight - function to retrieve and parse an attribute from a hit. It takes a configuration object with 3 attributes: `highlightProperty` which is the property that contains the highlight structure from the records, `attribute` which is the name of the attribute (it can be either a string or an array of strings) to look for and `hit` which is the hit from Algolia. It returns an array of objects `{value: string, isHighlighted: boolean}`. If the element that corresponds to the attribute is an array of strings, it will return a nested array of objects.\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits, connectHighlight } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const CustomHighlight = connectHighlight(\n *   ({ highlight, attribute, hit, highlightProperty }) => {\n *     const highlights = highlight({\n *       highlightProperty: '_highlightResult',\n *       attribute,\n *       hit\n *     });\n *\n *     return highlights.map(part => part.isHighlighted ? (\n *       <mark>{part.value}</mark>\n *     ) : (\n *       <span>{part.value}</span>\n *     ));\n *   }\n * );\n *\n * const Hit = ({ hit }) => (\n *   <p>\n *     <CustomHighlight attribute=\"name\" hit={hit} />\n *   </p>\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox defaultRefinement=\"pho\" />\n *     <Hits hitComponent={Hit} />\n *   </InstantSearch>\n * );\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaHighlighter',\n  propTypes: {},\n  getProvidedProps: function getProvidedProps() {\n    return {\n      highlight: highlight\n    };\n  }\n});","import React from 'react';\nimport classNames from 'classnames';\nexport var Highlight = function Highlight(_ref) {\n  var cx = _ref.cx,\n      value = _ref.value,\n      highlightedTagName = _ref.highlightedTagName,\n      isHighlighted = _ref.isHighlighted,\n      nonHighlightedTagName = _ref.nonHighlightedTagName;\n  var TagName = isHighlighted ? highlightedTagName : nonHighlightedTagName;\n  var className = isHighlighted ? 'highlighted' : 'nonHighlighted';\n  return React.createElement(TagName, {\n    className: cx(className)\n  }, value);\n};\n\nvar Highlighter = function Highlighter(_ref2) {\n  var cx = _ref2.cx,\n      hit = _ref2.hit,\n      attribute = _ref2.attribute,\n      highlight = _ref2.highlight,\n      highlightProperty = _ref2.highlightProperty,\n      tagName = _ref2.tagName,\n      nonHighlightedTagName = _ref2.nonHighlightedTagName,\n      separator = _ref2.separator,\n      className = _ref2.className;\n  var parsedHighlightedValue = highlight({\n    hit: hit,\n    attribute: attribute,\n    highlightProperty: highlightProperty\n  });\n  return React.createElement(\"span\", {\n    className: classNames(cx(''), className)\n  }, parsedHighlightedValue.map(function (item, i) {\n    if (Array.isArray(item)) {\n      var isLast = i === parsedHighlightedValue.length - 1;\n      return React.createElement(\"span\", {\n        key: i\n      }, item.map(function (element, index) {\n        return React.createElement(Highlight, {\n          cx: cx,\n          key: index,\n          value: element.value,\n          highlightedTagName: tagName,\n          nonHighlightedTagName: nonHighlightedTagName,\n          isHighlighted: element.isHighlighted\n        });\n      }), !isLast && React.createElement(\"span\", {\n        className: cx('separator')\n      }, separator));\n    }\n\n    return React.createElement(Highlight, {\n      cx: cx,\n      key: i,\n      value: item.value,\n      highlightedTagName: tagName,\n      nonHighlightedTagName: nonHighlightedTagName,\n      isHighlighted: item.isHighlighted\n    });\n  }));\n};\n\nHighlighter.defaultProps = {\n  tagName: 'em',\n  nonHighlightedTagName: 'span',\n  className: '',\n  separator: ', '\n};\nexport default Highlighter;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { createClassNames } from '../core/utils';\nimport Highlighter from './Highlighter';\nvar cx = createClassNames('Highlight');\n\nvar Highlight = function Highlight(props) {\n  return React.createElement(Highlighter, _extends({}, props, {\n    highlightProperty: \"_highlightResult\",\n    cx: cx\n  }));\n};\n\nexport default Highlight;","import { connectHighlight } from 'react-instantsearch-core';\nimport Highlight from '../components/Highlight';\n/**\n * Renders any attribute from a hit into its highlighted form when relevant.\n *\n * Read more about it in the [Highlighting results](guide/Highlighting_results.html) guide.\n * @name Highlight\n * @kind widget\n * @propType {string} attribute - location of the highlighted attribute in the hit (the corresponding element can be either a string or an array of strings)\n * @propType {object} hit - hit object containing the highlighted attribute\n * @propType {string} [tagName='em'] - tag to be used for highlighted parts of the hit\n * @propType {string} [nonHighlightedTagName='span'] - tag to be used for the parts of the hit that are not highlighted\n * @propType {node} [separator=',<space>'] - symbol used to separate the elements of the array in case the attribute points to an array of strings.\n * @themeKey ais-Highlight - root of the component\n * @themeKey ais-Highlight-highlighted - part of the text which is highlighted\n * @themeKey ais-Highlight-nonHighlighted - part of the text that is not highlighted\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits, Highlight } from 'react-instantsearch-dom';\n *\n * const Hit = ({ hit }) => (\n *   <div>\n *     <Highlight attribute=\"name\" hit={hit} />\n *   </div>\n * );\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox defaultRefinement=\"Pho\" />\n *     <Hits hitComponent={Hit} />\n *   </InstantSearch>\n * );\n */\n\nexport default connectHighlight(Highlight);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { createClassNames } from '../core/utils';\nimport Highlighter from './Highlighter';\nvar cx = createClassNames('Snippet');\n\nvar Snippet = function Snippet(props) {\n  return React.createElement(Highlighter, _extends({}, props, {\n    highlightProperty: \"_snippetResult\",\n    cx: cx\n  }));\n};\n\nexport default Snippet;","import { connectHighlight } from 'react-instantsearch-core';\nimport Snippet from '../components/Snippet';\n/**\n * Renders any attribute from an hit into its highlighted snippet form when relevant.\n *\n * Read more about it in the [Highlighting results](guide/Highlighting_results.html) guide.\n * @name Snippet\n * @kind widget\n * @requirements To use this widget, the attribute name passed to the `attribute` prop must be\n * present in \"Attributes to snippet\" on the Algolia dashboard or configured as `attributesToSnippet`\n * via a set settings call to the Algolia API.\n * @propType {string} attribute - location of the highlighted snippet attribute in the hit (the corresponding element can be either a string or an array of strings)\n * @propType {object} hit - hit object containing the highlighted snippet attribute\n * @propType {string} [tagName='em'] - tag to be used for highlighted parts of the attribute\n * @propType {string} [nonHighlightedTagName='span'] - tag to be used for the parts of the hit that are not highlighted\n * @propType {node} [separator=',<space>'] - symbol used to separate the elements of the array in case the attribute points to an array of strings.\n * @themeKey ais-Snippet - the root span of the widget\n * @themeKey ais-Snippet-highlighted - the highlighted text\n * @themeKey ais-Snippet-nonHighlighted - the normal text\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits, Snippet } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const Hit = ({ hit }) => (\n *   <div>\n *     <Snippet attribute=\"description\" hit={hit} />\n *   </div>\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox defaultRefinement=\"adjustable\" />\n *     <Hits hitComponent={Hit} />\n *   </InstantSearch>\n * );\n */\n\nexport default connectHighlight(Snippet);","import React, { Fragment } from \"react\"\nimport { Highlight, Snippet } from \"react-instantsearch-dom\"\nimport { Link } from \"gatsby\"\n// import { Calendar } from \"styled-icons/octicons/Calendar\"\n// import { Tags } from \"styled-icons/fa-solid/Tags\"\nimport { Row } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport const PageHit = clickHandler => ({ hit }) => (\n  <div>\n    <Link to={hit.slug} onClick={clickHandler}>\n      <h4>\n        <Highlight attribute=\"title\" hit={hit} tagName=\"mark\" />\n      </h4>\n    </Link>\n    <Snippet attribute=\"excerpt\" hit={hit} tagName=\"mark\" />\n  </div>\n)\n\nexport const PostHit = clickHandler => ({ hit }) => (\n  <Row>\n    <div style={{marginTop: '1.25em'}}>\n    <Link to={hit.slug} onClick={clickHandler}>\n      <h4>\n        <Highlight attribute=\"title\" hit={hit} tagName=\"mark\" />\n      </h4>\n    </Link>\n    <div>\n      {/* <Calendar size=\"1em\" /> */}\n      <FontAwesomeIcon icon={'calendar'} fixedWidth/>\n      &nbsp;\n      <Highlight attribute=\"date\" hit={hit} tagName=\"mark\" />\n      &emsp;\n      <FontAwesomeIcon icon={'tags'} fixedWidth/>\n      {/* <Tags size=\"1em\" /> */}\n      &nbsp;\n      {hit.tags.map((tag, index) => (\n        <Fragment key={tag}>\n          {index > 0 && `, `}\n          {<span >{tag}</span>}\n        </Fragment>\n      ))}\n    </div>\n    <Snippet attribute=\"excerpt\" hit={hit} tagName=\"mark\" />\n    </div>\n  </Row>\n)","import './styles.scss'\nimport React, {\n    useState,\n    useEffect,\n    createRef\n} from \"react\"\nimport {\n    InstantSearch,\n    // Index,\n    // SearchBox,\n    Hits,\n    // connectStateResults,\n} from \"react-instantsearch-dom\"\nimport algoliasearch from \"algoliasearch/lite\"\n\n// import { Root, HitsWrapper, PoweredBy } from \"./styles\"\nimport Input from \"./input\"\nimport * as hitComps from \"./hitComps\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// const Results = connectStateResults(\n//     ({ searchState: state, searchResults: res, children }) =>\n//         res && res.nbHits > 0 ? children : `No results for '${state.query}'`\n// )\n\n// const Stats = connectStateResults(\n//     ({ searchResults: res }) =>\n//         res && res.nbHits > 0 && `${res.nbHits} result${res.nbHits > 1 ? `s` : ``}`\n// )\n\nconst useClickOutside = (ref, handler, events) => {\n    if (!events) events = [`mousedown`, `touchstart`]\n    const detectClickOutside = event =>\n        ref.current && !ref.current.contains(event.target) && handler()\n    useEffect(() => {\n        for (const event of events)\n            document.addEventListener(event, detectClickOutside)\n        return () => {\n            for (const event of events)\n                document.removeEventListener(event, detectClickOutside)\n        }\n    })\n}\n\nconst Root = <div></div>\n\nexport const PoweredBy = () => (\n    <span style={{fontSize: '0.75em', textAlign: 'end', margin: '1em 0 0 0'}}>\n      Powered by{` `}\n      <a href=\"https://algolia.com\">\n        <FontAwesomeIcon icon='algolia' /> Algolia\n      </a>\n    </span>\n  )\n\nexport default function Search({ indices, collapse, hitsAsGrid }) {\n    const ref = createRef()\n    const [query, setQuery] = useState(``)\n    const [focus, setFocus] = useState(false)\n    const searchClient = algoliasearch(\n        process.env.GATSBY_ALGOLIA_APP_ID,\n        process.env.GATSBY_ALGOLIA_SEARCH_KEY\n    )\n    useClickOutside(ref, () => setFocus(false))\n    // console.log(ref)\n    return (\n        <InstantSearch\n            searchClient={searchClient}\n            indexName={indices[0].name}\n            onSearchStateChange={({ query }) => setQuery(query)}\n            root={{ Root, props: { ref } }}\n        >\n            <Input onFocus={() => setFocus(true)} {...{ collapse, focus }} />\n\n            {/* <SearchBox onFocus={() => setFocus(true)} {...{ collapse, focus }}/> */}\n                {(query.length > 0 && focus) ? <Hits hitComponent={hitComps[indices[0].hitComp](() => setFocus(false))} /> : null}\n                <PoweredBy />\n            {/* <HitsWrapper show={query.length > 0 && focus} asGrid={hitsAsGrid}>\n                {indices.map(({ name, title, hitComp }) => (\n                    <Index key={name} indexName={name}>\n                        <header>\n                            <h3>{title}</h3>\n                            <Stats />\n                        </header>\n                        <Results>\n                            <Hits hitComponent={hitComps[hitComp](() => setFocus(false))} />\n                        </Results>\n                    </Index>\n                ))}\n            </HitsWrapper> */}\n        </InstantSearch>\n    )\n}","import React from \"react\"\nimport { graphql } from 'gatsby'\n// import { Container, Logo } from \"./styles\"\n// import Nav from \"../Nav\"\nimport { ContentLayout as Layout } from '../components/Layout/ContentLayout'\nimport { Container, Row } from 'react-bootstrap'\nimport Search from \"../components/Search\"\nimport { Link } from 'gatsby'\nconst searchIndices = [\n    //   { name: `Pages`, title: `Pages`, hitComp: `PageHit` },\n    { name: `Blog`, title: `Blog Posts`, hitComp: `PostHit` },\n]\nconst lodash = require('lodash')\n\nconst SearchPages = (props) => {\n    const groups = props.data.allMarkdownRemark.group\n    // console.table(groups)\n    return (\n        <Layout breadcrumb_items={[\n            { link: '/search', name: 'Search' },\n        ]}>\n            <Container fluid={true}>\n                <Row>\n                    <Container >\n                        <h3>Search through this website</h3>\n                        <Search indices={searchIndices} />\n                    </Container>\n                </Row>\n                <Row>\n                    <Container style={{ marginBottom: '12em' }}>\n                        <br />\n                        <h3>Or Browse by Tag</h3>\n                        {\n                            groups.map(tag => {\n                                return (<Link to={`/blog/tags/` + lodash.kebabCase(tag.fieldValue)} className=\"badge badge-secondary\">{tag.fieldValue} <span className=\"badge badge-light\">{tag.totalCount}</span></Link>)\n                            })\n                        }\n                    </Container>\n                </Row>\n            </Container>\n        </Layout>\n    )\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n\nexport default SearchPages","'use strict';\n\nvar find = require('./find');\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\n\n\nmodule.exports = function formatSort(sortBy, defaults) {\n  var defaultInstructions = (defaults || []).map(function (sort) {\n    return sort.split(':');\n  });\n  return sortBy.reduce(function preparePredicate(out, sort) {\n    var sortInstruction = sort.split(':');\n    var matchingDefault = find(defaultInstructions, function (defaultInstruction) {\n      return defaultInstruction[0] === sortInstruction[0];\n    });\n\n    if (sortInstruction.length > 1 || !matchingDefault) {\n      out[0].push(sortInstruction[0]);\n      out[1].push(sortInstruction[1]);\n      return out;\n    }\n\n    out[0].push(matchingDefault[0]);\n    out[1].push(matchingDefault[1]);\n    return out;\n  }, [[], []]);\n};","/*! algoliasearch-lite.umd.js | 4.4.0 | © Algolia, inc. | https://github.com/algolia/algoliasearch-client-javascript */\n!function (e, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define(t) : (e = e || self).algoliasearch = t();\n}(this, function () {\n  \"use strict\";\n\n  function e(e, t, r) {\n    return t in e ? Object.defineProperty(e, t, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : e[t] = r, e;\n  }\n\n  function t(e, t) {\n    var r = Object.keys(e);\n\n    if (Object.getOwnPropertySymbols) {\n      var n = Object.getOwnPropertySymbols(e);\n      t && (n = n.filter(function (t) {\n        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n      })), r.push.apply(r, n);\n    }\n\n    return r;\n  }\n\n  function r(r) {\n    for (var n = 1; n < arguments.length; n++) {\n      var o = null != arguments[n] ? arguments[n] : {};\n      n % 2 ? t(Object(o), !0).forEach(function (t) {\n        e(r, t, o[t]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(r, Object.getOwnPropertyDescriptors(o)) : t(Object(o)).forEach(function (e) {\n        Object.defineProperty(r, e, Object.getOwnPropertyDescriptor(o, e));\n      });\n    }\n\n    return r;\n  }\n\n  function n(e, t) {\n    if (null == e) return {};\n\n    var r,\n        n,\n        o = function (e, t) {\n      if (null == e) return {};\n      var r,\n          n,\n          o = {},\n          a = Object.keys(e);\n\n      for (n = 0; n < a.length; n++) {\n        r = a[n], t.indexOf(r) >= 0 || (o[r] = e[r]);\n      }\n\n      return o;\n    }(e, t);\n\n    if (Object.getOwnPropertySymbols) {\n      var a = Object.getOwnPropertySymbols(e);\n\n      for (n = 0; n < a.length; n++) {\n        r = a[n], t.indexOf(r) >= 0 || Object.prototype.propertyIsEnumerable.call(e, r) && (o[r] = e[r]);\n      }\n    }\n\n    return o;\n  }\n\n  function o(e, t) {\n    return function (e) {\n      if (Array.isArray(e)) return e;\n    }(e) || function (e, t) {\n      if (!(Symbol.iterator in Object(e) || \"[object Arguments]\" === Object.prototype.toString.call(e))) return;\n      var r = [],\n          n = !0,\n          o = !1,\n          a = void 0;\n\n      try {\n        for (var u, i = e[Symbol.iterator](); !(n = (u = i.next()).done) && (r.push(u.value), !t || r.length !== t); n = !0) {\n          ;\n        }\n      } catch (e) {\n        o = !0, a = e;\n      } finally {\n        try {\n          n || null == i.return || i.return();\n        } finally {\n          if (o) throw a;\n        }\n      }\n\n      return r;\n    }(e, t) || function () {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }();\n  }\n\n  function a(e) {\n    return function (e) {\n      if (Array.isArray(e)) {\n        for (var t = 0, r = new Array(e.length); t < e.length; t++) {\n          r[t] = e[t];\n        }\n\n        return r;\n      }\n    }(e) || function (e) {\n      if (Symbol.iterator in Object(e) || \"[object Arguments]\" === Object.prototype.toString.call(e)) return Array.from(e);\n    }(e) || function () {\n      throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n    }();\n  }\n\n  function u(e) {\n    var t,\n        r = \"algoliasearch-client-js-\".concat(e.key),\n        n = function n() {\n      return void 0 === t && (t = e.localStorage || window.localStorage), t;\n    },\n        a = function a() {\n      return JSON.parse(n().getItem(r) || \"{}\");\n    };\n\n    return {\n      get: function get(e, t) {\n        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        };\n        return Promise.resolve().then(function () {\n          var r = JSON.stringify(e),\n              n = a()[r];\n          return Promise.all([n || t(), void 0 !== n]);\n        }).then(function (e) {\n          var t = o(e, 2),\n              n = t[0],\n              a = t[1];\n          return Promise.all([n, a || r.miss(n)]);\n        }).then(function (e) {\n          return o(e, 1)[0];\n        });\n      },\n      set: function set(e, t) {\n        return Promise.resolve().then(function () {\n          var o = a();\n          return o[JSON.stringify(e)] = t, n().setItem(r, JSON.stringify(o)), t;\n        });\n      },\n      delete: function _delete(e) {\n        return Promise.resolve().then(function () {\n          var t = a();\n          delete t[JSON.stringify(e)], n().setItem(r, JSON.stringify(t));\n        });\n      },\n      clear: function clear() {\n        return Promise.resolve().then(function () {\n          n().removeItem(r);\n        });\n      }\n    };\n  }\n\n  function i(e) {\n    var t = a(e.caches),\n        r = t.shift();\n    return void 0 === r ? {\n      get: function get(e, t) {\n        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        },\n            n = t();\n        return n.then(function (e) {\n          return Promise.all([e, r.miss(e)]);\n        }).then(function (e) {\n          return o(e, 1)[0];\n        });\n      },\n      set: function set(e, t) {\n        return Promise.resolve(t);\n      },\n      delete: function _delete(e) {\n        return Promise.resolve();\n      },\n      clear: function clear() {\n        return Promise.resolve();\n      }\n    } : {\n      get: function get(e, n) {\n        var o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        };\n        return r.get(e, n, o).catch(function () {\n          return i({\n            caches: t\n          }).get(e, n, o);\n        });\n      },\n      set: function set(e, n) {\n        return r.set(e, n).catch(function () {\n          return i({\n            caches: t\n          }).set(e, n);\n        });\n      },\n      delete: function _delete(e) {\n        return r.delete(e).catch(function () {\n          return i({\n            caches: t\n          }).delete(e);\n        });\n      },\n      clear: function clear() {\n        return r.clear().catch(function () {\n          return i({\n            caches: t\n          }).clear();\n        });\n      }\n    };\n  }\n\n  function s() {\n    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {\n      serializable: !0\n    },\n        t = {};\n    return {\n      get: function get(r, n) {\n        var o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        },\n            a = JSON.stringify(r);\n        if (a in t) return Promise.resolve(e.serializable ? JSON.parse(t[a]) : t[a]);\n\n        var u = n(),\n            i = o && o.miss || function () {\n          return Promise.resolve();\n        };\n\n        return u.then(function (e) {\n          return i(e);\n        }).then(function () {\n          return u;\n        });\n      },\n      set: function set(r, n) {\n        return t[JSON.stringify(r)] = e.serializable ? JSON.stringify(n) : n, Promise.resolve(n);\n      },\n      delete: function _delete(e) {\n        return delete t[JSON.stringify(e)], Promise.resolve();\n      },\n      clear: function clear() {\n        return t = {}, Promise.resolve();\n      }\n    };\n  }\n\n  function c(e) {\n    for (var t = e.length - 1; t > 0; t--) {\n      var r = Math.floor(Math.random() * (t + 1)),\n          n = e[t];\n      e[t] = e[r], e[r] = n;\n    }\n\n    return e;\n  }\n\n  function l(e, t) {\n    return Object.keys(void 0 !== t ? t : {}).forEach(function (r) {\n      e[r] = t[r](e);\n    }), e;\n  }\n\n  function f(e) {\n    for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++) {\n      r[n - 1] = arguments[n];\n    }\n\n    var o = 0;\n    return e.replace(/%s/g, function () {\n      return encodeURIComponent(r[o++]);\n    });\n  }\n\n  var h = {\n    WithinQueryParameters: 0,\n    WithinHeaders: 1\n  };\n\n  function d(e, t) {\n    var r = e || {},\n        n = r.data || {};\n    return Object.keys(r).forEach(function (e) {\n      -1 === [\"timeout\", \"headers\", \"queryParameters\", \"data\", \"cacheable\"].indexOf(e) && (n[e] = r[e]);\n    }), {\n      data: Object.entries(n).length > 0 ? n : void 0,\n      timeout: r.timeout || t,\n      headers: r.headers || {},\n      queryParameters: r.queryParameters || {},\n      cacheable: r.cacheable\n    };\n  }\n\n  var m = {\n    Read: 1,\n    Write: 2,\n    Any: 3\n  },\n      p = 1,\n      v = 2,\n      g = 3;\n\n  function y(e) {\n    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p;\n    return r({}, e, {\n      status: t,\n      lastUpdate: Date.now()\n    });\n  }\n\n  function b(e) {\n    return {\n      protocol: e.protocol || \"https\",\n      url: e.url,\n      accept: e.accept || m.Any\n    };\n  }\n\n  var O = \"GET\",\n      P = \"POST\";\n\n  function q(e, t) {\n    return Promise.all(t.map(function (t) {\n      return e.get(t, function () {\n        return Promise.resolve(y(t));\n      });\n    })).then(function (e) {\n      var r = e.filter(function (e) {\n        return function (e) {\n          return e.status === p || Date.now() - e.lastUpdate > 12e4;\n        }(e);\n      }),\n          n = e.filter(function (e) {\n        return function (e) {\n          return e.status === g && Date.now() - e.lastUpdate <= 12e4;\n        }(e);\n      }),\n          o = [].concat(a(r), a(n));\n      return {\n        getTimeout: function getTimeout(e, t) {\n          return (0 === n.length && 0 === e ? 1 : n.length + 3 + e) * t;\n        },\n        statelessHosts: o.length > 0 ? o.map(function (e) {\n          return b(e);\n        }) : t\n      };\n    });\n  }\n\n  function j(e, t, n, o) {\n    var u = [],\n        i = function (e, t) {\n      if (e.method === O || void 0 === e.data && void 0 === t.data) return;\n      var n = Array.isArray(e.data) ? e.data : r({}, e.data, {}, t.data);\n      return JSON.stringify(n);\n    }(n, o),\n        s = function (e, t) {\n      var n = r({}, e.headers, {}, t.headers),\n          o = {};\n      return Object.keys(n).forEach(function (e) {\n        var t = n[e];\n        o[e.toLowerCase()] = t;\n      }), o;\n    }(e, o),\n        c = n.method,\n        l = n.method !== O ? {} : r({}, n.data, {}, o.data),\n        f = r({\n      \"x-algolia-agent\": e.userAgent.value\n    }, e.queryParameters, {}, l, {}, o.queryParameters),\n        h = 0,\n        d = function t(r, a) {\n      var l = r.pop();\n      if (void 0 === l) throw {\n        name: \"RetryError\",\n        message: \"Unreachable hosts - your application id may be incorrect. If the error persists, contact support@algolia.com.\",\n        transporterStackTrace: A(u)\n      };\n\n      var d = {\n        data: i,\n        headers: s,\n        method: c,\n        url: w(l, n.path, f),\n        connectTimeout: a(h, e.timeouts.connect),\n        responseTimeout: a(h, o.timeout)\n      },\n          m = function m(e) {\n        var t = {\n          request: d,\n          response: e,\n          host: l,\n          triesLeft: r.length\n        };\n        return u.push(t), t;\n      },\n          p = {\n        onSucess: function onSucess(e) {\n          return function (e) {\n            try {\n              return JSON.parse(e.content);\n            } catch (t) {\n              throw function (e, t) {\n                return {\n                  name: \"DeserializationError\",\n                  message: e,\n                  response: t\n                };\n              }(t.message, e);\n            }\n          }(e);\n        },\n        onRetry: function onRetry(n) {\n          var o = m(n);\n          return n.isTimedOut && h++, Promise.all([e.logger.info(\"Retryable failure\", x(o)), e.hostsCache.set(l, y(l, n.isTimedOut ? g : v))]).then(function () {\n            return t(r, a);\n          });\n        },\n        onFail: function onFail(e) {\n          throw m(e), function (e, t) {\n            var r = e.content,\n                n = e.status,\n                o = r;\n\n            try {\n              o = JSON.parse(r).message;\n            } catch (e) {}\n\n            return function (e, t, r) {\n              return {\n                name: \"ApiError\",\n                message: e,\n                status: t,\n                transporterStackTrace: r\n              };\n            }(o, n, t);\n          }(e, A(u));\n        }\n      };\n\n      return e.requester.send(d).then(function (e) {\n        return function (e, t) {\n          return function (e) {\n            var t = e.status;\n            return e.isTimedOut || function (e) {\n              var t = e.isTimedOut,\n                  r = e.status;\n              return !t && 0 == ~~r;\n            }(e) || 2 != ~~(t / 100) && 4 != ~~(t / 100);\n          }(e) ? t.onRetry(e) : 2 == ~~(e.status / 100) ? t.onSucess(e) : t.onFail(e);\n        }(e, p);\n      });\n    };\n\n    return q(e.hostsCache, t).then(function (e) {\n      return d(a(e.statelessHosts).reverse(), e.getTimeout);\n    });\n  }\n\n  function S(e) {\n    var t = {\n      value: \"Algolia for JavaScript (\".concat(e, \")\"),\n      add: function add(e) {\n        var r = \"; \".concat(e.segment).concat(void 0 !== e.version ? \" (\".concat(e.version, \")\") : \"\");\n        return -1 === t.value.indexOf(r) && (t.value = \"\".concat(t.value).concat(r)), t;\n      }\n    };\n    return t;\n  }\n\n  function w(e, t, r) {\n    var n = T(r),\n        o = \"\".concat(e.protocol, \"://\").concat(e.url, \"/\").concat(\"/\" === t.charAt(0) ? t.substr(1) : t);\n    return n.length && (o += \"?\".concat(n)), o;\n  }\n\n  function T(e) {\n    return Object.keys(e).map(function (t) {\n      return f(\"%s=%s\", t, (r = e[t], \"[object Object]\" === Object.prototype.toString.call(r) || \"[object Array]\" === Object.prototype.toString.call(r) ? JSON.stringify(e[t]) : e[t]));\n      var r;\n    }).join(\"&\");\n  }\n\n  function A(e) {\n    return e.map(function (e) {\n      return x(e);\n    });\n  }\n\n  function x(e) {\n    var t = e.request.headers[\"x-algolia-api-key\"] ? {\n      \"x-algolia-api-key\": \"*****\"\n    } : {};\n    return r({}, e, {\n      request: r({}, e.request, {\n        headers: r({}, e.request.headers, {}, t)\n      })\n    });\n  }\n\n  var C = function C(e) {\n    var t = e.appId,\n        n = function (e, t, r) {\n      var n = {\n        \"x-algolia-api-key\": r,\n        \"x-algolia-application-id\": t\n      };\n      return {\n        headers: function headers() {\n          return e === h.WithinHeaders ? n : {};\n        },\n        queryParameters: function queryParameters() {\n          return e === h.WithinQueryParameters ? n : {};\n        }\n      };\n    }(void 0 !== e.authMode ? e.authMode : h.WithinHeaders, t, e.apiKey),\n        a = function (e) {\n      var t = e.hostsCache,\n          r = e.logger,\n          n = e.requester,\n          a = e.requestsCache,\n          u = e.responsesCache,\n          i = e.timeouts,\n          s = e.userAgent,\n          c = e.hosts,\n          l = e.queryParameters,\n          f = {\n        hostsCache: t,\n        logger: r,\n        requester: n,\n        requestsCache: a,\n        responsesCache: u,\n        timeouts: i,\n        userAgent: s,\n        headers: e.headers,\n        queryParameters: l,\n        hosts: c.map(function (e) {\n          return b(e);\n        }),\n        read: function read(e, t) {\n          var r = d(t, f.timeouts.read),\n              n = function n() {\n            return j(f, f.hosts.filter(function (e) {\n              return 0 != (e.accept & m.Read);\n            }), e, r);\n          };\n\n          if (!0 !== (void 0 !== r.cacheable ? r.cacheable : e.cacheable)) return n();\n          var a = {\n            request: e,\n            mappedRequestOptions: r,\n            transporter: {\n              queryParameters: f.queryParameters,\n              headers: f.headers\n            }\n          };\n          return f.responsesCache.get(a, function () {\n            return f.requestsCache.get(a, function () {\n              return f.requestsCache.set(a, n()).then(function (e) {\n                return Promise.all([f.requestsCache.delete(a), e]);\n              }, function (e) {\n                return Promise.all([f.requestsCache.delete(a), Promise.reject(e)]);\n              }).then(function (e) {\n                var t = o(e, 2);\n                t[0];\n                return t[1];\n              });\n            });\n          }, {\n            miss: function miss(e) {\n              return f.responsesCache.set(a, e);\n            }\n          });\n        },\n        write: function write(e, t) {\n          return j(f, f.hosts.filter(function (e) {\n            return 0 != (e.accept & m.Write);\n          }), e, d(t, f.timeouts.write));\n        }\n      };\n      return f;\n    }(r({\n      hosts: [{\n        url: \"\".concat(t, \"-dsn.algolia.net\"),\n        accept: m.Read\n      }, {\n        url: \"\".concat(t, \".algolia.net\"),\n        accept: m.Write\n      }].concat(c([{\n        url: \"\".concat(t, \"-1.algolianet.com\")\n      }, {\n        url: \"\".concat(t, \"-2.algolianet.com\")\n      }, {\n        url: \"\".concat(t, \"-3.algolianet.com\")\n      }]))\n    }, e, {\n      headers: r({}, n.headers(), {}, {\n        \"content-type\": \"application/x-www-form-urlencoded\"\n      }, {}, e.headers),\n      queryParameters: r({}, n.queryParameters(), {}, e.queryParameters)\n    }));\n\n    return l({\n      transporter: a,\n      appId: t,\n      addAlgoliaAgent: function addAlgoliaAgent(e, t) {\n        a.userAgent.add({\n          segment: e,\n          version: t\n        });\n      },\n      clearCache: function clearCache() {\n        return Promise.all([a.requestsCache.clear(), a.responsesCache.clear()]).then(function () {});\n      }\n    }, e.methods);\n  },\n      N = function N(e) {\n    return function (t) {\n      var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n          n = {\n        transporter: e.transporter,\n        appId: e.appId,\n        indexName: t\n      };\n      return l(n, r.methods);\n    };\n  },\n      k = function k(e) {\n    return function (t, n) {\n      var o = t.map(function (e) {\n        return r({}, e, {\n          params: T(e.params || {})\n        });\n      });\n      return e.transporter.read({\n        method: P,\n        path: \"1/indexes/*/queries\",\n        data: {\n          requests: o\n        },\n        cacheable: !0\n      }, n);\n    };\n  },\n      J = function J(e) {\n    return function (t, o) {\n      return Promise.all(t.map(function (t) {\n        var a = t.params,\n            u = a.facetName,\n            i = a.facetQuery,\n            s = n(a, [\"facetName\", \"facetQuery\"]);\n        return N(e)(t.indexName, {\n          methods: {\n            searchForFacetValues: I\n          }\n        }).searchForFacetValues(u, i, r({}, o, {}, s));\n      }));\n    };\n  },\n      E = function E(e) {\n    return function (t, r) {\n      return e.transporter.read({\n        method: P,\n        path: f(\"1/indexes/%s/query\", e.indexName),\n        data: {\n          query: t\n        },\n        cacheable: !0\n      }, r);\n    };\n  },\n      I = function I(e) {\n    return function (t, r, n) {\n      return e.transporter.read({\n        method: P,\n        path: f(\"1/indexes/%s/facets/%s/query\", e.indexName, t),\n        data: {\n          facetQuery: r\n        },\n        cacheable: !0\n      }, n);\n    };\n  },\n      F = 1,\n      R = 2,\n      D = 3;\n\n  function W(e, t, n) {\n    var o,\n        a = {\n      appId: e,\n      apiKey: t,\n      timeouts: {\n        connect: 1,\n        read: 2,\n        write: 30\n      },\n      requester: {\n        send: function send(e) {\n          return new Promise(function (t) {\n            var r = new XMLHttpRequest();\n            r.open(e.method, e.url, !0), Object.keys(e.headers).forEach(function (t) {\n              return r.setRequestHeader(t, e.headers[t]);\n            });\n\n            var n,\n                o = function o(e, n) {\n              return setTimeout(function () {\n                r.abort(), t({\n                  status: 0,\n                  content: n,\n                  isTimedOut: !0\n                });\n              }, 1e3 * e);\n            },\n                a = o(e.connectTimeout, \"Connection timeout\");\n\n            r.onreadystatechange = function () {\n              r.readyState > r.OPENED && void 0 === n && (clearTimeout(a), n = o(e.responseTimeout, \"Socket timeout\"));\n            }, r.onerror = function () {\n              0 === r.status && (clearTimeout(a), clearTimeout(n), t({\n                content: r.responseText || \"Network request failed\",\n                status: r.status,\n                isTimedOut: !1\n              }));\n            }, r.onload = function () {\n              clearTimeout(a), clearTimeout(n), t({\n                content: r.responseText,\n                status: r.status,\n                isTimedOut: !1\n              });\n            }, r.send(e.data);\n          });\n        }\n      },\n      logger: (o = D, {\n        debug: function debug(e, t) {\n          return F >= o && console.debug(e, t), Promise.resolve();\n        },\n        info: function info(e, t) {\n          return R >= o && console.info(e, t), Promise.resolve();\n        },\n        error: function error(e, t) {\n          return console.error(e, t), Promise.resolve();\n        }\n      }),\n      responsesCache: s(),\n      requestsCache: s({\n        serializable: !1\n      }),\n      hostsCache: i({\n        caches: [u({\n          key: \"\".concat(\"4.4.0\", \"-\").concat(e)\n        }), s()]\n      }),\n      userAgent: S(\"4.4.0\").add({\n        segment: \"Browser\",\n        version: \"lite\"\n      }),\n      authMode: h.WithinQueryParameters\n    };\n    return C(r({}, a, {}, n, {\n      methods: {\n        search: k,\n        searchForFacetValues: J,\n        multipleQueries: k,\n        multipleSearchForFacetValues: J,\n        initIndex: function initIndex(e) {\n          return function (t) {\n            return N(e)(t, {\n              methods: {\n                search: E,\n                searchForFacetValues: I\n              }\n            });\n          };\n        }\n      }\n    }));\n  }\n\n  return W.version = \"4.4.0\", W;\n});","'use strict';\n\nfunction clone(value) {\n  if (typeof value === 'object' && value !== null) {\n    return _merge(Array.isArray(value) ? [] : {}, value);\n  }\n\n  return value;\n}\n\nfunction isObjectOrArrayOrFunction(value) {\n  return typeof value === 'function' || Array.isArray(value) || Object.prototype.toString.call(value) === '[object Object]';\n}\n\nfunction _merge(target, source) {\n  if (target === source) {\n    return target;\n  }\n\n  for (var key in source) {\n    if (!Object.prototype.hasOwnProperty.call(source, key)) {\n      continue;\n    }\n\n    var sourceVal = source[key];\n    var targetVal = target[key];\n\n    if (typeof targetVal !== 'undefined' && typeof sourceVal === 'undefined') {\n      continue;\n    }\n\n    if (isObjectOrArrayOrFunction(targetVal) && isObjectOrArrayOrFunction(sourceVal)) {\n      target[key] = _merge(targetVal, sourceVal);\n    } else {\n      target[key] = clone(sourceVal);\n    }\n  }\n\n  return target;\n}\n/**\n * This method is like Object.assign, but recursively merges own and inherited\n * enumerable keyed properties of source objects into the destination object.\n *\n * NOTE: this behaves like lodash/merge, but:\n * - does mutate functions if they are a source\n * - treats non-plain objects as plain\n * - does not work for circular objects\n * - treats sparse arrays as sparse\n * - does not convert Array-like objects (Arguments, NodeLists, etc.) to arrays\n *\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction merge(target) {\n  if (!isObjectOrArrayOrFunction(target)) {\n    target = {};\n  }\n\n  for (var i = 1, l = arguments.length; i < l; i++) {\n    var source = arguments[i];\n\n    if (isObjectOrArrayOrFunction(source)) {\n      _merge(target, source);\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = merge;","'use strict'; // @MAJOR can be replaced by native Array#find when we change support\n\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n};","'use strict';\n/**\n * Functions to manipulate refinement lists\n *\n * The RefinementList is not formally defined through a prototype but is based\n * on a specific structure.\n *\n * @module SearchParameters.refinementList\n *\n * @typedef {string[]} SearchParameters.refinementList.Refinements\n * @typedef {Object.<string, SearchParameters.refinementList.Refinements>} SearchParameters.refinementList.RefinementList\n */\n\nvar defaultsPure = require('../functions/defaultsPure');\n\nvar omit = require('../functions/omit');\n\nvar objectHasKeys = require('../functions/objectHasKeys');\n\nvar lib = {\n  /**\n   * Adds a refinement to a RefinementList\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement, if the value is not a string it will be converted\n   * @return {RefinementList} a new and updated refinement list\n   */\n  addRefinement: function addRefinement(refinementList, attribute, value) {\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return refinementList;\n    }\n\n    var valueAsString = '' + value;\n    var facetRefinement = !refinementList[attribute] ? [valueAsString] : refinementList[attribute].concat(valueAsString);\n    var mod = {};\n    mod[attribute] = facetRefinement;\n    return defaultsPure({}, mod, refinementList);\n  },\n\n  /**\n   * Removes refinement(s) for an attribute:\n   *  - if the value is specified removes the refinement for the value on the attribute\n   *  - if no value is specified removes all the refinements for this attribute\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} [value] the value of the refinement\n   * @return {RefinementList} a new and updated refinement lst\n   */\n  removeRefinement: function removeRefinement(refinementList, attribute, value) {\n    if (value === undefined) {\n      // we use the \"filter\" form of clearRefinement, since it leaves empty values as-is\n      // the form with a string will remove the attribute completely\n      return lib.clearRefinement(refinementList, function (v, f) {\n        return attribute === f;\n      });\n    }\n\n    var valueAsString = '' + value;\n    return lib.clearRefinement(refinementList, function (v, f) {\n      return attribute === f && valueAsString === v;\n    });\n  },\n\n  /**\n   * Toggles the refinement value for an attribute.\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement\n   * @return {RefinementList} a new and updated list\n   */\n  toggleRefinement: function toggleRefinement(refinementList, attribute, value) {\n    if (value === undefined) throw new Error('toggleRefinement should be used with a value');\n\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return lib.removeRefinement(refinementList, attribute, value);\n    }\n\n    return lib.addRefinement(refinementList, attribute, value);\n  },\n\n  /**\n   * Clear all or parts of a RefinementList. Depending on the arguments, three\n   * kinds of behavior can happen:\n   *  - if no attribute is provided: clears the whole list\n   *  - if an attribute is provided as a string: clears the list for the specific attribute\n   *  - if an attribute is provided as a function: discards the elements for which the function returns true\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} [attribute] the attribute or function to discard\n   * @param {string} [refinementType] optional parameter to give more context to the attribute function\n   * @return {RefinementList} a new and updated refinement list\n   */\n  clearRefinement: function clearRefinement(refinementList, attribute, refinementType) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(refinementList)) {\n        return refinementList;\n      }\n\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(refinementList, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var newRefinementList = Object.keys(refinementList).reduce(function (memo, key) {\n        var values = refinementList[key] || [];\n        var facetList = values.filter(function (value) {\n          return !attribute(value, key, refinementType);\n        });\n\n        if (facetList.length !== values.length) {\n          hasChanged = true;\n        }\n\n        memo[key] = facetList;\n        return memo;\n      }, {});\n      if (hasChanged) return newRefinementList;\n      return refinementList;\n    }\n  },\n\n  /**\n   * Test if the refinement value is used for the attribute. If no refinement value\n   * is provided, test if the refinementList contains any refinement for the\n   * given attribute.\n   * @param {RefinementList} refinementList the list of refinement\n   * @param {string} attribute name of the attribute\n   * @param {string} [refinementValue] value of the filter/refinement\n   * @return {boolean}\n   */\n  isRefined: function isRefined(refinementList, attribute, refinementValue) {\n    var containsRefinements = !!refinementList[attribute] && refinementList[attribute].length > 0;\n\n    if (refinementValue === undefined || !containsRefinements) {\n      return containsRefinements;\n    }\n\n    var refinementValueAsString = '' + refinementValue;\n    return refinementList[attribute].indexOf(refinementValueAsString) !== -1;\n  }\n};\nmodule.exports = lib;","'use strict';\n\nvar events = require('events');\n\nvar inherits = require('../functions/inherits');\n/**\n * A DerivedHelper is a way to create sub requests to\n * Algolia from a main helper.\n * @class\n * @classdesc The DerivedHelper provides an event based interface for search callbacks:\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n */\n\n\nfunction DerivedHelper(mainHelper, fn) {\n  this.main = mainHelper;\n  this.fn = fn;\n  this.lastResults = null;\n}\n\ninherits(DerivedHelper, events.EventEmitter);\n/**\n * Detach this helper from the main helper\n * @return {undefined}\n * @throws Error if the derived helper is already detached\n */\n\nDerivedHelper.prototype.detach = function () {\n  this.removeAllListeners();\n  this.main.detachDerivedHelper(this);\n};\n\nDerivedHelper.prototype.getModifiedState = function (parameters) {\n  return this.fn(parameters);\n};\n\nmodule.exports = DerivedHelper;","'use strict';\n\nvar AlgoliaSearchHelper = require('./src/algoliasearch.helper');\n\nvar SearchParameters = require('./src/SearchParameters');\n\nvar SearchResults = require('./src/SearchResults');\n/**\n * The algoliasearchHelper module is the function that will let its\n * contains everything needed to use the Algoliasearch\n * Helper. It is a also a function that instanciate the helper.\n * To use the helper, you also need the Algolia JS client v3.\n * @example\n * //using the UMD build\n * var client = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76');\n * var helper = algoliasearchHelper(client, 'bestbuy', {\n *   facets: ['shipping'],\n *   disjunctiveFacets: ['category']\n * });\n * helper.on('result', function(event) {\n *   console.log(event.results);\n * });\n * helper\n *   .toggleFacetRefinement('category', 'Movies & TV Shows')\n *   .toggleFacetRefinement('shipping', 'Free shipping')\n *   .search();\n * @example\n * // The helper is an event emitter using the node API\n * helper.on('result', updateTheResults);\n * helper.once('result', updateTheResults);\n * helper.removeListener('result', updateTheResults);\n * helper.removeAllListeners('result');\n * @module algoliasearchHelper\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the name of the index to query\n * @param  {SearchParameters|object} opts an object defining the initial config of the search. It doesn't have to be a {SearchParameters}, just an object containing the properties you need from it.\n * @return {AlgoliaSearchHelper}\n */\n\n\nfunction algoliasearchHelper(client, index, opts) {\n  return new AlgoliaSearchHelper(client, index, opts);\n}\n/**\n * The version currently used\n * @member module:algoliasearchHelper.version\n * @type {number}\n */\n\n\nalgoliasearchHelper.version = require('./src/version.js');\n/**\n * Constructor for the Helper.\n * @member module:algoliasearchHelper.AlgoliaSearchHelper\n * @type {AlgoliaSearchHelper}\n */\n\nalgoliasearchHelper.AlgoliaSearchHelper = AlgoliaSearchHelper;\n/**\n * Constructor for the object containing all the parameters of the search.\n * @member module:algoliasearchHelper.SearchParameters\n * @type {SearchParameters}\n */\n\nalgoliasearchHelper.SearchParameters = SearchParameters;\n/**\n * Constructor for the object containing the results of the search.\n * @member module:algoliasearchHelper.SearchResults\n * @type {SearchResults}\n */\n\nalgoliasearchHelper.SearchResults = SearchResults;\nmodule.exports = algoliasearchHelper;","'use strict';\n\nfunction inherits(ctor, superCtor) {\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nmodule.exports = inherits;","'use strict';\n\nvar merge = require('../functions/merge');\n\nvar defaultsPure = require('../functions/defaultsPure');\n\nvar intersection = require('../functions/intersection');\n\nvar find = require('../functions/find');\n\nvar valToNumber = require('../functions/valToNumber');\n\nvar omit = require('../functions/omit');\n\nvar objectHasKeys = require('../functions/objectHasKeys');\n\nvar RefinementList = require('./RefinementList');\n/**\n * isEqual, but only for numeric refinement values, possible values:\n * - 5\n * - [5]\n * - [[5]]\n * - [[5,5],[4]]\n */\n\n\nfunction isEqualNumericRefinement(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.length === b.length && a.every(function (el, i) {\n      return isEqualNumericRefinement(b[i], el);\n    });\n  }\n\n  return a === b;\n}\n/**\n * like _.find but using deep equality to be able to use it\n * to find arrays.\n * @private\n * @param {any[]} array array to search into (elements are base or array of base)\n * @param {any} searchedValue the value we're looking for (base or array of base)\n * @return {any} the searched value or undefined\n */\n\n\nfunction findArray(array, searchedValue) {\n  return find(array, function (currentValue) {\n    return isEqualNumericRefinement(currentValue, searchedValue);\n  });\n}\n/**\n * The facet list is the structure used to store the list of values used to\n * filter a single attribute.\n * @typedef {string[]} SearchParameters.FacetList\n */\n\n/**\n * Structure to store numeric filters with the operator as the key. The supported operators\n * are `=`, `>`, `<`, `>=`, `<=` and `!=`.\n * @typedef {Object.<string, Array.<number|number[]>>} SearchParameters.OperatorList\n */\n\n/**\n * SearchParameters is the data structure that contains all the information\n * usable for making a search to Algolia API. It doesn't do the search itself,\n * nor does it contains logic about the parameters.\n * It is an immutable object, therefore it has been created in a way that each\n * changes does not change the object itself but returns a copy with the\n * modification.\n * This object should probably not be instantiated outside of the helper. It will\n * be provided when needed. This object is documented for reference as you'll\n * get it from events generated by the {@link AlgoliaSearchHelper}.\n * If need be, instantiate the Helper from the factory function {@link SearchParameters.make}\n * @constructor\n * @classdesc contains all the parameters of a search\n * @param {object|SearchParameters} newParameters existing parameters or partial object\n * for the properties of a new SearchParameters\n * @see SearchParameters.make\n * @example <caption>SearchParameters of the first query in\n *   <a href=\"http://demos.algolia.com/instant-search-demo/\">the instant search demo</a></caption>\n{\n   \"query\": \"\",\n   \"disjunctiveFacets\": [\n      \"customerReviewCount\",\n      \"category\",\n      \"salePrice_range\",\n      \"manufacturer\"\n  ],\n   \"maxValuesPerFacet\": 30,\n   \"page\": 0,\n   \"hitsPerPage\": 10,\n   \"facets\": [\n      \"type\",\n      \"shipping\"\n  ]\n}\n */\n\n\nfunction SearchParameters(newParameters) {\n  var params = newParameters ? SearchParameters._parseNumbers(newParameters) : {};\n  /**\n   * This attribute contains the list of all the conjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n\n  this.facets = params.facets || [];\n  /**\n   * This attribute contains the list of all the disjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n\n  this.disjunctiveFacets = params.disjunctiveFacets || [];\n  /**\n   * This attribute contains the list of all the hierarchical facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * Hierarchical facets are a sub type of disjunctive facets that\n   * let you filter faceted attributes hierarchically.\n   * @member {string[]|object[]}\n   */\n\n  this.hierarchicalFacets = params.hierarchicalFacets || []; // Refinements\n\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.facetsRefinements = params.facetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * excluded from the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters excluded for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.facetsExcludes = params.facetsExcludes || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the disjunctive facets. Each facet must be properly\n   * defined in the `disjunctiveFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.disjunctiveFacetsRefinements = params.disjunctiveFacetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the numeric attributes.\n   *\n   * The key is the name of the attribute, and the value is the\n   * filters to apply to this attribute.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `numericFilters` attribute.\n   * @member {Object.<string, SearchParameters.OperatorList>}\n   */\n\n  this.numericRefinements = params.numericRefinements || {};\n  /**\n   * This attribute contains all the tags used to refine the query.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `tagFilters` attribute.\n   * @member {string[]}\n   */\n\n  this.tagRefinements = params.tagRefinements || [];\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the hierarchical facets. Each facet must be properly\n   * defined in the `hierarchicalFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name. The FacetList values\n   * are structured as a string that contain the values for each level\n   * separated by the configured separator.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.hierarchicalFacetsRefinements = params.hierarchicalFacetsRefinements || {};\n  var self = this;\n  Object.keys(params).forEach(function (paramName) {\n    var isKeyKnown = SearchParameters.PARAMETERS.indexOf(paramName) !== -1;\n    var isValueDefined = params[paramName] !== undefined;\n\n    if (!isKeyKnown && isValueDefined) {\n      self[paramName] = params[paramName];\n    }\n  });\n}\n/**\n * List all the properties in SearchParameters and therefore all the known Algolia properties\n * This doesn't contain any beta/hidden features.\n * @private\n */\n\n\nSearchParameters.PARAMETERS = Object.keys(new SearchParameters());\n/**\n * @private\n * @param {object} partialState full or part of a state\n * @return {object} a new object with the number keys as number\n */\n\nSearchParameters._parseNumbers = function (partialState) {\n  // Do not reparse numbers in SearchParameters, they ought to be parsed already\n  if (partialState instanceof SearchParameters) return partialState;\n  var numbers = {};\n  var numberKeys = ['aroundPrecision', 'aroundRadius', 'getRankingInfo', 'minWordSizefor2Typos', 'minWordSizefor1Typo', 'page', 'maxValuesPerFacet', 'distinct', 'minimumAroundRadius', 'hitsPerPage', 'minProximity'];\n  numberKeys.forEach(function (k) {\n    var value = partialState[k];\n\n    if (typeof value === 'string') {\n      var parsedValue = parseFloat(value); // global isNaN is ok to use here, value is only number or NaN\n\n      numbers[k] = isNaN(parsedValue) ? value : parsedValue;\n    }\n  }); // there's two formats of insideBoundingBox, we need to parse\n  // the one which is an array of float geo rectangles\n\n  if (Array.isArray(partialState.insideBoundingBox)) {\n    numbers.insideBoundingBox = partialState.insideBoundingBox.map(function (geoRect) {\n      if (Array.isArray(geoRect)) {\n        return geoRect.map(function (value) {\n          return parseFloat(value);\n        });\n      }\n\n      return geoRect;\n    });\n  }\n\n  if (partialState.numericRefinements) {\n    var numericRefinements = {};\n    Object.keys(partialState.numericRefinements).forEach(function (attribute) {\n      var operators = partialState.numericRefinements[attribute] || {};\n      numericRefinements[attribute] = {};\n      Object.keys(operators).forEach(function (operator) {\n        var values = operators[operator];\n        var parsedValues = values.map(function (v) {\n          if (Array.isArray(v)) {\n            return v.map(function (vPrime) {\n              if (typeof vPrime === 'string') {\n                return parseFloat(vPrime);\n              }\n\n              return vPrime;\n            });\n          } else if (typeof v === 'string') {\n            return parseFloat(v);\n          }\n\n          return v;\n        });\n        numericRefinements[attribute][operator] = parsedValues;\n      });\n    });\n    numbers.numericRefinements = numericRefinements;\n  }\n\n  return merge({}, partialState, numbers);\n};\n/**\n * Factory for SearchParameters\n * @param {object|SearchParameters} newParameters existing parameters or partial\n * object for the properties of a new SearchParameters\n * @return {SearchParameters} frozen instance of SearchParameters\n */\n\n\nSearchParameters.make = function makeSearchParameters(newParameters) {\n  var instance = new SearchParameters(newParameters);\n  var hierarchicalFacets = newParameters.hierarchicalFacets || [];\n  hierarchicalFacets.forEach(function (facet) {\n    if (facet.rootPath) {\n      var currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (currentRefinement.length > 0 && currentRefinement[0].indexOf(facet.rootPath) !== 0) {\n        instance = instance.clearRefinements(facet.name);\n      } // get it again in case it has been cleared\n\n\n      currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (currentRefinement.length === 0) {\n        instance = instance.toggleHierarchicalFacetRefinement(facet.name, facet.rootPath);\n      }\n    }\n  });\n  return instance;\n};\n/**\n * Validates the new parameters based on the previous state\n * @param {SearchParameters} currentState the current state\n * @param {object|SearchParameters} parameters the new parameters to set\n * @return {Error|null} Error if the modification is invalid, null otherwise\n */\n\n\nSearchParameters.validate = function (currentState, parameters) {\n  var params = parameters || {};\n\n  if (currentState.tagFilters && params.tagRefinements && params.tagRefinements.length > 0) {\n    return new Error('[Tags] Cannot switch from the managed tag API to the advanced API. It is probably ' + 'an error, if it is really what you want, you should first clear the tags with clearTags method.');\n  }\n\n  if (currentState.tagRefinements.length > 0 && params.tagFilters) {\n    return new Error('[Tags] Cannot switch from the advanced tag API to the managed API. It is probably ' + 'an error, if it is not, you should first clear the tags with clearTags method.');\n  }\n\n  if (currentState.numericFilters && params.numericRefinements && objectHasKeys(params.numericRefinements)) {\n    return new Error(\"[Numeric filters] Can't switch from the advanced to the managed API. It\" + ' is probably an error, if this is really what you want, you have to first' + ' clear the numeric filters.');\n  }\n\n  if (objectHasKeys(currentState.numericRefinements) && params.numericFilters) {\n    return new Error(\"[Numeric filters] Can't switch from the managed API to the advanced. It\" + ' is probably an error, if this is really what you want, you have to first' + ' clear the numeric filters.');\n  }\n\n  return null;\n};\n\nSearchParameters.prototype = {\n  constructor: SearchParameters,\n\n  /**\n   * Remove all refinements (disjunctive + conjunctive + excludes + numeric filters)\n   * @method\n   * @param {undefined|string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {SearchParameters}\n   */\n  clearRefinements: function clearRefinements(attribute) {\n    var patch = {\n      numericRefinements: this._clearNumericRefinements(attribute),\n      facetsRefinements: RefinementList.clearRefinement(this.facetsRefinements, attribute, 'conjunctiveFacet'),\n      facetsExcludes: RefinementList.clearRefinement(this.facetsExcludes, attribute, 'exclude'),\n      disjunctiveFacetsRefinements: RefinementList.clearRefinement(this.disjunctiveFacetsRefinements, attribute, 'disjunctiveFacet'),\n      hierarchicalFacetsRefinements: RefinementList.clearRefinement(this.hierarchicalFacetsRefinements, attribute, 'hierarchicalFacet')\n    };\n\n    if (patch.numericRefinements === this.numericRefinements && patch.facetsRefinements === this.facetsRefinements && patch.facetsExcludes === this.facetsExcludes && patch.disjunctiveFacetsRefinements === this.disjunctiveFacetsRefinements && patch.hierarchicalFacetsRefinements === this.hierarchicalFacetsRefinements) {\n      return this;\n    }\n\n    return this.setQueryParameters(patch);\n  },\n\n  /**\n   * Remove all the refined tags from the SearchParameters\n   * @method\n   * @return {SearchParameters}\n   */\n  clearTags: function clearTags() {\n    if (this.tagFilters === undefined && this.tagRefinements.length === 0) return this;\n    return this.setQueryParameters({\n      tagFilters: undefined,\n      tagRefinements: []\n    });\n  },\n\n  /**\n   * Set the index.\n   * @method\n   * @param {string} index the index name\n   * @return {SearchParameters}\n   */\n  setIndex: function setIndex(index) {\n    if (index === this.index) return this;\n    return this.setQueryParameters({\n      index: index\n    });\n  },\n\n  /**\n   * Query setter\n   * @method\n   * @param {string} newQuery value for the new query\n   * @return {SearchParameters}\n   */\n  setQuery: function setQuery(newQuery) {\n    if (newQuery === this.query) return this;\n    return this.setQueryParameters({\n      query: newQuery\n    });\n  },\n\n  /**\n   * Page setter\n   * @method\n   * @param {number} newPage new page number\n   * @return {SearchParameters}\n   */\n  setPage: function setPage(newPage) {\n    if (newPage === this.page) return this;\n    return this.setQueryParameters({\n      page: newPage\n    });\n  },\n\n  /**\n   * Facets setter\n   * The facets are the simple facets, used for conjunctive (and) faceting.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for conjunctive faceting\n   * @return {SearchParameters}\n   */\n  setFacets: function setFacets(facets) {\n    return this.setQueryParameters({\n      facets: facets\n    });\n  },\n\n  /**\n   * Disjunctive facets setter\n   * Change the list of disjunctive (or) facets the helper chan handle.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for disjunctive faceting\n   * @return {SearchParameters}\n   */\n  setDisjunctiveFacets: function setDisjunctiveFacets(facets) {\n    return this.setQueryParameters({\n      disjunctiveFacets: facets\n    });\n  },\n\n  /**\n   * HitsPerPage setter\n   * Hits per page represents the number of hits retrieved for this query\n   * @method\n   * @param {number} n number of hits retrieved per page of results\n   * @return {SearchParameters}\n   */\n  setHitsPerPage: function setHitsPerPage(n) {\n    if (this.hitsPerPage === n) return this;\n    return this.setQueryParameters({\n      hitsPerPage: n\n    });\n  },\n\n  /**\n   * typoTolerance setter\n   * Set the value of typoTolerance\n   * @method\n   * @param {string} typoTolerance new value of typoTolerance (\"true\", \"false\", \"min\" or \"strict\")\n   * @return {SearchParameters}\n   */\n  setTypoTolerance: function setTypoTolerance(typoTolerance) {\n    if (this.typoTolerance === typoTolerance) return this;\n    return this.setQueryParameters({\n      typoTolerance: typoTolerance\n    });\n  },\n\n  /**\n   * Add a numeric filter for a given attribute\n   * When value is an array, they are combined with OR\n   * When value is a single value, it will combined with AND\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} operator operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number | number[]} value value of the filter\n   * @return {SearchParameters}\n   * @example\n   * // for price = 50 or 40\n   * searchparameter.addNumericRefinement('price', '=', [50, 40]);\n   * @example\n   * // for size = 38 and 40\n   * searchparameter.addNumericRefinement('size', '=', 38);\n   * searchparameter.addNumericRefinement('size', '=', 40);\n   */\n  addNumericRefinement: function addNumericRefinement(attribute, operator, v) {\n    var value = valToNumber(v);\n    if (this.isNumericRefined(attribute, operator, value)) return this;\n    var mod = merge({}, this.numericRefinements);\n    mod[attribute] = merge({}, mod[attribute]);\n\n    if (mod[attribute][operator]) {\n      // Array copy\n      mod[attribute][operator] = mod[attribute][operator].slice(); // Add the element. Concat can't be used here because value can be an array.\n\n      mod[attribute][operator].push(value);\n    } else {\n      mod[attribute][operator] = [value];\n    }\n\n    return this.setQueryParameters({\n      numericRefinements: mod\n    });\n  },\n\n  /**\n   * Get the list of conjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getConjunctiveRefinements: function getConjunctiveRefinements(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n\n    return this.facetsRefinements[facetName] || [];\n  },\n\n  /**\n   * Get the list of disjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getDisjunctiveRefinements: function getDisjunctiveRefinements(facetName) {\n    if (!this.isDisjunctiveFacet(facetName)) {\n      return [];\n    }\n\n    return this.disjunctiveFacetsRefinements[facetName] || [];\n  },\n\n  /**\n   * Get the list of hierarchical refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getHierarchicalRefinement: function getHierarchicalRefinement(facetName) {\n    // we send an array but we currently do not support multiple\n    // hierarchicalRefinements for a hierarchicalFacet\n    return this.hierarchicalFacetsRefinements[facetName] || [];\n  },\n\n  /**\n   * Get the list of exclude refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getExcludeRefinements: function getExcludeRefinements(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n\n    return this.facetsExcludes[facetName] || [];\n  },\n\n  /**\n   * Remove all the numeric filter for a given (attribute, operator)\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} [operator] operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number} [number] the value to be removed\n   * @return {SearchParameters}\n   */\n  removeNumericRefinement: function removeNumericRefinement(attribute, operator, paramValue) {\n    if (paramValue !== undefined) {\n      if (!this.isNumericRefined(attribute, operator, paramValue)) {\n        return this;\n      }\n\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function (value, key) {\n          return key === attribute && value.op === operator && isEqualNumericRefinement(value.val, valToNumber(paramValue));\n        })\n      });\n    } else if (operator !== undefined) {\n      if (!this.isNumericRefined(attribute, operator)) return this;\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function (value, key) {\n          return key === attribute && value.op === operator;\n        })\n      });\n    }\n\n    if (!this.isNumericRefined(attribute)) return this;\n    return this.setQueryParameters({\n      numericRefinements: this._clearNumericRefinements(function (value, key) {\n        return key === attribute;\n      })\n    });\n  },\n\n  /**\n   * Get the list of numeric refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {SearchParameters.OperatorList[]} list of refinements\n   */\n  getNumericRefinements: function getNumericRefinements(facetName) {\n    return this.numericRefinements[facetName] || {};\n  },\n\n  /**\n   * Return the current refinement for the (attribute, operator)\n   * @param {string} attribute attribute in the record\n   * @param {string} operator operator applied on the refined values\n   * @return {Array.<number|number[]>} refined values\n   */\n  getNumericRefinement: function getNumericRefinement(attribute, operator) {\n    return this.numericRefinements[attribute] && this.numericRefinements[attribute][operator];\n  },\n\n  /**\n   * Clear numeric filters.\n   * @method\n   * @private\n   * @param {string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {Object.<string, OperatorList>}\n   */\n  _clearNumericRefinements: function _clearNumericRefinements(attribute) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(this.numericRefinements)) {\n        return this.numericRefinements;\n      }\n\n      return {};\n    } else if (typeof attribute === 'string') {\n      if (!objectHasKeys(this.numericRefinements[attribute])) {\n        return this.numericRefinements;\n      }\n\n      return omit(this.numericRefinements, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var numericRefinements = this.numericRefinements;\n      var newNumericRefinements = Object.keys(numericRefinements).reduce(function (memo, key) {\n        var operators = numericRefinements[key];\n        var operatorList = {};\n        operators = operators || {};\n        Object.keys(operators).forEach(function (operator) {\n          var values = operators[operator] || [];\n          var outValues = [];\n          values.forEach(function (value) {\n            var predicateResult = attribute({\n              val: value,\n              op: operator\n            }, key, 'numeric');\n            if (!predicateResult) outValues.push(value);\n          });\n\n          if (outValues.length !== values.length) {\n            hasChanged = true;\n          }\n\n          operatorList[operator] = outValues;\n        });\n        memo[key] = operatorList;\n        return memo;\n      }, {});\n      if (hasChanged) return newNumericRefinements;\n      return this.numericRefinements;\n    }\n  },\n\n  /**\n   * Add a facet to the facets attribute of the helper configuration, if it\n   * isn't already present.\n   * @method\n   * @param {string} facet facet name to add\n   * @return {SearchParameters}\n   */\n  addFacet: function addFacet(facet) {\n    if (this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      facets: this.facets.concat([facet])\n    });\n  },\n\n  /**\n   * Add a disjunctive facet to the disjunctiveFacets attribute of the helper\n   * configuration, if it isn't already present.\n   * @method\n   * @param {string} facet disjunctive facet name to add\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacet: function addDisjunctiveFacet(facet) {\n    if (this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.concat([facet])\n    });\n  },\n\n  /**\n   * Add a hierarchical facet to the hierarchicalFacets attribute of the helper\n   * configuration.\n   * @method\n   * @param {object} hierarchicalFacet hierarchical facet to add\n   * @return {SearchParameters}\n   * @throws will throw an error if a hierarchical facet with the same name was already declared\n   */\n  addHierarchicalFacet: function addHierarchicalFacet(hierarchicalFacet) {\n    if (this.isHierarchicalFacet(hierarchicalFacet.name)) {\n      throw new Error('Cannot declare two hierarchical facets with the same name: `' + hierarchicalFacet.name + '`');\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.concat([hierarchicalFacet])\n    });\n  },\n\n  /**\n   * Add a refinement on a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addFacetRefinement: function addFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.addRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Exclude a value from a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the exclusion on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addExcludeRefinement: function addExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.addRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n\n  /**\n   * Adds a refinement on a disjunctive facet.\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacetRefinement: function addDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.addRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * addTagRefinement adds a tag to the list used to filter the results\n   * @param {string} tag tag to be added\n   * @return {SearchParameters}\n   */\n  addTagRefinement: function addTagRefinement(tag) {\n    if (this.isTagRefined(tag)) return this;\n    var modification = {\n      tagRefinements: this.tagRefinements.concat(tag)\n    };\n    return this.setQueryParameters(modification);\n  },\n\n  /**\n   * Remove a facet from the facets attribute of the helper configuration, if it\n   * is present.\n   * @method\n   * @param {string} facet facet name to remove\n   * @return {SearchParameters}\n   */\n  removeFacet: function removeFacet(facet) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      facets: this.facets.filter(function (f) {\n        return f !== facet;\n      })\n    });\n  },\n\n  /**\n   * Remove a disjunctive facet from the disjunctiveFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet disjunctive facet name to remove\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacet: function removeDisjunctiveFacet(facet) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.filter(function (f) {\n        return f !== facet;\n      })\n    });\n  },\n\n  /**\n   * Remove a hierarchical facet from the hierarchicalFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet hierarchical facet name to remove\n   * @return {SearchParameters}\n   */\n  removeHierarchicalFacet: function removeHierarchicalFacet(facet) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.filter(function (f) {\n        return f.name !== facet;\n      })\n    });\n  },\n\n  /**\n   * Remove a refinement set on facet. If a value is provided, it will clear the\n   * refinement for the given value, otherwise it will clear all the refinement\n   * values for the faceted attribute.\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} [value] value used to filter\n   * @return {SearchParameters}\n   */\n  removeFacetRefinement: function removeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (!RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.removeRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Remove a negative refinement on a facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeExcludeRefinement: function removeExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (!RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.removeRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n\n  /**\n   * Remove a refinement on a disjunctive facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacetRefinement: function removeDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    if (!RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.removeRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Remove a tag from the list of tag refinements\n   * @method\n   * @param {string} tag the tag to remove\n   * @return {SearchParameters}\n   */\n  removeTagRefinement: function removeTagRefinement(tag) {\n    if (!this.isTagRefined(tag)) return this;\n    var modification = {\n      tagRefinements: this.tagRefinements.filter(function (t) {\n        return t !== tag;\n      })\n    };\n    return this.setQueryParameters(modification);\n  },\n\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   * @deprecated since version 2.19.0, see {@link SearchParameters#toggleFacetRefinement}\n   */\n  toggleRefinement: function toggleRefinement(facet, value) {\n    return this.toggleFacetRefinement(facet, value);\n  },\n\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   */\n  toggleFacetRefinement: function toggleFacetRefinement(facet, value) {\n    if (this.isHierarchicalFacet(facet)) {\n      return this.toggleHierarchicalFacetRefinement(facet, value);\n    } else if (this.isConjunctiveFacet(facet)) {\n      return this.toggleConjunctiveFacetRefinement(facet, value);\n    } else if (this.isDisjunctiveFacet(facet)) {\n      return this.toggleDisjunctiveFacetRefinement(facet, value);\n    }\n\n    throw new Error('Cannot refine the undeclared facet ' + facet + '; it should be added to the helper options facets, disjunctiveFacets or hierarchicalFacets');\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleConjunctiveFacetRefinement: function toggleConjunctiveFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.toggleRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleExcludeFacetRefinement: function toggleExcludeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.toggleRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleDisjunctiveFacetRefinement: function toggleDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.toggleRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleHierarchicalFacetRefinement: function toggleHierarchicalFacetRefinement(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');\n    }\n\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facet));\n\n    var mod = {};\n    var upOneOrMultipleLevel = this.hierarchicalFacetsRefinements[facet] !== undefined && this.hierarchicalFacetsRefinements[facet].length > 0 && ( // remove current refinement:\n    // refinement was 'beer > IPA', call is toggleRefine('beer > IPA'), refinement should be `beer`\n    this.hierarchicalFacetsRefinements[facet][0] === value || // remove a parent refinement of the current refinement:\n    //  - refinement was 'beer > IPA > Flying dog'\n    //  - call is toggleRefine('beer > IPA')\n    //  - refinement should be `beer`\n    this.hierarchicalFacetsRefinements[facet][0].indexOf(value + separator) === 0);\n\n    if (upOneOrMultipleLevel) {\n      if (value.indexOf(separator) === -1) {\n        // go back to root level\n        mod[facet] = [];\n      } else {\n        mod[facet] = [value.slice(0, value.lastIndexOf(separator))];\n      }\n    } else {\n      mod[facet] = [value];\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Adds a refinement on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @param {string} path the hierarchical facet path\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is refined\n   */\n  addHierarchicalFacetRefinement: function addHierarchicalFacetRefinement(facet, path) {\n    if (this.isHierarchicalFacetRefined(facet)) {\n      throw new Error(facet + ' is already refined.');\n    }\n\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration.');\n    }\n\n    var mod = {};\n    mod[facet] = [path];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Removes the refinement set on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is not refined\n   */\n  removeHierarchicalFacetRefinement: function removeHierarchicalFacetRefinement(facet) {\n    if (!this.isHierarchicalFacetRefined(facet)) {\n      return this;\n    }\n\n    var mod = {};\n    mod[facet] = [];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Switch the tag refinement\n   * @method\n   * @param {string} tag the tag to remove or add\n   * @return {SearchParameters}\n   */\n  toggleTagRefinement: function toggleTagRefinement(tag) {\n    if (this.isTagRefined(tag)) {\n      return this.removeTagRefinement(tag);\n    }\n\n    return this.addTagRefinement(tag);\n  },\n\n  /**\n   * Test if the facet name is from one of the disjunctive facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isDisjunctiveFacet: function isDisjunctiveFacet(facet) {\n    return this.disjunctiveFacets.indexOf(facet) > -1;\n  },\n\n  /**\n   * Test if the facet name is from one of the hierarchical facets\n   * @method\n   * @param {string} facetName facet name to test\n   * @return {boolean}\n   */\n  isHierarchicalFacet: function isHierarchicalFacet(facetName) {\n    return this.getHierarchicalFacetByName(facetName) !== undefined;\n  },\n\n  /**\n   * Test if the facet name is from one of the conjunctive/normal facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isConjunctiveFacet: function isConjunctiveFacet(facet) {\n    return this.facets.indexOf(facet) > -1;\n  },\n\n  /**\n   * Returns true if the facet is refined, either for a specific value or in\n   * general.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value, optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isFacetRefined: function isFacetRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n\n    return RefinementList.isRefined(this.facetsRefinements, facet, value);\n  },\n\n  /**\n   * Returns true if the facet contains exclusions or if a specific value is\n   * excluded.\n   *\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isExcludeRefined: function isExcludeRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n\n    return RefinementList.isRefined(this.facetsExcludes, facet, value);\n  },\n\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isDisjunctiveFacetRefined: function isDisjunctiveFacetRefined(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return false;\n    }\n\n    return RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value);\n  },\n\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isHierarchicalFacetRefined: function isHierarchicalFacetRefined(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return false;\n    }\n\n    var refinements = this.getHierarchicalRefinement(facet);\n\n    if (!value) {\n      return refinements.length > 0;\n    }\n\n    return refinements.indexOf(value) !== -1;\n  },\n\n  /**\n   * Test if the triple (attribute, operator, value) is already refined.\n   * If only the attribute and the operator are provided, it tests if the\n   * contains any refinement value.\n   * @method\n   * @param {string} attribute attribute for which the refinement is applied\n   * @param {string} [operator] operator of the refinement\n   * @param {string} [value] value of the refinement\n   * @return {boolean} true if it is refined\n   */\n  isNumericRefined: function isNumericRefined(attribute, operator, value) {\n    if (value === undefined && operator === undefined) {\n      return !!this.numericRefinements[attribute];\n    }\n\n    var isOperatorDefined = this.numericRefinements[attribute] && this.numericRefinements[attribute][operator] !== undefined;\n\n    if (value === undefined || !isOperatorDefined) {\n      return isOperatorDefined;\n    }\n\n    var parsedValue = valToNumber(value);\n    var isAttributeValueDefined = findArray(this.numericRefinements[attribute][operator], parsedValue) !== undefined;\n    return isOperatorDefined && isAttributeValueDefined;\n  },\n\n  /**\n   * Returns true if the tag refined, false otherwise\n   * @method\n   * @param {string} tag the tag to check\n   * @return {boolean}\n   */\n  isTagRefined: function isTagRefined(tag) {\n    return this.tagRefinements.indexOf(tag) !== -1;\n  },\n\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedDisjunctiveFacets: function getRefinedDisjunctiveFacets() {\n    var self = this; // attributes used for numeric filter can also be disjunctive\n\n    var disjunctiveNumericRefinedFacets = intersection(Object.keys(this.numericRefinements).filter(function (facet) {\n      return Object.keys(self.numericRefinements[facet]).length > 0;\n    }), this.disjunctiveFacets);\n    return Object.keys(this.disjunctiveFacetsRefinements).filter(function (facet) {\n      return self.disjunctiveFacetsRefinements[facet].length > 0;\n    }).concat(disjunctiveNumericRefinedFacets).concat(this.getRefinedHierarchicalFacets());\n  },\n\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedHierarchicalFacets: function getRefinedHierarchicalFacets() {\n    var self = this;\n    return intersection( // enforce the order between the two arrays,\n    // so that refinement name index === hierarchical facet index\n    this.hierarchicalFacets.map(function (facet) {\n      return facet.name;\n    }), Object.keys(this.hierarchicalFacetsRefinements).filter(function (facet) {\n      return self.hierarchicalFacetsRefinements[facet].length > 0;\n    }));\n  },\n\n  /**\n   * Returned the list of all disjunctive facets not refined\n   * @method\n   * @return {string[]}\n   */\n  getUnrefinedDisjunctiveFacets: function getUnrefinedDisjunctiveFacets() {\n    var refinedFacets = this.getRefinedDisjunctiveFacets();\n    return this.disjunctiveFacets.filter(function (f) {\n      return refinedFacets.indexOf(f) === -1;\n    });\n  },\n  managedParameters: ['index', 'facets', 'disjunctiveFacets', 'facetsRefinements', 'facetsExcludes', 'disjunctiveFacetsRefinements', 'numericRefinements', 'tagRefinements', 'hierarchicalFacets', 'hierarchicalFacetsRefinements'],\n  getQueryParams: function getQueryParams() {\n    var managedParameters = this.managedParameters;\n    var queryParams = {};\n    var self = this;\n    Object.keys(this).forEach(function (paramName) {\n      var paramValue = self[paramName];\n\n      if (managedParameters.indexOf(paramName) === -1 && paramValue !== undefined) {\n        queryParams[paramName] = paramValue;\n      }\n    });\n    return queryParams;\n  },\n\n  /**\n   * Let the user set a specific value for a given parameter. Will return the\n   * same instance if the parameter is invalid or if the value is the same as the\n   * previous one.\n   * @method\n   * @param {string} parameter the parameter name\n   * @param {any} value the value to be set, must be compliant with the definition\n   * of the attribute on the object\n   * @return {SearchParameters} the updated state\n   */\n  setQueryParameter: function setParameter(parameter, value) {\n    if (this[parameter] === value) return this;\n    var modification = {};\n    modification[parameter] = value;\n    return this.setQueryParameters(modification);\n  },\n\n  /**\n   * Let the user set any of the parameters with a plain object.\n   * @method\n   * @param {object} params all the keys and the values to be updated\n   * @return {SearchParameters} a new updated instance\n   */\n  setQueryParameters: function setQueryParameters(params) {\n    if (!params) return this;\n    var error = SearchParameters.validate(this, params);\n\n    if (error) {\n      throw error;\n    }\n\n    var self = this;\n\n    var nextWithNumbers = SearchParameters._parseNumbers(params);\n\n    var previousPlainObject = Object.keys(this).reduce(function (acc, key) {\n      acc[key] = self[key];\n      return acc;\n    }, {});\n    var nextPlainObject = Object.keys(nextWithNumbers).reduce(function (previous, key) {\n      var isPreviousValueDefined = previous[key] !== undefined;\n      var isNextValueDefined = nextWithNumbers[key] !== undefined;\n\n      if (isPreviousValueDefined && !isNextValueDefined) {\n        return omit(previous, [key]);\n      }\n\n      if (isNextValueDefined) {\n        previous[key] = nextWithNumbers[key];\n      }\n\n      return previous;\n    }, previousPlainObject);\n    return new this.constructor(nextPlainObject);\n  },\n\n  /**\n   * Returns a new instance with the page reset. Two scenarios possible:\n   * the page is omitted -> return the given instance\n   * the page is set -> return a new instance with a page of 0\n   * @return {SearchParameters} a new updated instance\n   */\n  resetPage: function resetPage() {\n    if (this.page === undefined) {\n      return this;\n    }\n\n    return this.setPage(0);\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSortBy: function _getHierarchicalFacetSortBy(hierarchicalFacet) {\n    return hierarchicalFacet.sortBy || ['isRefined:desc', 'name:asc'];\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSeparator: function _getHierarchicalFacetSeparator(hierarchicalFacet) {\n    return hierarchicalFacet.separator || ' > ';\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet prefix path or null\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.rootPath or null as default\n   */\n  _getHierarchicalRootPath: function _getHierarchicalRootPath(hierarchicalFacet) {\n    return hierarchicalFacet.rootPath || null;\n  },\n\n  /**\n   * Helper function to check if we show the parent level of the hierarchicalFacet\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.showParentLevel or true as default\n   */\n  _getHierarchicalShowParentLevel: function _getHierarchicalShowParentLevel(hierarchicalFacet) {\n    if (typeof hierarchicalFacet.showParentLevel === 'boolean') {\n      return hierarchicalFacet.showParentLevel;\n    }\n\n    return true;\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet by it's name\n   * @param  {string} hierarchicalFacetName\n   * @return {object} a hierarchicalFacet\n   */\n  getHierarchicalFacetByName: function getHierarchicalFacetByName(hierarchicalFacetName) {\n    return find(this.hierarchicalFacets, function (f) {\n      return f.name === hierarchicalFacetName;\n    });\n  },\n\n  /**\n   * Get the current breadcrumb for a hierarchical facet, as an array\n   * @param  {string} facetName Hierarchical facet name\n   * @return {array.<string>} the path as an array of string\n   */\n  getHierarchicalFacetBreadcrumb: function getHierarchicalFacetBreadcrumb(facetName) {\n    if (!this.isHierarchicalFacet(facetName)) {\n      return [];\n    }\n\n    var refinement = this.getHierarchicalRefinement(facetName)[0];\n    if (!refinement) return [];\n\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facetName));\n\n    var path = refinement.split(separator);\n    return path.map(function (part) {\n      return part.trim();\n    });\n  },\n  toString: function toString() {\n    return JSON.stringify(this, null, 2);\n  }\n};\n/**\n * Callback used for clearRefinement method\n * @callback SearchParameters.clearCallback\n * @param {OperatorList|FacetList} value the value of the filter\n * @param {string} key the current attribute name\n * @param {string} type `numeric`, `disjunctiveFacet`, `conjunctiveFacet`, `hierarchicalFacet` or `exclude`\n * depending on the type of facet\n * @return {boolean} `true` if the element should be removed. `false` otherwise.\n */\n\nmodule.exports = SearchParameters;","'use strict';\n\nfunction intersection(arr1, arr2) {\n  return arr1.filter(function (value, index) {\n    return arr2.indexOf(value) > -1 && arr1.indexOf(value) === index\n    /* skips duplicates */\n    ;\n  });\n}\n\nmodule.exports = intersection;","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nmodule.exports = function compact(array) {\n  if (!Array.isArray(array)) {\n    return [];\n  }\n\n  return array.filter(Boolean);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null;\nvar ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {\n  return Function.prototype.apply.call(target, receiver, args);\n};\nvar ReflectOwnKeys;\n\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys;\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n};\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\n\nmodule.exports = EventEmitter;\nmodule.exports.once = once; // Backwards-compat with node 0.10.x\n\nEventEmitter.EventEmitter = EventEmitter;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\n\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function get() {\n    return defaultMaxListeners;\n  },\n  set: function set(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function () {\n  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}; // Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\n\n\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args.push(arguments[i]);\n  }\n\n  var doError = type === 'error';\n  var events = this._events;\n  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false; // If there is no 'error' event listener then throw.\n\n  if (doError) {\n    var er;\n    if (args.length > 0) er = args[0];\n\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    } // At least give some kind of context to the user\n\n\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n  if (handler === undefined) return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n\n    for (var i = 0; i < len; ++i) {\n      ReflectApply(listeners[i], this, args);\n    }\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n  checkListener(listener);\n  events = target._events;\n\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n\n      events = target._events;\n    }\n\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] : [existing, listener]; // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    } // Check for listener leak\n\n\n    m = _getMaxListeners(target);\n\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true; // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n\n      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener = function prependListener(type, listener) {\n  return _addListener(this, type, listener, true);\n};\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0) return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = {\n    fired: false,\n    wrapFn: undefined,\n    target: target,\n    type: type,\n    listener: listener\n  };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n  checkListener(listener);\n  this.prependListener(type, _onceWrap(this, type, listener));\n  return this;\n}; // Emits a 'removeListener' event if and only if the listener was removed.\n\n\nEventEmitter.prototype.removeListener = function removeListener(type, listener) {\n  var list, events, position, i, originalListener;\n  checkListener(listener);\n  events = this._events;\n  if (events === undefined) return this;\n  list = events[type];\n  if (list === undefined) return this;\n\n  if (list === listener || list.listener === listener) {\n    if (--this._eventsCount === 0) this._events = Object.create(null);else {\n      delete events[type];\n      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n    }\n  } else if (typeof list !== 'function') {\n    position = -1;\n\n    for (i = list.length - 1; i >= 0; i--) {\n      if (list[i] === listener || list[i].listener === listener) {\n        originalListener = list[i].listener;\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0) return this;\n    if (position === 0) list.shift();else {\n      spliceOne(list, position);\n    }\n    if (list.length === 1) events[type] = list[0];\n    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n  var listeners, events, i;\n  events = this._events;\n  if (events === undefined) return this; // not listening for removeListener, no need to emit\n\n  if (events.removeListener === undefined) {\n    if (arguments.length === 0) {\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n    } else if (events[type] !== undefined) {\n      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];\n    }\n\n    return this;\n  } // emit removeListener for all listeners on all events\n\n\n  if (arguments.length === 0) {\n    var keys = Object.keys(events);\n    var key;\n\n    for (i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n\n    this.removeAllListeners('removeListener');\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n    return this;\n  }\n\n  listeners = events[type];\n\n  if (typeof listeners === 'function') {\n    this.removeListener(type, listeners);\n  } else if (listeners !== undefined) {\n    // LIFO order\n    for (i = listeners.length - 1; i >= 0; i--) {\n      this.removeListener(type, listeners[i]);\n    }\n  }\n\n  return this;\n};\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n  if (events === undefined) return [];\n  var evlistener = events[type];\n  if (evlistener === undefined) return [];\n  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function (emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\n\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n\n  for (var i = 0; i < n; ++i) {\n    copy[i] = arr[i];\n  }\n\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++) {\n    list[index] = list[index + 1];\n  }\n\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n\n      resolve([].slice.call(arguments));\n    }\n\n    ;\n    var errorListener; // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}","'use strict';\n\nfunction objectHasKeys(obj) {\n  return obj && Object.keys(obj).length > 0;\n}\n\nmodule.exports = objectHasKeys;","'use strict'; // NOTE: this behaves like lodash/defaults, but doesn't mutate the target\n// it also preserve keys order\n\nmodule.exports = function defaultsPure() {\n  var sources = Array.prototype.slice.call(arguments);\n  return sources.reduceRight(function (acc, source) {\n    Object.keys(Object(source)).forEach(function (key) {\n      if (source[key] === undefined) {\n        return;\n      }\n\n      if (acc[key] !== undefined) {\n        // remove if already added, so that we can add it in correct order\n        delete acc[key];\n      }\n\n      acc[key] = source[key];\n    });\n    return acc;\n  }, {});\n};","'use strict';\n\nmodule.exports = generateTrees;\n\nvar orderBy = require('../functions/orderBy');\n\nvar find = require('../functions/find');\n\nvar prepareHierarchicalFacetSortBy = require('../functions/formatSort');\n\nfunction generateTrees(state) {\n  return function generate(hierarchicalFacetResult, hierarchicalFacetIndex) {\n    var hierarchicalFacet = state.hierarchicalFacets[hierarchicalFacetIndex];\n    var hierarchicalFacetRefinement = state.hierarchicalFacetsRefinements[hierarchicalFacet.name] && state.hierarchicalFacetsRefinements[hierarchicalFacet.name][0] || '';\n\n    var hierarchicalSeparator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var hierarchicalRootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n\n    var hierarchicalShowParentLevel = state._getHierarchicalShowParentLevel(hierarchicalFacet);\n\n    var sortBy = prepareHierarchicalFacetSortBy(state._getHierarchicalFacetSortBy(hierarchicalFacet));\n    var rootExhaustive = hierarchicalFacetResult.every(function (facetResult) {\n      return facetResult.exhaustive;\n    });\n    var generateTreeFn = generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel, hierarchicalFacetRefinement);\n    var results = hierarchicalFacetResult;\n\n    if (hierarchicalRootPath) {\n      results = hierarchicalFacetResult.slice(hierarchicalRootPath.split(hierarchicalSeparator).length);\n    }\n\n    return results.reduce(generateTreeFn, {\n      name: state.hierarchicalFacets[hierarchicalFacetIndex].name,\n      count: null,\n      // root level, no count\n      isRefined: true,\n      // root level, always refined\n      path: null,\n      // root level, no path\n      exhaustive: rootExhaustive,\n      data: null\n    });\n  };\n}\n\nfunction generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel, currentRefinement) {\n  return function generateTree(hierarchicalTree, hierarchicalFacetResult, currentHierarchicalLevel) {\n    var parent = hierarchicalTree;\n\n    if (currentHierarchicalLevel > 0) {\n      var level = 0;\n      parent = hierarchicalTree;\n\n      while (level < currentHierarchicalLevel) {\n        /**\n         * @type {object[]]} hierarchical data\n         */\n        var data = parent && Array.isArray(parent.data) ? parent.data : [];\n        parent = find(data, function (subtree) {\n          return subtree.isRefined;\n        });\n        level++;\n      }\n    } // we found a refined parent, let's add current level data under it\n\n\n    if (parent) {\n      // filter values in case an object has multiple categories:\n      //   {\n      //     categories: {\n      //       level0: ['beers', 'bières'],\n      //       level1: ['beers > IPA', 'bières > Belges']\n      //     }\n      //   }\n      //\n      // If parent refinement is `beers`, then we do not want to have `bières > Belges`\n      // showing up\n      var picked = Object.keys(hierarchicalFacetResult.data).map(function (facetValue) {\n        return [facetValue, hierarchicalFacetResult.data[facetValue]];\n      }).filter(function (tuple) {\n        var facetValue = tuple[0];\n        return onlyMatchingTree(facetValue, parent.path || hierarchicalRootPath, currentRefinement, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel);\n      });\n      parent.data = orderBy(picked.map(function (tuple) {\n        var facetValue = tuple[0];\n        var facetCount = tuple[1];\n        return format(facetCount, facetValue, hierarchicalSeparator, currentRefinement, hierarchicalFacetResult.exhaustive);\n      }), sortBy[0], sortBy[1]);\n    }\n\n    return hierarchicalTree;\n  };\n}\n\nfunction onlyMatchingTree(facetValue, parentPath, currentRefinement, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel) {\n  // we want the facetValue is a child of hierarchicalRootPath\n  if (hierarchicalRootPath && (facetValue.indexOf(hierarchicalRootPath) !== 0 || hierarchicalRootPath === facetValue)) {\n    return false;\n  } // we always want root levels (only when there is no prefix path)\n\n\n  return !hierarchicalRootPath && facetValue.indexOf(hierarchicalSeparator) === -1 || // if there is a rootPath, being root level mean 1 level under rootPath\n  hierarchicalRootPath && facetValue.split(hierarchicalSeparator).length - hierarchicalRootPath.split(hierarchicalSeparator).length === 1 || // if current refinement is a root level and current facetValue is a root level,\n  // keep the facetValue\n  facetValue.indexOf(hierarchicalSeparator) === -1 && currentRefinement.indexOf(hierarchicalSeparator) === -1 || // currentRefinement is a child of the facet value\n  currentRefinement.indexOf(facetValue) === 0 || // facetValue is a child of the current parent, add it\n  facetValue.indexOf(parentPath + hierarchicalSeparator) === 0 && (hierarchicalShowParentLevel || facetValue.indexOf(currentRefinement) === 0);\n}\n\nfunction format(facetCount, facetValue, hierarchicalSeparator, currentRefinement, exhaustive) {\n  var parts = facetValue.split(hierarchicalSeparator);\n  return {\n    name: parts[parts.length - 1].trim(),\n    path: facetValue,\n    count: facetCount,\n    isRefined: currentRefinement === facetValue || currentRefinement.indexOf(facetValue + hierarchicalSeparator) === 0,\n    exhaustive: exhaustive,\n    data: null\n  };\n}","'use strict';\n\nfunction valToNumber(v) {\n  if (typeof v === 'number') {\n    return v;\n  } else if (typeof v === 'string') {\n    return parseFloat(v);\n  } else if (Array.isArray(v)) {\n    return v.map(valToNumber);\n  }\n\n  throw new Error('The value should be a number, a parsable string or an array of those.');\n}\n\nmodule.exports = valToNumber;","'use strict'; // @MAJOR can be replaced by native Array#findIndex when we change support\n\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n};","'use strict'; // https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source === null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key;\n  var i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","'use strict';\n\nvar merge = require('../functions/merge');\n\nvar defaultsPure = require('../functions/defaultsPure');\n\nvar orderBy = require('../functions/orderBy');\n\nvar compact = require('../functions/compact');\n\nvar find = require('../functions/find');\n\nvar findIndex = require('../functions/findIndex');\n\nvar formatSort = require('../functions/formatSort');\n\nvar generateHierarchicalTree = require('./generate-hierarchical-tree');\n/**\n * @typedef SearchResults.Facet\n * @type {object}\n * @property {string} name name of the attribute in the record\n * @property {object} data the faceting data: value, number of entries\n * @property {object} stats undefined unless facet_stats is retrieved from algolia\n */\n\n/**\n * @typedef SearchResults.HierarchicalFacet\n * @type {object}\n * @property {string} name name of the current value given the hierarchical level, trimmed.\n * If root node, you get the facet name\n * @property {number} count number of objects matching this hierarchical value\n * @property {string} path the current hierarchical value full path\n * @property {boolean} isRefined `true` if the current value was refined, `false` otherwise\n * @property {HierarchicalFacet[]} data sub values for the current level\n */\n\n/**\n * @typedef SearchResults.FacetValue\n * @type {object}\n * @property {string} name the facet value itself\n * @property {number} count times this facet appears in the results\n * @property {boolean} isRefined is the facet currently selected\n * @property {boolean} isExcluded is the facet currently excluded (only for conjunctive facets)\n */\n\n/**\n * @typedef Refinement\n * @type {object}\n * @property {string} type the type of filter used:\n * `numeric`, `facet`, `exclude`, `disjunctive`, `hierarchical`\n * @property {string} attributeName name of the attribute used for filtering\n * @property {string} name the value of the filter\n * @property {number} numericValue the value as a number. Only for numeric filters.\n * @property {string} operator the operator used. Only for numeric filters.\n * @property {number} count the number of computed hits for this filter. Only on facets.\n * @property {boolean} exhaustive if the count is exhaustive\n */\n\n/**\n * @param {string[]} attributes\n */\n\n\nfunction getIndices(attributes) {\n  var indices = {};\n  attributes.forEach(function (val, idx) {\n    indices[val] = idx;\n  });\n  return indices;\n}\n\nfunction assignFacetStats(dest, facetStats, key) {\n  if (facetStats && facetStats[key]) {\n    dest.stats = facetStats[key];\n  }\n}\n/**\n * @typedef {Object} HierarchicalFacet\n * @property {string} name\n * @property {string[]} attributes\n */\n\n/**\n * @param {HierarchicalFacet[]} hierarchicalFacets\n * @param {string} hierarchicalAttributeName\n */\n\n\nfunction findMatchingHierarchicalFacetFromAttributeName(hierarchicalFacets, hierarchicalAttributeName) {\n  return find(hierarchicalFacets, function facetKeyMatchesAttribute(hierarchicalFacet) {\n    var facetNames = hierarchicalFacet.attributes || [];\n    return facetNames.indexOf(hierarchicalAttributeName) > -1;\n  });\n}\n/*eslint-disable */\n\n/**\n * Constructor for SearchResults\n * @class\n * @classdesc SearchResults contains the results of a query to Algolia using the\n * {@link AlgoliaSearchHelper}.\n * @param {SearchParameters} state state that led to the response\n * @param {array.<object>} results the results from algolia client\n * @example <caption>SearchResults of the first query in\n * <a href=\"http://demos.algolia.com/instant-search-demo\">the instant search demo</a></caption>\n{\n   \"hitsPerPage\": 10,\n   \"processingTimeMS\": 2,\n   \"facets\": [\n      {\n         \"name\": \"type\",\n         \"data\": {\n            \"HardGood\": 6627,\n            \"BlackTie\": 550,\n            \"Music\": 665,\n            \"Software\": 131,\n            \"Game\": 456,\n            \"Movie\": 1571\n         },\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"Free shipping\": 5507\n         },\n         \"name\": \"shipping\"\n      }\n  ],\n   \"hits\": [\n      {\n         \"thumbnailImage\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_54x108_s.gif\",\n         \"_highlightResult\": {\n            \"shortDescription\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n               \"matchedWords\": []\n            },\n            \"category\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Computer Security Software\",\n               \"matchedWords\": []\n            },\n            \"manufacturer\": {\n               \"matchedWords\": [],\n               \"value\": \"Webroot\",\n               \"matchLevel\": \"none\"\n            },\n            \"name\": {\n               \"value\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n               \"matchedWords\": [],\n               \"matchLevel\": \"none\"\n            }\n         },\n         \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_105x210_sc.jpg\",\n         \"shipping\": \"Free shipping\",\n         \"bestSellingRank\": 4,\n         \"shortDescription\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n         \"url\": \"http://www.bestbuy.com/site/webroot-secureanywhere-internet-security-3-devi…d=1219060687969&skuId=1688832&cmp=RMX&ky=2d3GfEmNIzjA0vkzveHdZEBgpPCyMnLTJ\",\n         \"name\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n         \"category\": \"Computer Security Software\",\n         \"salePrice_range\": \"1 - 50\",\n         \"objectID\": \"1688832\",\n         \"type\": \"Software\",\n         \"customerReviewCount\": 5980,\n         \"salePrice\": 49.99,\n         \"manufacturer\": \"Webroot\"\n      },\n      ....\n  ],\n   \"nbHits\": 10000,\n   \"disjunctiveFacets\": [\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"5\": 183,\n            \"12\": 112,\n            \"7\": 149,\n            ...\n         },\n         \"name\": \"customerReviewCount\",\n         \"stats\": {\n            \"max\": 7461,\n            \"avg\": 157.939,\n            \"min\": 1\n         }\n      },\n      {\n         \"data\": {\n            \"Printer Ink\": 142,\n            \"Wireless Speakers\": 60,\n            \"Point & Shoot Cameras\": 48,\n            ...\n         },\n         \"name\": \"category\",\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"> 5000\": 2,\n            \"1 - 50\": 6524,\n            \"501 - 2000\": 566,\n            \"201 - 500\": 1501,\n            \"101 - 200\": 1360,\n            \"2001 - 5000\": 47\n         },\n         \"name\": \"salePrice_range\"\n      },\n      {\n         \"data\": {\n            \"Dynex™\": 202,\n            \"Insignia™\": 230,\n            \"PNY\": 72,\n            ...\n         },\n         \"name\": \"manufacturer\",\n         \"exhaustive\": false\n      }\n  ],\n   \"query\": \"\",\n   \"nbPages\": 100,\n   \"page\": 0,\n   \"index\": \"bestbuy\"\n}\n **/\n\n/*eslint-enable */\n\n\nfunction SearchResults(state, results) {\n  var mainSubResponse = results[0];\n  this._rawResults = results;\n  var self = this; // https://www.algolia.com/doc/api-reference/api-methods/search/#response\n\n  Object.keys(mainSubResponse).forEach(function (key) {\n    self[key] = mainSubResponse[key];\n  });\n  /**\n   * query used to generate the results\n   * @name query\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * The query as parsed by the engine given all the rules.\n   * @name parsedQuery\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * all the records that match the search parameters. Each record is\n   * augmented with a new attribute `_highlightResult`\n   * which is an object keyed by attribute and with the following properties:\n   *  - `value` : the value of the facet highlighted (html)\n   *  - `matchLevel`: full, partial or none depending on how the query terms match\n   * @name hits\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * index where the results come from\n   * @name index\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * number of hits per page requested\n   * @name hitsPerPage\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * total number of hits of this query on the index\n   * @name nbHits\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * total number of pages with respect to the number of hits per page and the total number of hits\n   * @name nbPages\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * current page\n   * @name page\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * The position if the position was guessed by IP.\n   * @name aroundLatLng\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"48.8637,2.3615\",\n   */\n\n  /**\n   * The radius computed by Algolia.\n   * @name automaticRadius\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"126792922\",\n   */\n\n  /**\n   * String identifying the server used to serve this request.\n   *\n   * getRankingInfo needs to be set to `true` for this to be returned\n   *\n   * @name serverUsed\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"c7-use-2.algolia.net\",\n   */\n\n  /**\n   * Boolean that indicates if the computation of the counts did time out.\n   * @deprecated\n   * @name timeoutCounts\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * Boolean that indicates if the computation of the hits did time out.\n   * @deprecated\n   * @name timeoutHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * True if the counts of the facets is exhaustive\n   * @name exhaustiveFacetsCount\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * True if the number of hits is exhaustive\n   * @name exhaustiveNbHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * Contains the userData if they are set by a [query rule](https://www.algolia.com/doc/guides/query-rules/query-rules-overview/).\n   * @name userData\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * queryID is the unique identifier of the query used to generate the current search results.\n   * This value is only available if the `clickAnalytics` search parameter is set to `true`.\n   * @name queryID\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * sum of the processing time of all the queries\n   * @member {number}\n   */\n\n  this.processingTimeMS = results.reduce(function (sum, result) {\n    return result.processingTimeMS === undefined ? sum : sum + result.processingTimeMS;\n  }, 0);\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.Facet[]}\n   */\n\n  this.disjunctiveFacets = [];\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.HierarchicalFacet[]}\n   */\n\n  this.hierarchicalFacets = state.hierarchicalFacets.map(function initFutureTree() {\n    return [];\n  });\n  /**\n   * other facets results\n   * @member {SearchResults.Facet[]}\n   */\n\n  this.facets = [];\n  var disjunctiveFacets = state.getRefinedDisjunctiveFacets();\n  var facetsIndices = getIndices(state.facets);\n  var disjunctiveFacetsIndices = getIndices(state.disjunctiveFacets);\n  var nextDisjunctiveResult = 1; // Since we send request only for disjunctive facets that have been refined,\n  // we get the facets information from the first, general, response.\n\n  var mainFacets = mainSubResponse.facets || {};\n  Object.keys(mainFacets).forEach(function (facetKey) {\n    var facetValueObject = mainFacets[facetKey];\n    var hierarchicalFacet = findMatchingHierarchicalFacetFromAttributeName(state.hierarchicalFacets, facetKey);\n\n    if (hierarchicalFacet) {\n      // Place the hierarchicalFacet data at the correct index depending on\n      // the attributes order that was defined at the helper initialization\n      var facetIndex = hierarchicalFacet.attributes.indexOf(facetKey);\n      var idxAttributeName = findIndex(state.hierarchicalFacets, function (f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      self.hierarchicalFacets[idxAttributeName][facetIndex] = {\n        attribute: facetKey,\n        data: facetValueObject,\n        exhaustive: mainSubResponse.exhaustiveFacetsCount\n      };\n    } else {\n      var isFacetDisjunctive = state.disjunctiveFacets.indexOf(facetKey) !== -1;\n      var isFacetConjunctive = state.facets.indexOf(facetKey) !== -1;\n      var position;\n\n      if (isFacetDisjunctive) {\n        position = disjunctiveFacetsIndices[facetKey];\n        self.disjunctiveFacets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], mainSubResponse.facets_stats, facetKey);\n      }\n\n      if (isFacetConjunctive) {\n        position = facetsIndices[facetKey];\n        self.facets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.facets[position], mainSubResponse.facets_stats, facetKey);\n      }\n    }\n  }); // Make sure we do not keep holes within the hierarchical facets\n\n  this.hierarchicalFacets = compact(this.hierarchicalFacets); // aggregate the refined disjunctive facets\n\n  disjunctiveFacets.forEach(function (disjunctiveFacet) {\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    var hierarchicalFacet = state.getHierarchicalFacetByName(disjunctiveFacet); // There should be only item in facets.\n\n    Object.keys(facets).forEach(function (dfacet) {\n      var facetResults = facets[dfacet];\n      var position;\n\n      if (hierarchicalFacet) {\n        position = findIndex(state.hierarchicalFacets, function (f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(self.hierarchicalFacets[position], function (f) {\n          return f.attribute === dfacet;\n        }); // previous refinements and no results so not able to find it\n\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = merge({}, self.hierarchicalFacets[position][attributeIndex].data, facetResults);\n      } else {\n        position = disjunctiveFacetsIndices[dfacet];\n        var dataFromMainRequest = mainSubResponse.facets && mainSubResponse.facets[dfacet] || {};\n        self.disjunctiveFacets[position] = {\n          name: dfacet,\n          data: defaultsPure({}, facetResults, dataFromMainRequest),\n          exhaustive: result.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], result.facets_stats, dfacet);\n\n        if (state.disjunctiveFacetsRefinements[dfacet]) {\n          state.disjunctiveFacetsRefinements[dfacet].forEach(function (refinementValue) {\n            // add the disjunctive refinements if it is no more retrieved\n            if (!self.disjunctiveFacets[position].data[refinementValue] && state.disjunctiveFacetsRefinements[dfacet].indexOf(refinementValue) > -1) {\n              self.disjunctiveFacets[position].data[refinementValue] = 0;\n            }\n          });\n        }\n      }\n    });\n    nextDisjunctiveResult++;\n  }); // if we have some root level values for hierarchical facets, merge them\n\n  state.getRefinedHierarchicalFacets().forEach(function (refinedFacet) {\n    var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var currentRefinement = state.getHierarchicalRefinement(refinedFacet); // if we are already at a root refinement (or no refinement at all), there is no\n    // root level values request\n\n    if (currentRefinement.length === 0 || currentRefinement[0].split(separator).length < 2) {\n      return;\n    }\n\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    Object.keys(facets).forEach(function (dfacet) {\n      var facetResults = facets[dfacet];\n      var position = findIndex(state.hierarchicalFacets, function (f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      var attributeIndex = findIndex(self.hierarchicalFacets[position], function (f) {\n        return f.attribute === dfacet;\n      }); // previous refinements and no results so not able to find it\n\n      if (attributeIndex === -1) {\n        return;\n      } // when we always get root levels, if the hits refinement is `beers > IPA` (count: 5),\n      // then the disjunctive values will be `beers` (count: 100),\n      // but we do not want to display\n      //   | beers (100)\n      //     > IPA (5)\n      // We want\n      //   | beers (5)\n      //     > IPA (5)\n\n\n      var defaultData = {};\n\n      if (currentRefinement.length > 0) {\n        var root = currentRefinement[0].split(separator)[0];\n        defaultData[root] = self.hierarchicalFacets[position][attributeIndex].data[root];\n      }\n\n      self.hierarchicalFacets[position][attributeIndex].data = defaultsPure(defaultData, facetResults, self.hierarchicalFacets[position][attributeIndex].data);\n    });\n    nextDisjunctiveResult++;\n  }); // add the excludes\n\n  Object.keys(state.facetsExcludes).forEach(function (facetName) {\n    var excludes = state.facetsExcludes[facetName];\n    var position = facetsIndices[facetName];\n    self.facets[position] = {\n      name: facetName,\n      data: mainSubResponse.facets[facetName],\n      exhaustive: mainSubResponse.exhaustiveFacetsCount\n    };\n    excludes.forEach(function (facetValue) {\n      self.facets[position] = self.facets[position] || {\n        name: facetName\n      };\n      self.facets[position].data = self.facets[position].data || {};\n      self.facets[position].data[facetValue] = 0;\n    });\n  });\n  /**\n   * @type {Array}\n   */\n\n  this.hierarchicalFacets = this.hierarchicalFacets.map(generateHierarchicalTree(state));\n  /**\n   * @type {Array}\n   */\n\n  this.facets = compact(this.facets);\n  /**\n   * @type {Array}\n   */\n\n  this.disjunctiveFacets = compact(this.disjunctiveFacets);\n  this._state = state;\n}\n/**\n * Get a facet object with its name\n * @deprecated\n * @param {string} name name of the faceted attribute\n * @return {SearchResults.Facet} the facet object\n */\n\n\nSearchResults.prototype.getFacetByName = function (name) {\n  function predicate(facet) {\n    return facet.name === name;\n  }\n\n  return find(this.facets, predicate) || find(this.disjunctiveFacets, predicate) || find(this.hierarchicalFacets, predicate);\n};\n/**\n * Get the facet values of a specified attribute from a SearchResults object.\n * @private\n * @param {SearchResults} results the search results to search in\n * @param {string} attribute name of the faceted attribute to search for\n * @return {array|object} facet values. For the hierarchical facets it is an object.\n */\n\n\nfunction extractNormalizedFacetValues(results, attribute) {\n  function predicate(facet) {\n    return facet.name === attribute;\n  }\n\n  if (results._state.isConjunctiveFacet(attribute)) {\n    var facet = find(results.facets, predicate);\n    if (!facet) return [];\n    return Object.keys(facet.data).map(function (name) {\n      return {\n        name: name,\n        count: facet.data[name],\n        isRefined: results._state.isFacetRefined(attribute, name),\n        isExcluded: results._state.isExcludeRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isDisjunctiveFacet(attribute)) {\n    var disjunctiveFacet = find(results.disjunctiveFacets, predicate);\n    if (!disjunctiveFacet) return [];\n    return Object.keys(disjunctiveFacet.data).map(function (name) {\n      return {\n        name: name,\n        count: disjunctiveFacet.data[name],\n        isRefined: results._state.isDisjunctiveFacetRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isHierarchicalFacet(attribute)) {\n    return find(results.hierarchicalFacets, predicate);\n  }\n}\n/**\n * Sort nodes of a hierarchical facet results\n * @private\n * @param {HierarchicalFacet} node node to upon which we want to apply the sort\n */\n\n\nfunction recSort(sortFn, node) {\n  if (!node.data || node.data.length === 0) {\n    return node;\n  }\n\n  var children = node.data.map(function (childNode) {\n    return recSort(sortFn, childNode);\n  });\n  var sortedChildren = sortFn(children);\n  var newNode = merge({}, node, {\n    data: sortedChildren\n  });\n  return newNode;\n}\n\nSearchResults.DEFAULT_SORT = ['isRefined:desc', 'count:desc', 'name:asc'];\n\nfunction vanillaSortFn(order, data) {\n  return data.sort(order);\n}\n/**\n * Get a the list of values for a given facet attribute. Those values are sorted\n * refinement first, descending count (bigger value on top), and name ascending\n * (alphabetical order). The sort formula can overridden using either string based\n * predicates or a function.\n *\n * This method will return all the values returned by the Algolia engine plus all\n * the values already refined. This means that it can happen that the\n * `maxValuesPerFacet` [configuration](https://www.algolia.com/doc/rest-api/search#param-maxValuesPerFacet)\n * might not be respected if you have facet values that are already refined.\n * @param {string} attribute attribute name\n * @param {object} opts configuration options.\n * @param {Array.<string> | function} opts.sortBy\n * When using strings, it consists of\n * the name of the [FacetValue](#SearchResults.FacetValue) or the\n * [HierarchicalFacet](#SearchResults.HierarchicalFacet) attributes with the\n * order (`asc` or `desc`). For example to order the value by count, the\n * argument would be `['count:asc']`.\n *\n * If only the attribute name is specified, the ordering defaults to the one\n * specified in the default value for this attribute.\n *\n * When not specified, the order is\n * ascending.  This parameter can also be a function which takes two facet\n * values and should return a number, 0 if equal, 1 if the first argument is\n * bigger or -1 otherwise.\n *\n * The default value for this attribute `['isRefined:desc', 'count:desc', 'name:asc']`\n * @return {FacetValue[]|HierarchicalFacet|undefined} depending on the type of facet of\n * the attribute requested (hierarchical, disjunctive or conjunctive)\n * @example\n * helper.on('result', function(event){\n *   //get values ordered only by name ascending using the string predicate\n *   event.results.getFacetValues('city', {sortBy: ['name:asc']});\n *   //get values  ordered only by count ascending using a function\n *   event.results.getFacetValues('city', {\n *     // this is equivalent to ['count:asc']\n *     sortBy: function(a, b) {\n *       if (a.count === b.count) return 0;\n *       if (a.count > b.count)   return 1;\n *       if (b.count > a.count)   return -1;\n *     }\n *   });\n * });\n */\n\n\nSearchResults.prototype.getFacetValues = function (attribute, opts) {\n  var facetValues = extractNormalizedFacetValues(this, attribute);\n\n  if (!facetValues) {\n    return undefined;\n  }\n\n  var options = defaultsPure({}, opts, {\n    sortBy: SearchResults.DEFAULT_SORT\n  });\n\n  if (Array.isArray(options.sortBy)) {\n    var order = formatSort(options.sortBy, SearchResults.DEFAULT_SORT);\n\n    if (Array.isArray(facetValues)) {\n      return orderBy(facetValues, order[0], order[1]);\n    } // If facetValues is not an array, it's an object thus a hierarchical facet object\n\n\n    return recSort(function (hierarchicalFacetValues) {\n      return orderBy(hierarchicalFacetValues, order[0], order[1]);\n    }, facetValues);\n  } else if (typeof options.sortBy === 'function') {\n    if (Array.isArray(facetValues)) {\n      return facetValues.sort(options.sortBy);\n    } // If facetValues is not an array, it's an object thus a hierarchical facet object\n\n\n    return recSort(function (data) {\n      return vanillaSortFn(options.sortBy, data);\n    }, facetValues);\n  }\n\n  throw new Error('options.sortBy is optional but if defined it must be ' + 'either an array of string (predicates) or a sorting function');\n};\n/**\n * Returns the facet stats if attribute is defined and the facet contains some.\n * Otherwise returns undefined.\n * @param {string} attribute name of the faceted attribute\n * @return {object} The stats of the facet\n */\n\n\nSearchResults.prototype.getFacetStats = function (attribute) {\n  if (this._state.isConjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.facets, attribute);\n  } else if (this._state.isDisjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.disjunctiveFacets, attribute);\n  }\n\n  return undefined;\n};\n/**\n * @typedef {Object} FacetListItem\n * @property {string} name\n */\n\n/**\n * @param {FacetListItem[]} facetList (has more items, but enough for here)\n * @param {string} facetName\n */\n\n\nfunction getFacetStatsIfAvailable(facetList, facetName) {\n  var data = find(facetList, function (facet) {\n    return facet.name === facetName;\n  });\n  return data && data.stats;\n}\n/**\n * Returns all refinements for all filters + tags. It also provides\n * additional information: count and exhaustiveness for each filter.\n *\n * See the [refinement type](#Refinement) for an exhaustive view of the available\n * data.\n *\n * Note that for a numeric refinement, results are grouped per operator, this\n * means that it will return responses for operators which are empty.\n *\n * @return {Array.<Refinement>} all the refinements\n */\n\n\nSearchResults.prototype.getRefinements = function () {\n  var state = this._state;\n  var results = this;\n  var res = [];\n  Object.keys(state.facetsRefinements).forEach(function (attributeName) {\n    state.facetsRefinements[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'facet', attributeName, name, results.facets));\n    });\n  });\n  Object.keys(state.facetsExcludes).forEach(function (attributeName) {\n    state.facetsExcludes[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'exclude', attributeName, name, results.facets));\n    });\n  });\n  Object.keys(state.disjunctiveFacetsRefinements).forEach(function (attributeName) {\n    state.disjunctiveFacetsRefinements[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'disjunctive', attributeName, name, results.disjunctiveFacets));\n    });\n  });\n  Object.keys(state.hierarchicalFacetsRefinements).forEach(function (attributeName) {\n    state.hierarchicalFacetsRefinements[attributeName].forEach(function (name) {\n      res.push(getHierarchicalRefinement(state, attributeName, name, results.hierarchicalFacets));\n    });\n  });\n  Object.keys(state.numericRefinements).forEach(function (attributeName) {\n    var operators = state.numericRefinements[attributeName];\n    Object.keys(operators).forEach(function (operator) {\n      operators[operator].forEach(function (value) {\n        res.push({\n          type: 'numeric',\n          attributeName: attributeName,\n          name: value,\n          numericValue: value,\n          operator: operator\n        });\n      });\n    });\n  });\n  state.tagRefinements.forEach(function (name) {\n    res.push({\n      type: 'tag',\n      attributeName: '_tags',\n      name: name\n    });\n  });\n  return res;\n};\n/**\n * @typedef {Object} Facet\n * @property {string} name\n * @property {Object} data\n * @property {boolean} exhaustive\n */\n\n/**\n * @param {*} state\n * @param {*} type\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\n\n\nfunction getRefinement(state, type, attributeName, name, resultsFacets) {\n  var facet = find(resultsFacets, function (f) {\n    return f.name === attributeName;\n  });\n  var count = facet && facet.data && facet.data[name] ? facet.data[name] : 0;\n  var exhaustive = facet && facet.exhaustive || false;\n  return {\n    type: type,\n    attributeName: attributeName,\n    name: name,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n/**\n * @param {*} state\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\n\n\nfunction getHierarchicalRefinement(state, attributeName, name, resultsFacets) {\n  var facetDeclaration = state.getHierarchicalFacetByName(attributeName);\n\n  var separator = state._getHierarchicalFacetSeparator(facetDeclaration);\n\n  var split = name.split(separator);\n  var rootFacet = find(resultsFacets, function (facet) {\n    return facet.name === attributeName;\n  });\n  var facet = split.reduce(function (intermediateFacet, part) {\n    var newFacet = intermediateFacet && find(intermediateFacet.data, function (f) {\n      return f.name === part;\n    });\n    return newFacet !== undefined ? newFacet : intermediateFacet;\n  }, rootFacet);\n  var count = facet && facet.count || 0;\n  var exhaustive = facet && facet.exhaustive || false;\n  var path = facet && facet.path || '';\n  return {\n    type: 'hierarchical',\n    attributeName: attributeName,\n    name: path,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\nmodule.exports = SearchResults;","'use strict';\n\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined;\n    var valIsNull = value === null;\n    var othIsDefined = other !== undefined;\n    var othIsNull = other === null;\n\n    if (!othIsNull && value > other || valIsNull && othIsDefined || !valIsDefined) {\n      return 1;\n    }\n\n    if (!valIsNull && value < other || othIsNull && valIsDefined || !othIsDefined) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n/**\n * @param {Array<object>} collection object with keys in attributes\n * @param {Array<string>} iteratees attributes\n * @param {Array<string>} orders asc | desc\n */\n\n\nfunction orderBy(collection, iteratees, orders) {\n  if (!Array.isArray(collection)) {\n    return [];\n  }\n\n  if (!Array.isArray(orders)) {\n    orders = [];\n  }\n\n  var result = collection.map(function (value, index) {\n    return {\n      criteria: iteratees.map(function (iteratee) {\n        return value[iteratee];\n      }),\n      index: index,\n      value: value\n    };\n  });\n  result.sort(function comparer(object, other) {\n    var index = -1;\n\n    while (++index < object.criteria.length) {\n      var res = compareAscending(object.criteria[index], other.criteria[index]);\n\n      if (res) {\n        if (index >= orders.length) {\n          return res;\n        }\n\n        if (orders[index] === 'desc') {\n          return -res;\n        }\n\n        return res;\n      }\n    } // This ensures a stable sort in V8 and other engines.\n    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\n\n    return object.index - other.index;\n  });\n  return result.map(function (res) {\n    return res.value;\n  });\n}\n\nmodule.exports = orderBy;"],"sourceRoot":""}